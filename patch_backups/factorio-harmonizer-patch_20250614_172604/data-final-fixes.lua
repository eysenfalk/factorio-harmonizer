-- Auto-generated compatibility patch
-- Generated by Factorio Mod Harmonizer
-- Resolves 337 conflict(s)

-- Patch: PATCH_SP-SPIDERLING_ALL_VARIANTS
-- Description: Recipe expansion for sp-spiderling - adds all mod variants as additional recipes
-- Fixes: MISSING_DEPS_SP-SPIDERLING


-- Comprehensive recipe expansion for sp-spiderling
-- Adds mod-specific recipe variants alongside original recipes
-- Affected mods: SpidertronPatrols
-- Severity: HIGH

-- Create additional recipe variants for each mod


-- SpidertronPatrols variant of sp-spiderling
if data.raw.recipe["sp-spiderling"] then
    local spidertronpatrols_variant = table.deepcopy(data.raw.recipe["sp-spiderling"])
    spidertronpatrols_variant.name = "sp-spiderling-spidertronpatrols-variant"
    spidertronpatrols_variant.localised_name = {"", "sp-spiderling", " (SpidertronPatrols Style)"}
    spidertronpatrols_variant.enabled = true
    spidertronpatrols_variant.order = (spidertronpatrols_variant.order or "a") .. "-spidertronpatrols-variant"
    spidertronpatrols_variant.hidden = false

    spidertronpatrols_variant.ingredients = {{type="item", name="nullius-large-chest-2", amount=2}, {type="item", name="nullius-sensor-2", amount=1}}
    spidertronpatrols_variant.results = {{type="item", name="sp-spiderling", amount=1}}
    
    data:extend({spidertronpatrols_variant})
end

-- Keep ALL original recipes active - no disabling!
-- Players can now choose between:
-- 1. Original sp-spiderling (current winner of mod conflicts)
-- 2. sp-spiderling-spidertronpatrols-variant (SpidertronPatrols style)


-- Patch: PATCH_NULLIUS-MECHA-REMOTE_ALL_VARIANTS
-- Description: Recipe expansion for nullius-mecha-remote - adds all mod variants as additional recipes
-- Fixes: MISSING_DEPS_NULLIUS-MECHA-REMOTE


-- Comprehensive recipe expansion for nullius-mecha-remote
-- Adds mod-specific recipe variants alongside original recipes
-- Affected mods: SpidertronPatrols
-- Severity: HIGH

-- Create additional recipe variants for each mod


-- SpidertronPatrols variant of nullius-mecha-remote
if data.raw.recipe["nullius-mecha-remote"] then
    local spidertronpatrols_variant = table.deepcopy(data.raw.recipe["nullius-mecha-remote"])
    spidertronpatrols_variant.name = "nullius-mecha-remote-spidertronpatrols-variant"
    spidertronpatrols_variant.localised_name = {"", "nullius-mecha-remote", " (SpidertronPatrols Style)"}
    spidertronpatrols_variant.enabled = true
    spidertronpatrols_variant.order = (spidertronpatrols_variant.order or "a") .. "-spidertronpatrols-variant"
    spidertronpatrols_variant.hidden = false

    spidertronpatrols_variant.ingredients = {{type="item", name="nullius-processor-1", amount=2}, {type="item", name="nullius-scout-remote", amount=1}}
    spidertronpatrols_variant.results = {{type="item", name="nullius-mecha-remote", amount=1}}
    
    data:extend({spidertronpatrols_variant})
end

-- Keep ALL original recipes active - no disabling!
-- Players can now choose between:
-- 1. Original nullius-mecha-remote (current winner of mod conflicts)
-- 2. nullius-mecha-remote-spidertronpatrols-variant (SpidertronPatrols style)


-- Patch: PATCH_ELECTRONICS_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for electronics with 3 alternative research paths
-- Fixes: MISSING_DEPS_ELECTRONICS


-- Comprehensive research compatibility patch for electronics
-- Fixes conflict between: Age-of-Production, lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["electronics"] then
    local tech = data.raw.technology["electronics"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "electronics-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "electronics-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "electronics-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_ORE-CRUSHING-PRODUCTIVITY-1_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for ore-crushing-productivity-1 with 3 alternative research paths
-- Fixes: MISSING_DEPS_ORE-CRUSHING-PRODUCTIVITY-1


-- Comprehensive research compatibility patch for ore-crushing-productivity-1
-- Fixes conflict between: crushing-industry-productivity-research, crushing-industry-productivity-research
-- Severity: HIGH

if data.raw.technology["ore-crushing-productivity-1"] then
    local tech = data.raw.technology["ore-crushing-productivity-1"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "ore-crushing-productivity-1-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "ore-crushing-productivity-1-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "ore-crushing-productivity-1-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_ORE-CRUSHING-PRODUCTIVITY-2_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for ore-crushing-productivity-2 with 3 alternative research paths
-- Fixes: MISSING_DEPS_ORE-CRUSHING-PRODUCTIVITY-2


-- Comprehensive research compatibility patch for ore-crushing-productivity-2
-- Fixes conflict between: crushing-industry-productivity-research, crushing-industry-productivity-research
-- Severity: HIGH

if data.raw.technology["ore-crushing-productivity-2"] then
    local tech = data.raw.technology["ore-crushing-productivity-2"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "ore-crushing-productivity-2-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "ore-crushing-productivity-2-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "ore-crushing-productivity-2-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_ORE-CRUSHING-PRODUCTIVITY-3_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for ore-crushing-productivity-3 with 3 alternative research paths
-- Fixes: MISSING_DEPS_ORE-CRUSHING-PRODUCTIVITY-3


-- Comprehensive research compatibility patch for ore-crushing-productivity-3
-- Fixes conflict between: crushing-industry-productivity-research, crushing-industry-productivity-research
-- Severity: HIGH

if data.raw.technology["ore-crushing-productivity-3"] then
    local tech = data.raw.technology["ore-crushing-productivity-3"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "ore-crushing-productivity-3-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "ore-crushing-productivity-3-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "ore-crushing-productivity-3-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_ELEVATED-RAIL_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for elevated-rail with 3 alternative research paths
-- Fixes: MISSING_DEPS_ELEVATED-RAIL


-- Comprehensive research compatibility patch for elevated-rail
-- Fixes conflict between: EarlyvatedRails, EarlyvatedRails
-- Severity: HIGH

if data.raw.technology["elevated-rail"] then
    local tech = data.raw.technology["elevated-rail"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "elevated-rail-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "elevated-rail-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "elevated-rail-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_TREE-SEEDING_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for tree-seeding with 3 alternative research paths
-- Fixes: MISSING_DEPS_TREE-SEEDING


-- Comprehensive research compatibility patch for tree-seeding
-- Fixes conflict between: gleba-reborn, gleba-reborn, gleba-reborn, lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["tree-seeding"] then
    local tech = data.raw.technology["tree-seeding"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "tree-seeding-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "tree-seeding-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "tree-seeding-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_STEAM-POWER_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for steam-power with 3 alternative research paths
-- Fixes: MISSING_DEPS_STEAM-POWER


-- Comprehensive research compatibility patch for steam-power
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["steam-power"] then
    local tech = data.raw.technology["steam-power"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "steam-power-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "steam-power-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "steam-power-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_LANDFILL_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for landfill with 3 alternative research paths
-- Fixes: MISSING_DEPS_LANDFILL


-- Comprehensive research compatibility patch for landfill
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["landfill"] then
    local tech = data.raw.technology["landfill"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "landfill-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "landfill-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "landfill-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_WORKER-ROBOTS-SPEED-1_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for worker-robots-speed-1 with 3 alternative research paths
-- Fixes: MISSING_DEPS_WORKER-ROBOTS-SPEED-1


-- Comprehensive research compatibility patch for worker-robots-speed-1
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["worker-robots-speed-1"] then
    local tech = data.raw.technology["worker-robots-speed-1"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "worker-robots-speed-1-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "worker-robots-speed-1-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "worker-robots-speed-1-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_WORKER-ROBOTS-SPEED-2_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for worker-robots-speed-2 with 3 alternative research paths
-- Fixes: MISSING_DEPS_WORKER-ROBOTS-SPEED-2


-- Comprehensive research compatibility patch for worker-robots-speed-2
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["worker-robots-speed-2"] then
    local tech = data.raw.technology["worker-robots-speed-2"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "worker-robots-speed-2-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "worker-robots-speed-2-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "worker-robots-speed-2-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_WORKER-ROBOTS-SPEED-3_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for worker-robots-speed-3 with 3 alternative research paths
-- Fixes: MISSING_DEPS_WORKER-ROBOTS-SPEED-3


-- Comprehensive research compatibility patch for worker-robots-speed-3
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["worker-robots-speed-3"] then
    local tech = data.raw.technology["worker-robots-speed-3"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "worker-robots-speed-3-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "worker-robots-speed-3-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "worker-robots-speed-3-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_WORKER-ROBOTS-SPEED-4_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for worker-robots-speed-4 with 3 alternative research paths
-- Fixes: MISSING_DEPS_WORKER-ROBOTS-SPEED-4


-- Comprehensive research compatibility patch for worker-robots-speed-4
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["worker-robots-speed-4"] then
    local tech = data.raw.technology["worker-robots-speed-4"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "worker-robots-speed-4-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "worker-robots-speed-4-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "worker-robots-speed-4-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_PHYSICAL-PROJECTILE-DAMAGE-1_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for physical-projectile-damage-1 with 3 alternative research paths
-- Fixes: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-1


-- Comprehensive research compatibility patch for physical-projectile-damage-1
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["physical-projectile-damage-1"] then
    local tech = data.raw.technology["physical-projectile-damage-1"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "physical-projectile-damage-1-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "physical-projectile-damage-1-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "physical-projectile-damage-1-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_PHYSICAL-PROJECTILE-DAMAGE-2_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for physical-projectile-damage-2 with 3 alternative research paths
-- Fixes: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-2


-- Comprehensive research compatibility patch for physical-projectile-damage-2
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["physical-projectile-damage-2"] then
    local tech = data.raw.technology["physical-projectile-damage-2"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "physical-projectile-damage-2-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "physical-projectile-damage-2-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "physical-projectile-damage-2-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_WEAPON-SHOOTING-SPEED-2_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for weapon-shooting-speed-2 with 3 alternative research paths
-- Fixes: MISSING_DEPS_WEAPON-SHOOTING-SPEED-2


-- Comprehensive research compatibility patch for weapon-shooting-speed-2
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["weapon-shooting-speed-2"] then
    local tech = data.raw.technology["weapon-shooting-speed-2"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "weapon-shooting-speed-2-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "weapon-shooting-speed-2-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "weapon-shooting-speed-2-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_PHYSICAL-PROJECTILE-DAMAGE-3_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for physical-projectile-damage-3 with 3 alternative research paths
-- Fixes: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-3


-- Comprehensive research compatibility patch for physical-projectile-damage-3
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["physical-projectile-damage-3"] then
    local tech = data.raw.technology["physical-projectile-damage-3"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "physical-projectile-damage-3-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "physical-projectile-damage-3-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "physical-projectile-damage-3-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_WEAPON-SHOOTING-SPEED-3_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for weapon-shooting-speed-3 with 3 alternative research paths
-- Fixes: MISSING_DEPS_WEAPON-SHOOTING-SPEED-3


-- Comprehensive research compatibility patch for weapon-shooting-speed-3
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["weapon-shooting-speed-3"] then
    local tech = data.raw.technology["weapon-shooting-speed-3"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "weapon-shooting-speed-3-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "weapon-shooting-speed-3-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "weapon-shooting-speed-3-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_PHYSICAL-PROJECTILE-DAMAGE-4_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for physical-projectile-damage-4 with 3 alternative research paths
-- Fixes: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-4


-- Comprehensive research compatibility patch for physical-projectile-damage-4
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["physical-projectile-damage-4"] then
    local tech = data.raw.technology["physical-projectile-damage-4"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "physical-projectile-damage-4-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "physical-projectile-damage-4-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "physical-projectile-damage-4-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_WEAPON-SHOOTING-SPEED-4_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for weapon-shooting-speed-4 with 3 alternative research paths
-- Fixes: MISSING_DEPS_WEAPON-SHOOTING-SPEED-4


-- Comprehensive research compatibility patch for weapon-shooting-speed-4
-- Fixes conflict between: lignumis, lignumis
-- Severity: HIGH

if data.raw.technology["weapon-shooting-speed-4"] then
    local tech = data.raw.technology["weapon-shooting-speed-4"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    local basic_tech = {
        type = "technology",
        name = "weapon-shooting-speed-4-basic",
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }
    
    -- Only add icon if original has one
    if tech.icon then
        basic_tech.icon = tech.icon
        basic_tech.icon_size = tech.icon_size or 256
    end
    
    data:extend({basic_tech})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        local advanced_tech = {
            type = "technology",
            name = "weapon-shooting-speed-4-advanced",
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            advanced_tech.icon = tech.icon
            advanced_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({advanced_tech})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        local space_tech = {
            type = "technology",
            name = "weapon-shooting-speed-4-space",
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }
        
        -- Only add icon if original has one
        if tech.icon then
            space_tech.icon = tech.icon
            space_tech.icon_size = tech.icon_size or 256
        end
        
        data:extend({space_tech})
    end
end


-- Patch: PATCH_ELECTRIC-MINING-DRILL_GENERIC
-- Description: Generic compatibility patch for item electric-mining-drill
-- Fixes: CONFLICT_ITEM_ELECTRIC-MINING-DRILL


-- Generic compatibility patch for electric-mining-drill
-- Fixes conflict between: Krastorio2-spaced-out, aai-industry, bobmining, OmegaDrill
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electric-mining-drill"] then
    local item = data.raw.item["electric-mining-drill"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electric-mining-drill-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electric-mining-drill-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEEL-PLATE_GENERIC
-- Description: Generic compatibility patch for item steel-plate
-- Fixes: CONFLICT_ITEM_STEEL-PLATE


-- Generic compatibility patch for steel-plate
-- Fixes conflict between: More_Ammo, alloy-smelting, More_Repair_Packs, secretas, foundry-restructuring, ballistic_missile, Cerys-Moon-of-Fulgora, Cold_biters, minimalist-rails, snouz_better_substation, aai-industry, vtk-cannon-turret, aai-vehicles-flame-tank, aquilo-seabloom-algaculture, bobpower, lex-aircraft, slp-dyson-sphere-reworked, PlutoniumEnergy, bobequipment, castra, cubium, aai-vehicles-flame-tumbler, StopgapNukes, aai-vehicles-laser-tank, HelicopterRevival, bobvehicleequipment, Fluid-level-indicator, aai-vehicles-ironclad, se-space-trains, bobplates, quirkycat_machines, Hovercrafts, FluidMustFlow, Krastorio2-spaced-out, bobmining, Warehousing, tenebris-prime, bobenemies, aai-signal-transmission, crushing-industry, bobassembly, shield-projector, Aircraft-space-age, Robocharger-Updated, OmegaDrill, atan-nuclear-science, grappling-gun, boblogistics, corrundum, dea-dia-system, metal-and-stars, lilys-cubeine, VoidProcessing, bobmodules, Flare Stack, Planet-Hopper, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steel-plate"] then
    local item = data.raw.item["steel-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steel-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steel-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRIC-ENGINE-UNIT_GENERIC
-- Description: Generic compatibility patch for item electric-engine-unit
-- Fixes: CONFLICT_ITEM_ELECTRIC-ENGINE-UNIT


-- Generic compatibility patch for electric-engine-unit
-- Fixes conflict between: secretas, ballistic_missile, aai-industry, lex-aircraft, castra, cubium, bobvehicleequipment, bobplates, Hovercrafts, Krastorio2-spaced-out, Kux-OrbitalIonCannon, crushing-industry, aai-signal-transmission, Aircraft-space-age, RampantFixed, OmegaDrill, boblogistics, corrundum, dea-dia-system, orbital-transfer
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electric-engine-unit"] then
    local item = data.raw.item["electric-engine-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electric-engine-unit-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electric-engine-unit-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PROCESSING-UNIT_GENERIC
-- Description: Generic compatibility patch for item processing-unit
-- Fixes: CONFLICT_ITEM_PROCESSING-UNIT


-- Generic compatibility patch for processing-unit
-- Fixes conflict between: More_Repair_Packs, secretas, ballistic_missile, Cerys-Moon-of-Fulgora, astroponics, aai-industry, bobpower, lex-aircraft, slp-dyson-sphere-reworked, PlutoniumEnergy, bobequipment, castra, cubium, atomic-artillery-reborn, bobelectronics, StopgapNukes, HelicopterRevival, bobvehicleequipment, cerys-lunaponics, Moshine, se-space-trains, bobplates, Hovercrafts, Krastorio2-spaced-out, bobmining, Kux-OrbitalIonCannon, crushing-industry, aai-signal-transmission, fulgora-coralmium-agriculture, bobassembly, enemyracemanager, Aircraft-space-age, janus, shield-projector, RampantFixed, OmegaDrill, atan-nuclear-science, boblogistics, corrundum, metal-and-stars, orbital-transfer, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["processing-unit"] then
    local item = data.raw.item["processing-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "processing-unit-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "processing-unit-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CONCRETE_GENERIC
-- Description: Generic compatibility patch for item concrete
-- Fixes: CONFLICT_ITEM_CONCRETE


-- Generic compatibility patch for concrete
-- Fixes conflict between: alloy-smelting, secretas, snouz-big-accumulator, ballistic_missile, Cerys-Moon-of-Fulgora, astroponics, Moshine-assets, aai-industry, bobpower, PlutoniumEnergy, cubium, Moshine, snouz-big-solar-panel, Krastorio2-spaced-out, Warehousing, tenebris-prime, crushing-industry, fulgora-coralmium-agriculture, atan-nuclear-science, corrundum, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["concrete"] then
    local item = data.raw.item["concrete"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "concrete-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "concrete-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRIC-FURNACE_GENERIC
-- Description: Generic compatibility patch for item electric-furnace
-- Fixes: CONFLICT_ITEM_ELECTRIC-FURNACE


-- Generic compatibility patch for electric-furnace
-- Fixes conflict between: cubium, bobplates, Krastorio2-spaced-out, lilys-cubeine, Electric Furnaces, aai-industry, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electric-furnace"] then
    local item = data.raw.item["electric-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electric-furnace-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electric-furnace-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-PLATE_GENERIC
-- Description: Generic compatibility patch for item iron-plate
-- Fixes: CONFLICT_ITEM_IRON-PLATE


-- Generic compatibility patch for iron-plate
-- Fixes conflict between: More_Ammo, secretas, aai-vehicles-warden, DoubleWagons, aai-vehicles-hauler, aai-industry, vtk-cannon-turret, bobpower, lex-aircraft, PlutoniumEnergy, bobequipment, castra, cubium, wood-military, StopgapNukes, Moshine, equipment-gantry, bobgreenhouse, bobplates, aai-vehicles-chaingunner, FluidMustFlow, Krastorio2-spaced-out, bobmining, quirkycat_boron, tenebris-prime, crushing-industry, bobassembly, Aircraft-space-age, boblogistics, corrundum, dea-dia-system, metal-and-stars, terrapalus, planet-muluna, Flare Stack, Electric Furnaces, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-plate"] then
    local item = data.raw.item["iron-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE-BRICK_GENERIC
-- Description: Generic compatibility patch for item stone-brick
-- Fixes: CONFLICT_ITEM_STONE-BRICK


-- Generic compatibility patch for stone-brick
-- Fixes conflict between: castra, cubium, bobplates, alloy-smelting, lignumis, boblogistics, dea-dia-system, metal-and-stars, Warehousing, Cerys-Moon-of-Fulgora, planet-muluna, tenebris-prime, crushing-industry, aai-industry, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone-brick"] then
    local item = data.raw.item["stone-brick"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-brick-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-brick-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE-WALL_GENERIC
-- Description: Generic compatibility patch for item stone-wall
-- Fixes: CONFLICT_ITEM_STONE-WALL


-- Generic compatibility patch for stone-wall
-- Fixes conflict between: cubium, aai-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone-wall"] then
    local item = data.raw.item["stone-wall"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-wall-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-wall-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BURNER-ASSEMBLING-MACHINE_GENERIC
-- Description: Generic compatibility patch for item burner-assembling-machine
-- Fixes: CONFLICT_ITEM_BURNER-ASSEMBLING-MACHINE


-- Generic compatibility patch for burner-assembling-machine
-- Fixes conflict between: aai-industry, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["burner-assembling-machine"] then
    local item = data.raw.item["burner-assembling-machine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "burner-assembling-machine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "burner-assembling-machine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SAND_GENERIC
-- Description: Generic compatibility patch for item sand
-- Fixes: CONFLICT_ITEM_SAND


-- Generic compatibility patch for sand
-- Fixes conflict between: quirkycat_base, wood-industry, crushing-industry, Moshine-assets, aai-industry, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["sand"] then
    local item = data.raw.item["sand"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "sand-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "sand-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE_GENERIC
-- Description: Generic compatibility patch for item stone
-- Fixes: CONFLICT_ITEM_STONE


-- Generic compatibility patch for stone
-- Fixes conflict between: bobgreenhouse, cubium, bobplates, vulcanus-sulfuric-bacteria, secretas, Moshine-assets, boblogistics, corrundum, metal-and-stars, Krastorio2-spaced-out, wood-industry, crushing-industry, fulgora-coralmium-agriculture, aai-industry, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone"] then
    local item = data.raw.item["stone"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GLASS_GENERIC
-- Description: Generic compatibility patch for item glass
-- Fixes: CONFLICT_ITEM_GLASS


-- Generic compatibility patch for glass
-- Fixes conflict between: Moshine, aai-industry, quirkycat_base, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["glass"] then
    local item = data.raw.item["glass"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "glass-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "glass-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-GEAR-WHEEL_GENERIC
-- Description: Generic compatibility patch for item iron-gear-wheel
-- Fixes: CONFLICT_ITEM_IRON-GEAR-WHEEL


-- Generic compatibility patch for iron-gear-wheel
-- Fixes conflict between: secretas, foundry-restructuring, aai-vehicles-warden, DoubleWagons, aai-vehicles-hauler, aai-industry, aai-vehicles-flame-tank, bobpower, bobequipment, castra, cubium, HelicopterRevival, bobvehicleequipment, aai-vehicles-ironclad, bobplates, aai-vehicles-chaingunner, Hovercrafts, FluidMustFlow, Krastorio2-spaced-out, bobmining, crushing-industry, bobenemies, bobassembly, Robocharger-Updated, OmegaDrill, grappling-gun, boblogistics, corrundum, dea-dia-system, lilys-cubeine, Flare Stack, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-gear-wheel"] then
    local item = data.raw.item["iron-gear-wheel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-gear-wheel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-gear-wheel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COPPER-CABLE_GENERIC
-- Description: Generic compatibility patch for item copper-cable
-- Fixes: CONFLICT_ITEM_COPPER-CABLE


-- Generic compatibility patch for copper-cable
-- Fixes conflict between: bobvehicleequipment, bobequipment, castra, se-space-trains, lignumis, secretas, boblogistics, bobelectronics, corrundum, Krastorio2-spaced-out, snouz-big-accumulator, terrapalus, Cerys-Moon-of-Fulgora, bobmodules, TimeTools, aai-industry, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["copper-cable"] then
    local item = data.raw.item["copper-cable"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "copper-cable-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "copper-cable-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-STICK_GENERIC
-- Description: Generic compatibility patch for item iron-stick
-- Fixes: CONFLICT_ITEM_IRON-STICK


-- Generic compatibility patch for iron-stick
-- Fixes conflict between: grappling-gun, boblogistics, corrundum, wood-military, Krastorio2-spaced-out, minimalist-rails, aai-industry, HelicopterRevival
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-stick"] then
    local item = data.raw.item["iron-stick"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-stick-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-stick-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COPPER-PLATE_GENERIC
-- Description: Generic compatibility patch for item copper-plate
-- Fixes: CONFLICT_ITEM_COPPER-PLATE


-- Generic compatibility patch for copper-plate
-- Fixes conflict between: More_Ammo, secretas, Cerys-Moon-of-Fulgora, aai-industry, bobpower, PlutoniumEnergy, bobequipment, castra, cubium, bobelectronics, wood-military, bobvehicleequipment, bobgreenhouse, bobplates, Krastorio2-spaced-out, crushing-industry, aai-signal-transmission, bobassembly, lignumis, boblogistics, corrundum, Igrys, lilys-cubeine, bobmodules, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["copper-plate"] then
    local item = data.raw.item["copper-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "copper-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "copper-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE-FURNACE_GENERIC
-- Description: Generic compatibility patch for item stone-furnace
-- Fixes: CONFLICT_ITEM_STONE-FURNACE


-- Generic compatibility patch for stone-furnace
-- Fixes conflict between: bobplates, alloy-smelting, Flare Stack, Electric Furnaces, aai-industry, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone-furnace"] then
    local item = data.raw.item["stone-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-furnace-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-furnace-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BATTERY_GENERIC
-- Description: Generic compatibility patch for item battery
-- Fixes: CONFLICT_ITEM_BATTERY


-- Generic compatibility patch for battery
-- Fixes conflict between: secretas, Cold_biters, bobpower, bobequipment, castra, aai-vehicles-laser-tank, HelicopterRevival, bobvehicleequipment, se-space-trains, Krastorio2-spaced-out, Kux-OrbitalIonCannon, aai-signal-transmission, shield-projector, janus, Robocharger-Updated, Aircraft-space-age, boblogistics, metal-and-stars, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["battery"] then
    local item = data.raw.item["battery"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "battery-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "battery-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GUN-TURRET_GENERIC
-- Description: Generic compatibility patch for item gun-turret
-- Fixes: CONFLICT_ITEM_GUN-TURRET


-- Generic compatibility patch for gun-turret
-- Fixes conflict between: aai-vehicles-chaingunner, secretas, Hovercrafts, Krastorio2-spaced-out, vtk-cannon-turret, HelicopterRevival
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gun-turret"] then
    local item = data.raw.item["gun-turret"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gun-turret-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gun-turret-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ENGINE-UNIT_GENERIC
-- Description: Generic compatibility patch for item engine-unit
-- Fixes: CONFLICT_ITEM_ENGINE-UNIT


-- Generic compatibility patch for engine-unit
-- Fixes conflict between: aai-vehicles-ironclad, castra, cubium, aai-vehicles-flame-tumbler, foundry-restructuring, Hovercrafts, FluidMustFlow, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, crushing-industry, aai-vehicles-flame-tank, HelicopterRevival
-- Severity: MEDIUM
-- Type: item


if data.raw.item["engine-unit"] then
    local item = data.raw.item["engine-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "engine-unit-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "engine-unit-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLAMETHROWER_GENERIC
-- Description: Generic compatibility patch for item flamethrower
-- Fixes: CONFLICT_ITEM_FLAMETHROWER


-- Generic compatibility patch for flamethrower
-- Fixes conflict between: aai-vehicles-flame-tank, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["flamethrower"] then
    local item = data.raw.item["flamethrower"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "flamethrower-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "flamethrower-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ADVANCED-CIRCUIT_GENERIC
-- Description: Generic compatibility patch for item advanced-circuit
-- Fixes: CONFLICT_ITEM_ADVANCED-CIRCUIT


-- Generic compatibility patch for advanced-circuit
-- Fixes conflict between: alloy-smelting, More_Repair_Packs, secretas, ballistic_missile, Cerys-Moon-of-Fulgora, vtk-cannon-turret, bobpower, lex-aircraft, PlutoniumEnergy, bobequipment, castra, cubium, aai-vehicles-flame-tumbler, bobelectronics, StopgapNukes, aai-vehicles-laser-tank, Moshine, bobvehicleequipment, bobplates, Hovercrafts, Krastorio2-spaced-out, Warehousing, bobmining, tenebris-prime, crushing-industry, bobenemies, bobassembly, Aircraft-space-age, janus, Robocharger-Updated, OmegaDrill, PavementDriveAssistContinued, boblogistics, dea-dia-system, metal-and-stars, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["advanced-circuit"] then
    local item = data.raw.item["advanced-circuit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "advanced-circuit-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "advanced-circuit-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-CHEST_GENERIC
-- Description: Generic compatibility patch for item iron-chest
-- Fixes: CONFLICT_ITEM_IRON-CHEST


-- Generic compatibility patch for iron-chest
-- Fixes conflict between: equipment-gantry, metal-and-stars, aai-vehicles-warden, Warehousing, aai-vehicles-hauler
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-chest"] then
    local item = data.raw.item["iron-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-chest-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-chest-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GRENADE_GENERIC
-- Description: Generic compatibility patch for item grenade
-- Fixes: CONFLICT_ITEM_GRENADE


-- Generic compatibility patch for grenade
-- Fixes conflict between: cubium, aai-vehicles-ironclad, Cold_biters, castra
-- Severity: MEDIUM
-- Type: item


if data.raw.item["grenade"] then
    local item = data.raw.item["grenade"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "grenade-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "grenade-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVES_GENERIC
-- Description: Generic compatibility patch for item explosives
-- Fixes: CONFLICT_ITEM_EXPLOSIVES


-- Generic compatibility patch for explosives
-- Fixes conflict between: aai-vehicles-ironclad, PlutoniumEnergy, castra, corrundum, Krastorio2-spaced-out, StopgapNukes, vtk-cannon-turret, Aircraft-space-age
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosives"] then
    local item = data.raw.item["explosives"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosives-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosives-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TANK_GENERIC
-- Description: Generic compatibility patch for item tank
-- Fixes: CONFLICT_ITEM_TANK


-- Generic compatibility patch for tank
-- Fixes conflict between: aai-vehicles-laser-tank, lex-aircraft, Krastorio2-spaced-out, castra
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tank"] then
    local item = data.raw.item["tank"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tank-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tank-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LASER-TURRET_GENERIC
-- Description: Generic compatibility patch for item laser-turret
-- Fixes: CONFLICT_ITEM_LASER-TURRET


-- Generic compatibility patch for laser-turret
-- Fixes conflict between: secretas, Hovercrafts, terrapalus, Kux-OrbitalIonCannon, aai-vehicles-laser-tank
-- Severity: MEDIUM
-- Type: item


if data.raw.item["laser-turret"] then
    local item = data.raw.item["laser-turret"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "laser-turret-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "laser-turret-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SOLID-FUEL_GENERIC
-- Description: Generic compatibility patch for item solid-fuel
-- Fixes: CONFLICT_ITEM_SOLID-FUEL


-- Generic compatibility patch for solid-fuel
-- Fixes conflict between: cubium, bobplates, secretas, corrundum, metal-and-stars, Krastorio2-spaced-out, wood-industry, Cerys-Moon-of-Fulgora, planet-muluna, aai-vehicles-laser-tank, Aircraft-space-age
-- Severity: MEDIUM
-- Type: item


if data.raw.item["solid-fuel"] then
    local item = data.raw.item["solid-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "solid-fuel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "solid-fuel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRONIC-CIRCUIT_GENERIC
-- Description: Generic compatibility patch for item electronic-circuit
-- Fixes: CONFLICT_ITEM_ELECTRONIC-CIRCUIT


-- Generic compatibility patch for electronic-circuit
-- Fixes conflict between: More_Repair_Packs, aai-vehicles-warden, TimeTools, Cerys-Moon-of-Fulgora, vtk-cannon-turret, bobpower, aquilo-seabloom-algaculture, lex-aircraft, bobequipment, castra, cubium, bobelectronics, wood-military, Moshine, bobvehicleequipment, bobplates, Krastorio2-spaced-out, bobmining, tenebris-prime, crushing-industry, bobassembly, Aircraft-space-age, janus, lignumis, boblogistics, corrundum, dea-dia-system, metal-and-stars, terrapalus, bobmodules, Flare Stack, Electric Furnaces, Automatic_Train_Painter, Planet-Hopper, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electronic-circuit"] then
    local item = data.raw.item["electronic-circuit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electronic-circuit-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electronic-circuit-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RADAR_GENERIC
-- Description: Generic compatibility patch for item radar
-- Fixes: CONFLICT_ITEM_RADAR


-- Generic compatibility patch for radar
-- Fixes conflict between: RampantFixed, PlutoniumEnergy, slp-dyson-sphere-reworked, castra, atomic-artillery-reborn, aai-vehicles-warden, Krastorio2-spaced-out, Kux-OrbitalIonCannon, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["radar"] then
    local item = data.raw.item["radar"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "radar-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "radar-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COAL_GENERIC
-- Description: Generic compatibility patch for item coal
-- Fixes: CONFLICT_ITEM_COAL


-- Generic compatibility patch for coal
-- Fixes conflict between: cubium, bobplates, alloy-smelting, vulcanus-sulfuric-bacteria, grappling-gun, bobelectronics, aai-vehicles-warden, metal-and-stars, Krastorio2-spaced-out, Moshine, quirkycat_machines, crushing-industry, Moshine-assets, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["coal"] then
    local item = data.raw.item["coal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "coal-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "coal-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUBMACHINE-GUN_GENERIC
-- Description: Generic compatibility patch for item submachine-gun
-- Fixes: CONFLICT_ITEM_SUBMACHINE-GUN


-- Generic compatibility patch for submachine-gun
-- Fixes conflict between: Krastorio2-spaced-out, lex-aircraft, Aircraft-space-age
-- Severity: MEDIUM
-- Type: item


if data.raw.item["submachine-gun"] then
    local item = data.raw.item["submachine-gun"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "submachine-gun-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "submachine-gun-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET-LAUNCHER_GENERIC
-- Description: Generic compatibility patch for item rocket-launcher
-- Fixes: CONFLICT_ITEM_ROCKET-LAUNCHER


-- Generic compatibility patch for rocket-launcher
-- Fixes conflict between: lex-aircraft, Hovercrafts, Krastorio2-spaced-out, Aircraft-space-age, HelicopterRevival
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket-launcher"] then
    local item = data.raw.item["rocket-launcher"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-launcher-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-launcher-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LOW-DENSITY-STRUCTURE_GENERIC
-- Description: Generic compatibility patch for item low-density-structure
-- Fixes: CONFLICT_ITEM_LOW-DENSITY-STRUCTURE


-- Generic compatibility patch for low-density-structure
-- Fixes conflict between: More_Repair_Packs, secretas, Cerys-Moon-of-Fulgora, astroponics, lex-aircraft, PlutoniumEnergy, bobequipment, castra, cubium, StopgapNukes, bobvehicleequipment, Hovercrafts, Krastorio2-spaced-out, Kux-OrbitalIonCannon, fulgora-coralmium-agriculture, shield-projector, janus, Aircraft-space-age, RampantFixed, lignumis, metal-and-stars, lilys-cubeine, orbital-transfer
-- Severity: MEDIUM
-- Type: item


if data.raw.item["low-density-structure"] then
    local item = data.raw.item["low-density-structure"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "low-density-structure-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "low-density-structure-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVE-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item explosive-cannon-shell
-- Fixes: CONFLICT_ITEM_EXPLOSIVE-CANNON-SHELL


-- Generic compatibility patch for explosive-cannon-shell
-- Fixes conflict between: StopgapNukes, PlutoniumEnergy, Aircraft-space-age
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosive-cannon-shell"] then
    local item = data.raw.item["explosive-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosive-cannon-shell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosive-cannon-shell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLAMETHROWER-AMMO_GENERIC
-- Description: Generic compatibility patch for item flamethrower-ammo
-- Fixes: CONFLICT_ITEM_FLAMETHROWER-AMMO


-- Generic compatibility patch for flamethrower-ammo
-- Fixes conflict between: StopgapNukes, Aircraft-space-age
-- Severity: MEDIUM
-- Type: item


if data.raw.item["flamethrower-ammo"] then
    local item = data.raw.item["flamethrower-ammo"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "flamethrower-ammo-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "flamethrower-ammo-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ENERGY-SHIELD-MK2-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item energy-shield-mk2-equipment
-- Fixes: CONFLICT_ITEM_ENERGY-SHIELD-MK2-EQUIPMENT


-- Generic compatibility patch for energy-shield-mk2-equipment
-- Fixes conflict between: bobequipment, castra, Hovercrafts, Krastorio2-spaced-out, Aircraft-space-age
-- Severity: MEDIUM
-- Type: item


if data.raw.item["energy-shield-mk2-equipment"] then
    local item = data.raw.item["energy-shield-mk2-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "energy-shield-mk2-equipment-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "energy-shield-mk2-equipment-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-ORE_GENERIC
-- Description: Generic compatibility patch for item iron-ore
-- Fixes: CONFLICT_ITEM_IRON-ORE


-- Generic compatibility patch for iron-ore
-- Fixes conflict between: castra, cubium, bobplates, quirkycat_machines, bobelectronics, corrundum, metal-and-stars, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, tenebris-prime, crushing-industry, Moshine-assets, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-ore"] then
    local item = data.raw.item["iron-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COPPER-ORE_GENERIC
-- Description: Generic compatibility patch for item copper-ore
-- Fixes: CONFLICT_ITEM_COPPER-ORE


-- Generic compatibility patch for copper-ore
-- Fixes conflict between: cubium, bobplates, corrundum, metal-and-stars, Krastorio2-spaced-out, crushing-industry, Moshine-assets, alien-module
-- Severity: MEDIUM
-- Type: item


if data.raw.item["copper-ore"] then
    local item = data.raw.item["copper-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "copper-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "copper-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COKE_GENERIC
-- Description: Generic compatibility patch for item coke
-- Fixes: CONFLICT_ITEM_COKE


-- Generic compatibility patch for coke
-- Fixes conflict between: wood-industry, alloy-smelting
-- Severity: MEDIUM
-- Type: item


if data.raw.item["coke"] then
    local item = data.raw.item["coke"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "coke-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "coke-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CRUSHED-COAL_GENERIC
-- Description: Generic compatibility patch for item crushed-coal
-- Fixes: CONFLICT_ITEM_CRUSHED-COAL


-- Generic compatibility patch for crushed-coal
-- Fixes conflict between: alloy-smelting, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["crushed-coal"] then
    local item = data.raw.item["crushed-coal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "crushed-coal-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "crushed-coal-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CARBON_GENERIC
-- Description: Generic compatibility patch for item carbon
-- Fixes: CONFLICT_ITEM_CARBON


-- Generic compatibility patch for carbon
-- Fixes conflict between: RampantFixed, castra, cubium, alloy-smelting, vulcanus-sulfuric-bacteria, corrundum, metal-and-stars, Krastorio2-spaced-out, wood-industry, Cerys-Moon-of-Fulgora, astroponics, crushing-industry, Moshine-assets, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["carbon"] then
    local item = data.raw.item["carbon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "carbon-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "carbon-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPOILAGE_GENERIC
-- Description: Generic compatibility patch for item spoilage
-- Fixes: CONFLICT_ITEM_SPOILAGE


-- Generic compatibility patch for spoilage
-- Fixes conflict between: cubium, secretas, planet-muluna, fulgora-coralmium-agriculture, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["spoilage"] then
    local item = data.raw.item["spoilage"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "spoilage-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "spoilage-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LANDFILL_GENERIC
-- Description: Generic compatibility patch for item landfill
-- Fixes: CONFLICT_ITEM_LANDFILL


-- Generic compatibility patch for landfill
-- Fixes conflict between: Krastorio2-spaced-out, aquilo-seabloom-algaculture, astroponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["landfill"] then
    local item = data.raw.item["landfill"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "landfill-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "landfill-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TUNGSTEN-PLATE_GENERIC
-- Description: Generic compatibility patch for item tungsten-plate
-- Fixes: CONFLICT_ITEM_TUNGSTEN-PLATE


-- Generic compatibility patch for tungsten-plate
-- Fixes conflict between: Fluid-level-indicator, slp-dyson-sphere-reworked, cubium, promethium-quality, secretas, corrundum, metal-and-stars, Krastorio2-spaced-out, lilys-cubeine, StopgapNukes, VoidProcessing, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tungsten-plate"] then
    local item = data.raw.item["tungsten-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tungsten-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tungsten-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUPERCONDUCTOR_GENERIC
-- Description: Generic compatibility patch for item superconductor
-- Fixes: CONFLICT_ITEM_SUPERCONDUCTOR


-- Generic compatibility patch for superconductor
-- Fixes conflict between: RampantFixed, slp-dyson-sphere-reworked, promethium-quality, secretas, metal-and-stars, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, VoidProcessing, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["superconductor"] then
    local item = data.raw.item["superconductor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "superconductor-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "superconductor-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PENTAPOD-EGG_GENERIC
-- Description: Generic compatibility patch for item pentapod-egg
-- Fixes: CONFLICT_ITEM_PENTAPOD-EGG


-- Generic compatibility patch for pentapod-egg
-- Fixes conflict between: cubium, Krastorio2-spaced-out, secretas, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["pentapod-egg"] then
    local item = data.raw.item["pentapod-egg"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "pentapod-egg-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "pentapod-egg-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NUTRIENTS_GENERIC
-- Description: Generic compatibility patch for item nutrients
-- Fixes: CONFLICT_ITEM_NUTRIENTS


-- Generic compatibility patch for nutrients
-- Fixes conflict between: lignumis, secretas, metal-and-stars, corrundum, VoidProcessing, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["nutrients"] then
    local item = data.raw.item["nutrients"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "nutrients-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "nutrients-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RESIN_GENERIC
-- Description: Generic compatibility patch for item resin
-- Fixes: CONFLICT_ITEM_RESIN


-- Generic compatibility patch for resin
-- Fixes conflict between: wood-industry, vulcanus-sulfuric-bacteria, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["resin"] then
    local item = data.raw.item["resin"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "resin-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "resin-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOODCHIPS_GENERIC
-- Description: Generic compatibility patch for item woodchips
-- Fixes: CONFLICT_ITEM_WOODCHIPS


-- Generic compatibility patch for woodchips
-- Fixes conflict between: wood-industry, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["woodchips"] then
    local item = data.raw.item["woodchips"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "woodchips-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "woodchips-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOOD_GENERIC
-- Description: Generic compatibility patch for item wood
-- Fixes: CONFLICT_ITEM_WOOD


-- Generic compatibility patch for wood
-- Fixes conflict between: bobgreenhouse, Wood-Walls, vulcanus-sulfuric-bacteria, bobplates, lignumis, bobelectronics, corrundum, metal-and-stars, Krastorio2-spaced-out, wood-industry, lilys-cubeine, planet-muluna, wood-military, astroponics, enemyracemanager, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["wood"] then
    local item = data.raw.item["wood"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "wood-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "wood-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOFLUX_GENERIC
-- Description: Generic compatibility patch for item bioflux
-- Fixes: CONFLICT_ITEM_BIOFLUX


-- Generic compatibility patch for bioflux
-- Fixes conflict between: cubium, secretas, metal-and-stars, corrundum, VoidProcessing, astroponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bioflux"] then
    local item = data.raw.item["bioflux"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bioflux-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bioflux-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PIPE_GENERIC
-- Description: Generic compatibility patch for item pipe
-- Fixes: CONFLICT_ITEM_PIPE


-- Generic compatibility patch for pipe
-- Fixes conflict between: secretas, foundry-restructuring, ballistic_missile, astroponics, bobpower, castra, Fluid-level-indicator, bobplates, FluidMustFlow, Krastorio2-spaced-out, bobmining, bobassembly, grappling-gun, boblogistics, metal-and-stars, dea-dia-system, lilys-cubeine, planet-muluna, Flare Stack, Flow Control, Planet-Hopper
-- Severity: MEDIUM
-- Type: item


if data.raw.item["pipe"] then
    local item = data.raw.item["pipe"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "pipe-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "pipe-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TREE-SEED_GENERIC
-- Description: Generic compatibility patch for item tree-seed
-- Fixes: CONFLICT_ITEM_TREE-SEED


-- Generic compatibility patch for tree-seed
-- Fixes conflict between: planet-muluna, astroponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tree-seed"] then
    local item = data.raw.item["tree-seed"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tree-seed-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tree-seed-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CALCITE_GENERIC
-- Description: Generic compatibility patch for item calcite
-- Fixes: CONFLICT_ITEM_CALCITE


-- Generic compatibility patch for calcite
-- Fixes conflict between: cubium, lignumis, vulcanus-sulfuric-bacteria, corrundum, common-prototypes, Krastorio2-spaced-out, metal-and-stars, lilys-cubeine, astroponics, crushing-industry, Moshine-assets
-- Severity: MEDIUM
-- Type: item


if data.raw.item["calcite"] then
    local item = data.raw.item["calcite"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "calcite-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "calcite-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_YUMAKO-SEED_GENERIC
-- Description: Generic compatibility patch for item yumako-seed
-- Fixes: CONFLICT_ITEM_YUMAKO-SEED


-- Generic compatibility patch for yumako-seed
-- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["yumako-seed"] then
    local item = data.raw.item["yumako-seed"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "yumako-seed-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "yumako-seed-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_YUMAKO_GENERIC
-- Description: Generic compatibility patch for item yumako
-- Fixes: CONFLICT_ITEM_YUMAKO


-- Generic compatibility patch for yumako
-- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["yumako"] then
    local item = data.raw.item["yumako"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "yumako-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "yumako-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JELLYNUT-SEED_GENERIC
-- Description: Generic compatibility patch for item jellynut-seed
-- Fixes: CONFLICT_ITEM_JELLYNUT-SEED


-- Generic compatibility patch for jellynut-seed
-- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jellynut-seed"] then
    local item = data.raw.item["jellynut-seed"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jellynut-seed-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jellynut-seed-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JELLYNUT_GENERIC
-- Description: Generic compatibility patch for item jellynut
-- Fixes: CONFLICT_ITEM_JELLYNUT


-- Generic compatibility patch for jellynut
-- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jellynut"] then
    local item = data.raw.item["jellynut"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jellynut-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jellynut-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-235_GENERIC
-- Description: Generic compatibility patch for item uranium-235
-- Fixes: CONFLICT_ITEM_URANIUM-235


-- Generic compatibility patch for uranium-235
-- Fixes conflict between: RampantFixed, bobplates, atan-nuclear-science, metal-and-stars, Krastorio2-spaced-out, lilys-cubeine, Cerys-Moon-of-Fulgora, StopgapNukes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-235"] then
    local item = data.raw.item["uranium-235"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-235-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-235-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WATER-BARREL_GENERIC
-- Description: Generic compatibility patch for item water-barrel
-- Fixes: CONFLICT_ITEM_WATER-BARREL


-- Generic compatibility patch for water-barrel
-- Fixes conflict between: atan-nuclear-science, enemyracemanager
-- Severity: MEDIUM
-- Type: item


if data.raw.item["water-barrel"] then
    local item = data.raw.item["water-barrel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "water-barrel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "water-barrel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BARREL_GENERIC
-- Description: Generic compatibility patch for item barrel
-- Fixes: CONFLICT_ITEM_BARREL


-- Generic compatibility patch for barrel
-- Fixes conflict between: atan-nuclear-science, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["barrel"] then
    local item = data.raw.item["barrel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "barrel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "barrel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CENTRIFUGE_GENERIC
-- Description: Generic compatibility patch for item centrifuge
-- Fixes: CONFLICT_ITEM_CENTRIFUGE


-- Generic compatibility patch for centrifuge
-- Fixes conflict between: atan-nuclear-science, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["centrifuge"] then
    local item = data.raw.item["centrifuge"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "centrifuge-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "centrifuge-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_REFINED-CONCRETE_GENERIC
-- Description: Generic compatibility patch for item refined-concrete
-- Fixes: CONFLICT_ITEM_REFINED-CONCRETE


-- Generic compatibility patch for refined-concrete
-- Fixes conflict between: cubium, atan-nuclear-science, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, minimalist-rails, bobassembly, HelicopterRevival
-- Severity: MEDIUM
-- Type: item


if data.raw.item["refined-concrete"] then
    local item = data.raw.item["refined-concrete"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "refined-concrete-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "refined-concrete-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-239_GENERIC
-- Description: Generic compatibility patch for item plutonium-239
-- Fixes: CONFLICT_ITEM_PLUTONIUM-239


-- Generic compatibility patch for plutonium-239
-- Fixes conflict between: atan-nuclear-science, Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-239"] then
    local item = data.raw.item["plutonium-239"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-239-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-239-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ATOMIC-BOMB_GENERIC
-- Description: Generic compatibility patch for item atomic-bomb
-- Fixes: CONFLICT_ITEM_ATOMIC-BOMB


-- Generic compatibility patch for atomic-bomb
-- Fixes conflict between: atomic-artillery-reborn, Cerys-Moon-of-Fulgora
-- Severity: MEDIUM
-- Type: item


if data.raw.item["atomic-bomb"] then
    local item = data.raw.item["atomic-bomb"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "atomic-bomb-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "atomic-bomb-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVE-URANIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item explosive-uranium-cannon-shell
-- Fixes: CONFLICT_ITEM_EXPLOSIVE-URANIUM-CANNON-SHELL


-- Generic compatibility patch for explosive-uranium-cannon-shell
-- Fixes conflict between: atomic-artillery-reborn, Cerys-Moon-of-Fulgora
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosive-uranium-cannon-shell"] then
    local item = data.raw.item["explosive-uranium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosive-uranium-cannon-shell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosive-uranium-cannon-shell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STORAGE-TANK_GENERIC
-- Description: Generic compatibility patch for item storage-tank
-- Fixes: CONFLICT_ITEM_STORAGE-TANK


-- Generic compatibility patch for storage-tank
-- Fixes conflict between: ballistic_missile, secretas, boblogistics, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["storage-tank"] then
    local item = data.raw.item["storage-tank"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "storage-tank-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "storage-tank-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET-PART_GENERIC
-- Description: Generic compatibility patch for item rocket-part
-- Fixes: CONFLICT_ITEM_ROCKET-PART


-- Generic compatibility patch for rocket-part
-- Fixes conflict between: Planet-Hopper, ballistic_missile, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket-part"] then
    local item = data.raw.item["rocket-part"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-part-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-part-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ASSEMBLING-MACHINE-3_GENERIC
-- Description: Generic compatibility patch for item assembling-machine-3
-- Fixes: CONFLICT_ITEM_ASSEMBLING-MACHINE-3


-- Generic compatibility patch for assembling-machine-3
-- Fixes conflict between: Krastorio2-spaced-out, bobassembly, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["assembling-machine-3"] then
    local item = data.raw.item["assembling-machine-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "assembling-machine-3-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "assembling-machine-3-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ELECTRIC-CHEMICAL-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-electric-chemical-furnace
-- Fixes: CONFLICT_ITEM_BOB-ELECTRIC-CHEMICAL-FURNACE


-- Generic compatibility patch for bob-electric-chemical-furnace
-- Fixes conflict between: bobplates, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-electric-chemical-furnace"] then
    local item = data.raw.item["bob-electric-chemical-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-electric-chemical-furnace-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-electric-chemical-furnace-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CHEMICAL-PLANT_GENERIC
-- Description: Generic compatibility patch for item chemical-plant
-- Fixes: CONFLICT_ITEM_CHEMICAL-PLANT


-- Generic compatibility patch for chemical-plant
-- Fixes conflict between: bobassembly, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["chemical-plant"] then
    local item = data.raw.item["chemical-plant"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "chemical-plant-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "chemical-plant-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-DISTILLERY_GENERIC
-- Description: Generic compatibility patch for item bob-distillery
-- Fixes: CONFLICT_ITEM_BOB-DISTILLERY


-- Generic compatibility patch for bob-distillery
-- Fixes conflict between: bobplates, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-distillery"] then
    local item = data.raw.item["bob-distillery"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-distillery-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-distillery-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ELECTROLYSER_GENERIC
-- Description: Generic compatibility patch for item bob-electrolyser
-- Fixes: CONFLICT_ITEM_BOB-ELECTROLYSER


-- Generic compatibility patch for bob-electrolyser
-- Fixes conflict between: bobplates, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-electrolyser"] then
    local item = data.raw.item["bob-electrolyser"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-electrolyser-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-electrolyser-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLASTIC-BAR_GENERIC
-- Description: Generic compatibility patch for item plastic-bar
-- Fixes: CONFLICT_ITEM_PLASTIC-BAR


-- Generic compatibility patch for plastic-bar
-- Fixes conflict between: More_Ammo, More_Repair_Packs, secretas, Cold_biters, vtk-cannon-turret, bobequipment, castra, cubium, bobelectronics, StopgapNukes, HelicopterRevival, bobvehicleequipment, Fluid-level-indicator, bobplates, Krastorio2-spaced-out, Kux-OrbitalIonCannon, tenebris-prime, fulgora-coralmium-agriculture, bobassembly, lignumis, boblogistics, corrundum, metal-and-stars, lilys-cubeine, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plastic-bar"] then
    local item = data.raw.item["plastic-bar"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plastic-bar-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plastic-bar-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-FLUID-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-fluid-furnace
-- Fixes: CONFLICT_ITEM_BOB-FLUID-FURNACE


-- Generic compatibility patch for bob-fluid-furnace
-- Fixes conflict between: bobassembly, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-fluid-furnace"] then
    local item = data.raw.item["bob-fluid-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-fluid-furnace-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-fluid-furnace-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEEL-FURNACE_GENERIC
-- Description: Generic compatibility patch for item steel-furnace
-- Fixes: CONFLICT_ITEM_STEEL-FURNACE


-- Generic compatibility patch for steel-furnace
-- Fixes conflict between: bobplates, bobassembly, bobpower, Electric Furnaces
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steel-furnace"] then
    local item = data.raw.item["steel-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steel-furnace-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steel-furnace-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-STEEL-MIXING-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-steel-mixing-furnace
-- Fixes: CONFLICT_ITEM_BOB-STEEL-MIXING-FURNACE


-- Generic compatibility patch for bob-steel-mixing-furnace
-- Fixes conflict between: bobplates, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-steel-mixing-furnace"] then
    local item = data.raw.item["bob-steel-mixing-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-steel-mixing-furnace-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-steel-mixing-furnace-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-STEEL-CHEMICAL-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-steel-chemical-furnace
-- Fixes: CONFLICT_ITEM_BOB-STEEL-CHEMICAL-FURNACE


-- Generic compatibility patch for bob-steel-chemical-furnace
-- Fixes conflict between: bobplates, bobassembly
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-steel-chemical-furnace"] then
    local item = data.raw.item["bob-steel-chemical-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-steel-chemical-furnace-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-steel-chemical-furnace-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TIN-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-tin-plate
-- Fixes: CONFLICT_ITEM_BOB-TIN-PLATE


-- Generic compatibility patch for bob-tin-plate
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-tin-plate"] then
    local item = data.raw.item["bob-tin-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-tin-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-tin-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-RUBBER_GENERIC
-- Description: Generic compatibility patch for item bob-rubber
-- Fixes: CONFLICT_ITEM_BOB-RUBBER


-- Generic compatibility patch for bob-rubber
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-rubber"] then
    local item = data.raw.item["bob-rubber"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-rubber-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-rubber-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-GOLD-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-gold-plate
-- Fixes: CONFLICT_ITEM_BOB-GOLD-PLATE


-- Generic compatibility patch for bob-gold-plate
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-gold-plate"] then
    local item = data.raw.item["bob-gold-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-gold-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-gold-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-RESIN_GENERIC
-- Description: Generic compatibility patch for item bob-resin
-- Fixes: CONFLICT_ITEM_BOB-RESIN


-- Generic compatibility patch for bob-resin
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-resin"] then
    local item = data.raw.item["bob-resin"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-resin-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-resin-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ADVANCED-PROCESSING-UNIT_GENERIC
-- Description: Generic compatibility patch for item bob-advanced-processing-unit
-- Fixes: CONFLICT_ITEM_BOB-ADVANCED-PROCESSING-UNIT


-- Generic compatibility patch for bob-advanced-processing-unit
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-advanced-processing-unit"] then
    local item = data.raw.item["bob-advanced-processing-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-advanced-processing-unit-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-advanced-processing-unit-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SILICON-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-silicon-plate
-- Fixes: CONFLICT_ITEM_BOB-SILICON-PLATE


-- Generic compatibility patch for bob-silicon-plate
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-silicon-plate"] then
    local item = data.raw.item["bob-silicon-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-silicon-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-silicon-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SILICON-WAFER_GENERIC
-- Description: Generic compatibility patch for item bob-silicon-wafer
-- Fixes: CONFLICT_ITEM_BOB-SILICON-WAFER


-- Generic compatibility patch for bob-silicon-wafer
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-silicon-wafer"] then
    local item = data.raw.item["bob-silicon-wafer"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-silicon-wafer-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-silicon-wafer-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-LEAD-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-lead-plate
-- Fixes: CONFLICT_ITEM_BOB-LEAD-PLATE


-- Generic compatibility patch for bob-lead-plate
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-lead-plate"] then
    local item = data.raw.item["bob-lead-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-lead-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-lead-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT


-- Generic compatibility patch for bob-alien-artifact
-- Fixes conflict between: bobvehicleequipment, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact"] then
    local item = data.raw.item["bob-alien-artifact"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-RED_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-red
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-RED


-- Generic compatibility patch for bob-alien-artifact-red
-- Fixes conflict between: bobplates, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-red"] then
    local item = data.raw.item["bob-alien-artifact-red"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-red-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-red-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-ORANGE_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-orange
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-ORANGE


-- Generic compatibility patch for bob-alien-artifact-orange
-- Fixes conflict between: bobplates, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-orange"] then
    local item = data.raw.item["bob-alien-artifact-orange"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-orange-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-orange-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-YELLOW_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-yellow
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-YELLOW


-- Generic compatibility patch for bob-alien-artifact-yellow
-- Fixes conflict between: bobplates, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-yellow"] then
    local item = data.raw.item["bob-alien-artifact-yellow"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-yellow-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-yellow-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-GREEN_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-green
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-GREEN


-- Generic compatibility patch for bob-alien-artifact-green
-- Fixes conflict between: bobplates, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-green"] then
    local item = data.raw.item["bob-alien-artifact-green"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-green-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-green-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-BLUE_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-blue
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-BLUE


-- Generic compatibility patch for bob-alien-artifact-blue
-- Fixes conflict between: bobplates, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-blue"] then
    local item = data.raw.item["bob-alien-artifact-blue"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-blue-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-blue-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-PURPLE_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-purple
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-PURPLE


-- Generic compatibility patch for bob-alien-artifact-purple
-- Fixes conflict between: bobplates, bobenemies
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-purple"] then
    local item = data.raw.item["bob-alien-artifact-purple"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-purple-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-purple-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_POWER-ARMOR-MK2_GENERIC
-- Description: Generic compatibility patch for item power-armor-mk2
-- Fixes: CONFLICT_ITEM_POWER-ARMOR-MK2


-- Generic compatibility patch for power-armor-mk2
-- Fixes conflict between: Cold_biters, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["power-armor-mk2"] then
    local item = data.raw.item["power-armor-mk2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "power-armor-mk2-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "power-armor-mk2-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPEED-MODULE-2_GENERIC
-- Description: Generic compatibility patch for item speed-module-2
-- Fixes: CONFLICT_ITEM_SPEED-MODULE-2


-- Generic compatibility patch for speed-module-2
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment, Electric Furnaces
-- Severity: MEDIUM
-- Type: item


if data.raw.item["speed-module-2"] then
    local item = data.raw.item["speed-module-2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "speed-module-2-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "speed-module-2-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EFFICIENCY-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item efficiency-module-3
-- Fixes: CONFLICT_ITEM_EFFICIENCY-MODULE-3


-- Generic compatibility patch for efficiency-module-3
-- Fixes conflict between: bobvehicleequipment, secretas, bobmodules, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["efficiency-module-3"] then
    local item = data.raw.item["efficiency-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "efficiency-module-3-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "efficiency-module-3-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPEED-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item speed-module-3
-- Fixes: CONFLICT_ITEM_SPEED-MODULE-3


-- Generic compatibility patch for speed-module-3
-- Fixes conflict between: bobvehicleequipment, bobequipment, secretas, Krastorio2-spaced-out, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["speed-module-3"] then
    local item = data.raw.item["speed-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "speed-module-3-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "speed-module-3-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PRODUCTIVITY-MODULE-2_GENERIC
-- Description: Generic compatibility patch for item productivity-module-2
-- Fixes: CONFLICT_ITEM_PRODUCTIVITY-MODULE-2


-- Generic compatibility patch for productivity-module-2
-- Fixes conflict between: bobvehicleequipment, Moshine, bobequipment, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["productivity-module-2"] then
    local item = data.raw.item["productivity-module-2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "productivity-module-2-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "productivity-module-2-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PRODUCTIVITY-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item productivity-module-3
-- Fixes: CONFLICT_ITEM_PRODUCTIVITY-MODULE-3


-- Generic compatibility patch for productivity-module-3
-- Fixes conflict between: bobvehicleequipment, secretas, bobmodules, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["productivity-module-3"] then
    local item = data.raw.item["productivity-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "productivity-module-3-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "productivity-module-3-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BATTERY-MK2-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item battery-mk2-equipment
-- Fixes: CONFLICT_ITEM_BATTERY-MK2-EQUIPMENT


-- Generic compatibility patch for battery-mk2-equipment
-- Fixes conflict between: bobequipment, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["battery-mk2-equipment"] then
    local item = data.raw.item["battery-mk2-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "battery-mk2-equipment-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "battery-mk2-equipment-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FISSION-REACTOR-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item fission-reactor-equipment
-- Fixes: CONFLICT_ITEM_FISSION-REACTOR-EQUIPMENT


-- Generic compatibility patch for fission-reactor-equipment
-- Fixes conflict between: PlutoniumEnergy, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fission-reactor-equipment"] then
    local item = data.raw.item["fission-reactor-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fission-reactor-equipment-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fission-reactor-equipment-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item uranium-fuel-cell
-- Fixes: CONFLICT_ITEM_URANIUM-FUEL-CELL


-- Generic compatibility patch for uranium-fuel-cell
-- Fixes conflict between: bobvehicleequipment, slp-dyson-sphere-reworked, bobequipment, secretas, maraxsis, metal-and-stars, StopgapNukes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-fuel-cell"] then
    local item = data.raw.item["uranium-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-fuel-cell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-fuel-cell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NIGHT-VISION-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item night-vision-equipment
-- Fixes: CONFLICT_ITEM_NIGHT-VISION-EQUIPMENT


-- Generic compatibility patch for night-vision-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["night-vision-equipment"] then
    local item = data.raw.item["night-vision-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "night-vision-equipment-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "night-vision-equipment-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SOLAR-PANEL-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item solar-panel-equipment
-- Fixes: CONFLICT_ITEM_SOLAR-PANEL-EQUIPMENT


-- Generic compatibility patch for solar-panel-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["solar-panel-equipment"] then
    local item = data.raw.item["solar-panel-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "solar-panel-equipment-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "solar-panel-equipment-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PERSONAL-LASER-DEFENSE-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item personal-laser-defense-equipment
-- Fixes: CONFLICT_ITEM_PERSONAL-LASER-DEFENSE-EQUIPMENT


-- Generic compatibility patch for personal-laser-defense-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["personal-laser-defense-equipment"] then
    local item = data.raw.item["personal-laser-defense-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "personal-laser-defense-equipment-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "personal-laser-defense-equipment-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXOSKELETON-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item exoskeleton-equipment
-- Fixes: CONFLICT_ITEM_EXOSKELETON-EQUIPMENT


-- Generic compatibility patch for exoskeleton-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["exoskeleton-equipment"] then
    local item = data.raw.item["exoskeleton-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "exoskeleton-equipment-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "exoskeleton-equipment-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SULFUR_GENERIC
-- Description: Generic compatibility patch for item sulfur
-- Fixes: CONFLICT_ITEM_SULFUR


-- Generic compatibility patch for sulfur
-- Fixes conflict between: More_Ammo, bobgreenhouse, castra, cubium, bobplates, vulcanus-sulfuric-bacteria, corrundum, StopgapNukes, tenebris-prime, Moshine-assets
-- Severity: MEDIUM
-- Type: item


if data.raw.item["sulfur"] then
    local item = data.raw.item["sulfur"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "sulfur-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "sulfur-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-BRASS-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-brass-alloy
-- Fixes: CONFLICT_ITEM_BOB-BRASS-ALLOY


-- Generic compatibility patch for bob-brass-alloy
-- Fixes conflict between: bobplates, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-brass-alloy"] then
    local item = data.raw.item["bob-brass-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-brass-alloy-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-brass-alloy-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TITANIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-titanium-plate
-- Fixes: CONFLICT_ITEM_BOB-TITANIUM-PLATE


-- Generic compatibility patch for bob-titanium-plate
-- Fixes conflict between: bobplates, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-titanium-plate"] then
    local item = data.raw.item["bob-titanium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-titanium-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-titanium-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LONG-HANDED-INSERTER_GENERIC
-- Description: Generic compatibility patch for item long-handed-inserter
-- Fixes: CONFLICT_ITEM_LONG-HANDED-INSERTER


-- Generic compatibility patch for long-handed-inserter
-- Fixes conflict between: Krastorio2-spaced-out, long_stack_inserter, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["long-handed-inserter"] then
    local item = data.raw.item["long-handed-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "long-handed-inserter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "long-handed-inserter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item transport-belt
-- Fixes: CONFLICT_ITEM_TRANSPORT-BELT


-- Generic compatibility patch for transport-belt
-- Fixes conflict between: cubium, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["transport-belt"] then
    local item = data.raw.item["transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "transport-belt-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "transport-belt-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item fast-transport-belt
-- Fixes: CONFLICT_ITEM_FAST-TRANSPORT-BELT


-- Generic compatibility patch for fast-transport-belt
-- Fixes conflict between: cubium, Krastorio2-spaced-out, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-transport-belt"] then
    local item = data.raw.item["fast-transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-transport-belt-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-transport-belt-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPRESS-TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item express-transport-belt
-- Fixes: CONFLICT_ITEM_EXPRESS-TRANSPORT-BELT


-- Generic compatibility patch for express-transport-belt
-- Fixes conflict between: OmegaDrill, cubium, Krastorio2-spaced-out, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["express-transport-belt"] then
    local item = data.raw.item["express-transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "express-transport-belt-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "express-transport-belt-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item fast-underground-belt
-- Fixes: CONFLICT_ITEM_FAST-UNDERGROUND-BELT


-- Generic compatibility patch for fast-underground-belt
-- Fixes conflict between: cubium, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-underground-belt"] then
    local item = data.raw.item["fast-underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-underground-belt-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-underground-belt-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPRESS-UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item express-underground-belt
-- Fixes: CONFLICT_ITEM_EXPRESS-UNDERGROUND-BELT


-- Generic compatibility patch for express-underground-belt
-- Fixes conflict between: cubium, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["express-underground-belt"] then
    local item = data.raw.item["express-underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "express-underground-belt-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "express-underground-belt-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-SPLITTER_GENERIC
-- Description: Generic compatibility patch for item fast-splitter
-- Fixes: CONFLICT_ITEM_FAST-SPLITTER


-- Generic compatibility patch for fast-splitter
-- Fixes conflict between: cubium, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-splitter"] then
    local item = data.raw.item["fast-splitter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-splitter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-splitter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPRESS-SPLITTER_GENERIC
-- Description: Generic compatibility patch for item express-splitter
-- Fixes: CONFLICT_ITEM_EXPRESS-SPLITTER


-- Generic compatibility patch for express-splitter
-- Fixes conflict between: cubium, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["express-splitter"] then
    local item = data.raw.item["express-splitter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "express-splitter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "express-splitter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BURNER-INSERTER_GENERIC
-- Description: Generic compatibility patch for item burner-inserter
-- Fixes: CONFLICT_ITEM_BURNER-INSERTER


-- Generic compatibility patch for burner-inserter
-- Fixes conflict between: Krastorio2-spaced-out, lignumis, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["burner-inserter"] then
    local item = data.raw.item["burner-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "burner-inserter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "burner-inserter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-INSERTER_GENERIC
-- Description: Generic compatibility patch for item fast-inserter
-- Fixes: CONFLICT_ITEM_FAST-INSERTER


-- Generic compatibility patch for fast-inserter
-- Fixes conflict between: cubium, Krastorio2-spaced-out, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-inserter"] then
    local item = data.raw.item["fast-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-inserter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-inserter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BULK-INSERTER_GENERIC
-- Description: Generic compatibility patch for item bulk-inserter
-- Fixes: CONFLICT_ITEM_BULK-INSERTER


-- Generic compatibility patch for bulk-inserter
-- Fixes conflict between: Krastorio2-spaced-out, secretas, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bulk-inserter"] then
    local item = data.raw.item["bulk-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bulk-inserter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bulk-inserter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_INSERTER_GENERIC
-- Description: Generic compatibility patch for item inserter
-- Fixes: CONFLICT_ITEM_INSERTER


-- Generic compatibility patch for inserter
-- Fixes conflict between: cubium, Krastorio2-spaced-out, secretas, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["inserter"] then
    local item = data.raw.item["inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "inserter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "inserter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PASSIVE-PROVIDER-CHEST_GENERIC
-- Description: Generic compatibility patch for item passive-provider-chest
-- Fixes: CONFLICT_ITEM_PASSIVE-PROVIDER-CHEST


-- Generic compatibility patch for passive-provider-chest
-- Fixes conflict between: Warehousing, orbital-transfer, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["passive-provider-chest"] then
    local item = data.raw.item["passive-provider-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "passive-provider-chest-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "passive-provider-chest-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ACTIVE-PROVIDER-CHEST_GENERIC
-- Description: Generic compatibility patch for item active-provider-chest
-- Fixes: CONFLICT_ITEM_ACTIVE-PROVIDER-CHEST


-- Generic compatibility patch for active-provider-chest
-- Fixes conflict between: Warehousing, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["active-provider-chest"] then
    local item = data.raw.item["active-provider-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "active-provider-chest-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "active-provider-chest-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STORAGE-CHEST_GENERIC
-- Description: Generic compatibility patch for item storage-chest
-- Fixes: CONFLICT_ITEM_STORAGE-CHEST


-- Generic compatibility patch for storage-chest
-- Fixes conflict between: Warehousing, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["storage-chest"] then
    local item = data.raw.item["storage-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "storage-chest-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "storage-chest-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BUFFER-CHEST_GENERIC
-- Description: Generic compatibility patch for item buffer-chest
-- Fixes: CONFLICT_ITEM_BUFFER-CHEST


-- Generic compatibility patch for buffer-chest
-- Fixes conflict between: Warehousing, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["buffer-chest"] then
    local item = data.raw.item["buffer-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "buffer-chest-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "buffer-chest-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_REQUESTER-CHEST_GENERIC
-- Description: Generic compatibility patch for item requester-chest
-- Fixes: CONFLICT_ITEM_REQUESTER-CHEST


-- Generic compatibility patch for requester-chest
-- Fixes conflict between: Warehousing, orbital-transfer, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["requester-chest"] then
    local item = data.raw.item["requester-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "requester-chest-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "requester-chest-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-BRONZE-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-bronze-alloy
-- Fixes: CONFLICT_ITEM_BOB-BRONZE-ALLOY


-- Generic compatibility patch for bob-bronze-alloy
-- Fixes conflict between: bobplates, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-bronze-alloy"] then
    local item = data.raw.item["bob-bronze-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-bronze-alloy-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-bronze-alloy-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SILICON-NITRIDE_GENERIC
-- Description: Generic compatibility patch for item bob-silicon-nitride
-- Fixes: CONFLICT_ITEM_BOB-SILICON-NITRIDE


-- Generic compatibility patch for bob-silicon-nitride
-- Fixes conflict between: bobplates, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-silicon-nitride"] then
    local item = data.raw.item["bob-silicon-nitride"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-silicon-nitride-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-silicon-nitride-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TUNGSTEN-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-tungsten-plate
-- Fixes: CONFLICT_ITEM_BOB-TUNGSTEN-PLATE


-- Generic compatibility patch for bob-tungsten-plate
-- Fixes conflict between: bobplates, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-tungsten-plate"] then
    local item = data.raw.item["bob-tungsten-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-tungsten-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-tungsten-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-NITINOL-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-nitinol-alloy
-- Fixes: CONFLICT_ITEM_BOB-NITINOL-ALLOY


-- Generic compatibility patch for bob-nitinol-alloy
-- Fixes conflict between: bobplates, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-nitinol-alloy"] then
    local item = data.raw.item["bob-nitinol-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-nitinol-alloy-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-nitinol-alloy-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-COPPER-TUNGSTEN-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-copper-tungsten-alloy
-- Fixes: CONFLICT_ITEM_BOB-COPPER-TUNGSTEN-ALLOY


-- Generic compatibility patch for bob-copper-tungsten-alloy
-- Fixes conflict between: bobplates, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-copper-tungsten-alloy"] then
    local item = data.raw.item["bob-copper-tungsten-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-copper-tungsten-alloy-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-copper-tungsten-alloy-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PUMP_GENERIC
-- Description: Generic compatibility patch for item pump
-- Fixes: CONFLICT_ITEM_PUMP


-- Generic compatibility patch for pump
-- Fixes conflict between: secretas, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["pump"] then
    local item = data.raw.item["pump"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "pump-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "pump-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROBOPORT_GENERIC
-- Description: Generic compatibility patch for item roboport
-- Fixes: CONFLICT_ITEM_ROBOPORT


-- Generic compatibility patch for roboport
-- Fixes conflict between: Krastorio2-spaced-out, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["roboport"] then
    local item = data.raw.item["roboport"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "roboport-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "roboport-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEEL-CHEST_GENERIC
-- Description: Generic compatibility patch for item steel-chest
-- Fixes: CONFLICT_ITEM_STEEL-CHEST


-- Generic compatibility patch for steel-chest
-- Fixes conflict between: Krastorio2-spaced-out, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steel-chest"] then
    local item = data.raw.item["steel-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steel-chest-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steel-chest-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LOCOMOTIVE_GENERIC
-- Description: Generic compatibility patch for item locomotive
-- Fixes: CONFLICT_ITEM_LOCOMOTIVE


-- Generic compatibility patch for locomotive
-- Fixes conflict between: se-space-trains, Krastorio2-spaced-out, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["locomotive"] then
    local item = data.raw.item["locomotive"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "locomotive-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "locomotive-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CARGO-WAGON_GENERIC
-- Description: Generic compatibility patch for item cargo-wagon
-- Fixes: CONFLICT_ITEM_CARGO-WAGON


-- Generic compatibility patch for cargo-wagon
-- Fixes conflict between: DoubleWagons, se-space-trains, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["cargo-wagon"] then
    local item = data.raw.item["cargo-wagon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "cargo-wagon-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "cargo-wagon-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLUID-WAGON_GENERIC
-- Description: Generic compatibility patch for item fluid-wagon
-- Fixes: CONFLICT_ITEM_FLUID-WAGON


-- Generic compatibility patch for fluid-wagon
-- Fixes conflict between: DoubleWagons, se-space-trains, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fluid-wagon"] then
    local item = data.raw.item["fluid-wagon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fluid-wagon-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fluid-wagon-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLYING-ROBOT-FRAME_GENERIC
-- Description: Generic compatibility patch for item flying-robot-frame
-- Fixes: CONFLICT_ITEM_FLYING-ROBOT-FRAME


-- Generic compatibility patch for flying-robot-frame
-- Fixes conflict between: cubium, secretas, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["flying-robot-frame"] then
    local item = data.raw.item["flying-robot-frame"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "flying-robot-frame-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "flying-robot-frame-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_QUALITY-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item quality-module-3
-- Fixes: CONFLICT_ITEM_QUALITY-MODULE-3


-- Generic compatibility patch for quality-module-3
-- Fixes conflict between: secretas, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["quality-module-3"] then
    local item = data.raw.item["quality-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "quality-module-3-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "quality-module-3-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-RUBY-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-ruby-ore
-- Fixes: CONFLICT_ITEM_BOB-RUBY-ORE


-- Generic compatibility patch for bob-ruby-ore
-- Fixes conflict between: bobplates, bobores
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-ruby-ore"] then
    local item = data.raw.item["bob-ruby-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-ruby-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-ruby-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SAPPHIRE-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-sapphire-ore
-- Fixes: CONFLICT_ITEM_BOB-SAPPHIRE-ORE


-- Generic compatibility patch for bob-sapphire-ore
-- Fixes conflict between: bobplates, bobores
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-sapphire-ore"] then
    local item = data.raw.item["bob-sapphire-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-sapphire-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-sapphire-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-EMERALD-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-emerald-ore
-- Fixes: CONFLICT_ITEM_BOB-EMERALD-ORE


-- Generic compatibility patch for bob-emerald-ore
-- Fixes conflict between: bobplates, bobores
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-emerald-ore"] then
    local item = data.raw.item["bob-emerald-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-emerald-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-emerald-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-AMETHYST-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-amethyst-ore
-- Fixes: CONFLICT_ITEM_BOB-AMETHYST-ORE


-- Generic compatibility patch for bob-amethyst-ore
-- Fixes conflict between: bobplates, bobores
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-amethyst-ore"] then
    local item = data.raw.item["bob-amethyst-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-amethyst-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-amethyst-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TOPAZ-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-topaz-ore
-- Fixes: CONFLICT_ITEM_BOB-TOPAZ-ORE


-- Generic compatibility patch for bob-topaz-ore
-- Fixes conflict between: bobplates, bobores
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-topaz-ore"] then
    local item = data.raw.item["bob-topaz-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-topaz-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-topaz-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-DIAMOND-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-diamond-ore
-- Fixes: CONFLICT_ITEM_BOB-DIAMOND-ORE


-- Generic compatibility patch for bob-diamond-ore
-- Fixes conflict between: bobplates, bobores
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-diamond-ore"] then
    local item = data.raw.item["bob-diamond-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-diamond-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-diamond-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ORANGE-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-alien-orange-alloy
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ORANGE-ALLOY


-- Generic compatibility patch for bob-alien-orange-alloy
-- Fixes conflict between: bobvehicleequipment, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-orange-alloy"] then
    local item = data.raw.item["bob-alien-orange-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-orange-alloy-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-orange-alloy-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-238_GENERIC
-- Description: Generic compatibility patch for item uranium-238
-- Fixes: CONFLICT_ITEM_URANIUM-238


-- Generic compatibility patch for uranium-238
-- Fixes conflict between: More_Ammo, PlutoniumEnergy, bobplates, metal-and-stars, Krastorio2-spaced-out, StopgapNukes, Cerys-Moon-of-Fulgora, vtk-cannon-turret
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-238"] then
    local item = data.raw.item["uranium-238"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-238-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-238-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HEAT-PIPE_GENERIC
-- Description: Generic compatibility patch for item heat-pipe
-- Fixes: CONFLICT_ITEM_HEAT-PIPE


-- Generic compatibility patch for heat-pipe
-- Fixes conflict between: cubium, secretas, metal-and-stars, Hovercrafts, Cerys-Moon-of-Fulgora, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["heat-pipe"] then
    local item = data.raw.item["heat-pipe"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "heat-pipe-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "heat-pipe-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ACCUMULATOR_GENERIC
-- Description: Generic compatibility patch for item accumulator
-- Fixes: CONFLICT_ITEM_ACCUMULATOR


-- Generic compatibility patch for accumulator
-- Fixes conflict between: RampantFixed, slp-dyson-sphere-reworked, cubium, metal-and-stars, snouz-big-accumulator, Kux-OrbitalIonCannon, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["accumulator"] then
    local item = data.raw.item["accumulator"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "accumulator-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "accumulator-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOILER_GENERIC
-- Description: Generic compatibility patch for item boiler
-- Fixes: CONFLICT_ITEM_BOILER


-- Generic compatibility patch for boiler
-- Fixes conflict between: secretas, bobpower, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["boiler"] then
    local item = data.raw.item["boiler"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "boiler-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "boiler-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HEAT-EXCHANGER_GENERIC
-- Description: Generic compatibility patch for item heat-exchanger
-- Fixes: CONFLICT_ITEM_HEAT-EXCHANGER


-- Generic compatibility patch for heat-exchanger
-- Fixes conflict between: bobpower, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["heat-exchanger"] then
    local item = data.raw.item["heat-exchanger"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "heat-exchanger-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "heat-exchanger-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NUCLEAR-REACTOR_GENERIC
-- Description: Generic compatibility patch for item nuclear-reactor
-- Fixes: CONFLICT_ITEM_NUCLEAR-REACTOR


-- Generic compatibility patch for nuclear-reactor
-- Fixes conflict between: RampantFixed, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["nuclear-reactor"] then
    local item = data.raw.item["nuclear-reactor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "nuclear-reactor-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "nuclear-reactor-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_MEDIUM-ELECTRIC-POLE_GENERIC
-- Description: Generic compatibility patch for item medium-electric-pole
-- Fixes: CONFLICT_ITEM_MEDIUM-ELECTRIC-POLE


-- Generic compatibility patch for medium-electric-pole
-- Fixes conflict between: snouz-big-solar-panel, secretas, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["medium-electric-pole"] then
    local item = data.raw.item["medium-electric-pole"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "medium-electric-pole-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "medium-electric-pole-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUBSTATION_GENERIC
-- Description: Generic compatibility patch for item substation
-- Fixes: CONFLICT_ITEM_SUBSTATION


-- Generic compatibility patch for substation
-- Fixes conflict between: Krastorio2-spaced-out, snouz_better_substation, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["substation"] then
    local item = data.raw.item["substation"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "substation-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "substation-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SOLAR-PANEL_GENERIC
-- Description: Generic compatibility patch for item solar-panel
-- Fixes: CONFLICT_ITEM_SOLAR-PANEL


-- Generic compatibility patch for solar-panel
-- Fixes conflict between: snouz-big-solar-panel, slp-dyson-sphere-reworked, secretas, Krastorio2-spaced-out, Kux-OrbitalIonCannon, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["solar-panel"] then
    local item = data.raw.item["solar-panel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "solar-panel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "solar-panel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEAM-ENGINE_GENERIC
-- Description: Generic compatibility patch for item steam-engine
-- Fixes: CONFLICT_ITEM_STEAM-ENGINE


-- Generic compatibility patch for steam-engine
-- Fixes conflict between: cubium, bobpower, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steam-engine"] then
    local item = data.raw.item["steam-engine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steam-engine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steam-engine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEAM-TURBINE_GENERIC
-- Description: Generic compatibility patch for item steam-turbine
-- Fixes: CONFLICT_ITEM_STEAM-TURBINE


-- Generic compatibility patch for steam-turbine
-- Fixes conflict between: secretas, corrundum, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steam-turbine"] then
    local item = data.raw.item["steam-turbine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steam-turbine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steam-turbine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PRODUCTIVITY-MODULE_GENERIC
-- Description: Generic compatibility patch for item productivity-module
-- Fixes: CONFLICT_ITEM_PRODUCTIVITY-MODULE


-- Generic compatibility patch for productivity-module
-- Fixes conflict between: bobvehicleequipment, cubium, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["productivity-module"] then
    local item = data.raw.item["productivity-module"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "productivity-module-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "productivity-module-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FIREARM-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item firearm-magazine
-- Fixes: CONFLICT_ITEM_FIREARM-MAGAZINE


-- Generic compatibility patch for firearm-magazine
-- Fixes conflict between: cubium, More_Ammo, castra
-- Severity: MEDIUM
-- Type: item


if data.raw.item["firearm-magazine"] then
    local item = data.raw.item["firearm-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "firearm-magazine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "firearm-magazine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PIERCING-ROUNDS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item piercing-rounds-magazine
-- Fixes: CONFLICT_ITEM_PIERCING-ROUNDS-MAGAZINE


-- Generic compatibility patch for piercing-rounds-magazine
-- Fixes conflict between: More_Ammo, PlutoniumEnergy, castra, cubium, Krastorio2-spaced-out
-- Severity: MEDIUM
-- Type: item


if data.raw.item["piercing-rounds-magazine"] then
    local item = data.raw.item["piercing-rounds-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "piercing-rounds-magazine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "piercing-rounds-magazine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-ROUNDS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item uranium-rounds-magazine
-- Fixes: CONFLICT_ITEM_URANIUM-ROUNDS-MAGAZINE


-- Generic compatibility patch for uranium-rounds-magazine
-- Fixes conflict between: StopgapNukes, Cerys-Moon-of-Fulgora, castra
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-rounds-magazine"] then
    local item = data.raw.item["uranium-rounds-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-rounds-magazine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-rounds-magazine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LITHIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item lithium-plate
-- Fixes: CONFLICT_ITEM_LITHIUM-PLATE


-- Generic compatibility patch for lithium-plate
-- Fixes conflict between: slp-dyson-sphere-reworked, castra, cubium, secretas, metal-and-stars, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, VoidProcessing
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lithium-plate"] then
    local item = data.raw.item["lithium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lithium-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lithium-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUPERCAPACITOR_GENERIC
-- Description: Generic compatibility patch for item supercapacitor
-- Fixes: CONFLICT_ITEM_SUPERCAPACITOR


-- Generic compatibility patch for supercapacitor
-- Fixes conflict between: RampantFixed, castra, cubium, lignumis, secretas, metal-and-stars, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["supercapacitor"] then
    local item = data.raw.item["supercapacitor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "supercapacitor-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "supercapacitor-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HOLMIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item holmium-plate
-- Fixes: CONFLICT_ITEM_HOLMIUM-PLATE


-- Generic compatibility patch for holmium-plate
-- Fixes conflict between: castra, cubium, secretas, metal-and-stars, Cerys-Moon-of-Fulgora, VoidProcessing
-- Severity: MEDIUM
-- Type: item


if data.raw.item["holmium-plate"] then
    local item = data.raw.item["holmium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "holmium-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "holmium-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_QUANTUM-PROCESSOR_GENERIC
-- Description: Generic compatibility patch for item quantum-processor
-- Fixes: CONFLICT_ITEM_QUANTUM-PROCESSOR


-- Generic compatibility patch for quantum-processor
-- Fixes conflict between: RampantFixed, slp-dyson-sphere-reworked, castra, cubium, promethium-quality, Krastorio2-spaced-out, VoidProcessing
-- Severity: MEDIUM
-- Type: item


if data.raw.item["quantum-processor"] then
    local item = data.raw.item["quantum-processor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "quantum-processor-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "quantum-processor-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_POISON-CAPSULE_GENERIC
-- Description: Generic compatibility patch for item poison-capsule
-- Fixes: CONFLICT_ITEM_POISON-CAPSULE


-- Generic compatibility patch for poison-capsule
-- Fixes conflict between: Krastorio2-spaced-out, castra
-- Severity: MEDIUM
-- Type: item


if data.raw.item["poison-capsule"] then
    local item = data.raw.item["poison-capsule"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "poison-capsule-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "poison-capsule-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET-FUEL_GENERIC
-- Description: Generic compatibility patch for item rocket-fuel
-- Fixes: CONFLICT_ITEM_ROCKET-FUEL


-- Generic compatibility patch for rocket-fuel
-- Fixes conflict between: PlutoniumEnergy, castra, cubium, lignumis, corrundum, metal-and-stars, Krastorio2-spaced-out, StopgapNukes, Kux-OrbitalIonCannon, VoidProcessing, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket-fuel"] then
    local item = data.raw.item["rocket-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-fuel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-fuel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CARBON-FIBER_GENERIC
-- Description: Generic compatibility patch for item carbon-fiber
-- Fixes: CONFLICT_ITEM_CARBON-FIBER


-- Generic compatibility patch for carbon-fiber
-- Fixes conflict between: slp-dyson-sphere-reworked, castra, cubium, secretas, Krastorio2-spaced-out, lilys-cubeine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["carbon-fiber"] then
    local item = data.raw.item["carbon-fiber"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "carbon-fiber-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "carbon-fiber-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ANCIENT-STRUCTURE-REPAIR-PART_GENERIC
-- Description: Generic compatibility patch for item ancient-structure-repair-part
-- Fixes: CONFLICT_ITEM_ANCIENT-STRUCTURE-REPAIR-PART


-- Generic compatibility patch for ancient-structure-repair-part
-- Fixes conflict between: cerys-lunaponics, Cerys-Moon-of-Fulgora
-- Severity: MEDIUM
-- Type: item


if data.raw.item["ancient-structure-repair-part"] then
    local item = data.raw.item["ancient-structure-repair-part"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "ancient-structure-repair-part-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "ancient-structure-repair-part-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CERYS-NITROGEN-RICH-MINERALS_GENERIC
-- Description: Generic compatibility patch for item cerys-nitrogen-rich-minerals
-- Fixes: CONFLICT_ITEM_CERYS-NITROGEN-RICH-MINERALS


-- Generic compatibility patch for cerys-nitrogen-rich-minerals
-- Fixes conflict between: cerys-lunaponics, Cerys-Moon-of-Fulgora
-- Severity: MEDIUM
-- Type: item


if data.raw.item["cerys-nitrogen-rich-minerals"] then
    local item = data.raw.item["cerys-nitrogen-rich-minerals"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "cerys-nitrogen-rich-minerals-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "cerys-nitrogen-rich-minerals-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TIN-ORE_GENERIC
-- Description: Generic compatibility patch for item tin-ore
-- Fixes: CONFLICT_ITEM_TIN-ORE


-- Generic compatibility patch for tin-ore
-- Fixes conflict between: cerys-lunaponics, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tin-ore"] then
    local item = data.raw.item["tin-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tin-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tin-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-238_GENERIC
-- Description: Generic compatibility patch for item plutonium-238
-- Fixes: CONFLICT_ITEM_PLUTONIUM-238


-- Generic compatibility patch for plutonium-238
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-238"] then
    local item = data.raw.item["plutonium-238"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-238-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-238-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-ROUNDS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item plutonium-rounds-magazine
-- Fixes: CONFLICT_ITEM_PLUTONIUM-ROUNDS-MAGAZINE


-- Generic compatibility patch for plutonium-rounds-magazine
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-rounds-magazine"] then
    local item = data.raw.item["plutonium-rounds-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-rounds-magazine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-rounds-magazine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NUCLEAR-FUEL_GENERIC
-- Description: Generic compatibility patch for item nuclear-fuel
-- Fixes: CONFLICT_ITEM_NUCLEAR-FUEL


-- Generic compatibility patch for nuclear-fuel
-- Fixes conflict between: Cerys-Moon-of-Fulgora, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["nuclear-fuel"] then
    local item = data.raw.item["nuclear-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "nuclear-fuel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "nuclear-fuel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-FUEL_GENERIC
-- Description: Generic compatibility patch for item plutonium-fuel
-- Fixes: CONFLICT_ITEM_PLUTONIUM-FUEL


-- Generic compatibility patch for plutonium-fuel
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-fuel"] then
    local item = data.raw.item["plutonium-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-fuel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-fuel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item uranium-cannon-shell
-- Fixes: CONFLICT_ITEM_URANIUM-CANNON-SHELL


-- Generic compatibility patch for uranium-cannon-shell
-- Fixes conflict between: lilys-cubeine, Cerys-Moon-of-Fulgora
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-cannon-shell"] then
    local item = data.raw.item["uranium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-cannon-shell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-cannon-shell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item plutonium-cannon-shell
-- Fixes: CONFLICT_ITEM_PLUTONIUM-CANNON-SHELL


-- Generic compatibility patch for plutonium-cannon-shell
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-cannon-shell"] then
    local item = data.raw.item["plutonium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-cannon-shell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-cannon-shell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVE-PLUTONIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item explosive-plutonium-cannon-shell
-- Fixes: CONFLICT_ITEM_EXPLOSIVE-PLUTONIUM-CANNON-SHELL


-- Generic compatibility patch for explosive-plutonium-cannon-shell
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosive-plutonium-cannon-shell"] then
    local item = data.raw.item["explosive-plutonium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosive-plutonium-cannon-shell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosive-plutonium-cannon-shell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HOLMIUM-ORE_GENERIC
-- Description: Generic compatibility patch for item holmium-ore
-- Fixes: CONFLICT_ITEM_HOLMIUM-ORE


-- Generic compatibility patch for holmium-ore
-- Fixes conflict between: fulgora-coralmium-agriculture, metal-and-stars, Cerys-Moon-of-Fulgora, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["holmium-ore"] then
    local item = data.raw.item["holmium-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "holmium-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "holmium-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LITHIUM_GENERIC
-- Description: Generic compatibility patch for item lithium
-- Fixes: CONFLICT_ITEM_LITHIUM


-- Generic compatibility patch for lithium
-- Fixes conflict between: metal-and-stars, Cerys-Moon-of-Fulgora, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lithium"] then
    local item = data.raw.item["lithium"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lithium-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lithium-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ARTILLERY-SHELL_GENERIC
-- Description: Generic compatibility patch for item artillery-shell
-- Fixes: CONFLICT_ITEM_ARTILLERY-SHELL


-- Generic compatibility patch for artillery-shell
-- Fixes conflict between: StopgapNukes, Krastorio2-spaced-out, lilys-cubeine, Cerys-Moon-of-Fulgora
-- Severity: MEDIUM
-- Type: item


if data.raw.item["artillery-shell"] then
    local item = data.raw.item["artillery-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "artillery-shell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "artillery-shell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPEED-MODULE_GENERIC
-- Description: Generic compatibility patch for item speed-module
-- Fixes: CONFLICT_ITEM_SPEED-MODULE


-- Generic compatibility patch for speed-module
-- Fixes conflict between: Cold_biters, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["speed-module"] then
    local item = data.raw.item["speed-module"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "speed-module-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "speed-module-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GOLD-PLATE_GENERIC
-- Description: Generic compatibility patch for item gold-plate
-- Fixes: CONFLICT_ITEM_GOLD-PLATE


-- Generic compatibility patch for gold-plate
-- Fixes conflict between: metal-and-stars, lignumis, secretas, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gold-plate"] then
    local item = data.raw.item["gold-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gold-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gold-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GOLD-CABLE_GENERIC
-- Description: Generic compatibility patch for item gold-cable
-- Fixes: CONFLICT_ITEM_GOLD-CABLE


-- Generic compatibility patch for gold-cable
-- Fixes conflict between: metal-and-stars, lignumis, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gold-cable"] then
    local item = data.raw.item["gold-cable"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gold-cable-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gold-cable-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NEODYMIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item neodymium-plate
-- Fixes: CONFLICT_ITEM_NEODYMIUM-PLATE


-- Generic compatibility patch for neodymium-plate
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["neodymium-plate"] then
    local item = data.raw.item["neodymium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "neodymium-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "neodymium-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GOLD-ORE_GENERIC
-- Description: Generic compatibility patch for item gold-ore
-- Fixes: CONFLICT_ITEM_GOLD-ORE


-- Generic compatibility patch for gold-ore
-- Fixes conflict between: lignumis, secretas, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gold-ore"] then
    local item = data.raw.item["gold-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gold-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gold-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SILICA-SAND_GENERIC
-- Description: Generic compatibility patch for item silica-sand
-- Fixes: CONFLICT_ITEM_SILICA-SAND


-- Generic compatibility patch for silica-sand
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["silica-sand"] then
    local item = data.raw.item["silica-sand"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "silica-sand-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "silica-sand-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GLASS-PLATE_GENERIC
-- Description: Generic compatibility patch for item glass-plate
-- Fixes: CONFLICT_ITEM_GLASS-PLATE


-- Generic compatibility patch for glass-plate
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["glass-plate"] then
    local item = data.raw.item["glass-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "glass-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "glass-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GLASS-BILLET_GENERIC
-- Description: Generic compatibility patch for item glass-billet
-- Fixes: CONFLICT_ITEM_GLASS-BILLET


-- Generic compatibility patch for glass-billet
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["glass-billet"] then
    local item = data.raw.item["glass-billet"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "glass-billet-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "glass-billet-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NEODYMIUM-ORE_GENERIC
-- Description: Generic compatibility patch for item neodymium-ore
-- Fixes: CONFLICT_ITEM_NEODYMIUM-ORE


-- Generic compatibility patch for neodymium-ore
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["neodymium-ore"] then
    local item = data.raw.item["neodymium-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "neodymium-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "neodymium-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_INVERTED-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item inverted-microcube
-- Fixes: CONFLICT_ITEM_INVERTED-MICROCUBE


-- Generic compatibility patch for inverted-microcube
-- Fixes conflict between: cubium, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["inverted-microcube"] then
    local item = data.raw.item["inverted-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "inverted-microcube-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "inverted-microcube-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_INVERTED-DORMANT-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item inverted-dormant-microcube
-- Fixes: CONFLICT_ITEM_INVERTED-DORMANT-MICROCUBE


-- Generic compatibility patch for inverted-dormant-microcube
-- Fixes conflict between: cubium, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["inverted-dormant-microcube"] then
    local item = data.raw.item["inverted-dormant-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "inverted-dormant-microcube-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "inverted-dormant-microcube-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RAW-FISH_GENERIC
-- Description: Generic compatibility patch for item raw-fish
-- Fixes: CONFLICT_ITEM_RAW-FISH


-- Generic compatibility patch for raw-fish
-- Fixes conflict between: metal-and-stars, enemyracemanager, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["raw-fish"] then
    local item = data.raw.item["raw-fish"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "raw-fish-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "raw-fish-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BITER-EGG_GENERIC
-- Description: Generic compatibility patch for item biter-egg
-- Fixes: CONFLICT_ITEM_BITER-EGG


-- Generic compatibility patch for biter-egg
-- Fixes conflict between: cubium, Krastorio2-spaced-out, secretas, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["biter-egg"] then
    local item = data.raw.item["biter-egg"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "biter-egg-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "biter-egg-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LAB_GENERIC
-- Description: Generic compatibility patch for item lab
-- Fixes: CONFLICT_ITEM_LAB


-- Generic compatibility patch for lab
-- Fixes conflict between: Krastorio2-spaced-out, Moshine, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lab"] then
    local item = data.raw.item["lab"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lab-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lab-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET_GENERIC
-- Description: Generic compatibility patch for item rocket
-- Fixes: CONFLICT_ITEM_ROCKET


-- Generic compatibility patch for rocket
-- Fixes conflict between: StopgapNukes, lilys-cubeine, secretas, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket"] then
    local item = data.raw.item["rocket"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TUNGSTEN-CARBIDE_GENERIC
-- Description: Generic compatibility patch for item tungsten-carbide
-- Fixes: CONFLICT_ITEM_TUNGSTEN-CARBIDE


-- Generic compatibility patch for tungsten-carbide
-- Fixes conflict between: cubium, lignumis, vulcanus-sulfuric-bacteria, Krastorio2-spaced-out, lilys-cubeine, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tungsten-carbide"] then
    local item = data.raw.item["tungsten-carbide"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tungsten-carbide-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tungsten-carbide-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TUNGSTEN-ORE_GENERIC
-- Description: Generic compatibility patch for item tungsten-ore
-- Fixes: CONFLICT_ITEM_TUNGSTEN-ORE


-- Generic compatibility patch for tungsten-ore
-- Fixes conflict between: vulcanus-sulfuric-bacteria, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tungsten-ore"] then
    local item = data.raw.item["tungsten-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tungsten-ore-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tungsten-ore-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LEAD-PLATE_GENERIC
-- Description: Generic compatibility patch for item lead-plate
-- Fixes: CONFLICT_ITEM_LEAD-PLATE


-- Generic compatibility patch for lead-plate
-- Fixes conflict between: PlutoniumEnergy, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lead-plate"] then
    local item = data.raw.item["lead-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lead-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lead-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TITANIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item titanium-plate
-- Fixes: CONFLICT_ITEM_TITANIUM-PLATE


-- Generic compatibility patch for titanium-plate
-- Fixes conflict between: Fluid-level-indicator, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["titanium-plate"] then
    local item = data.raw.item["titanium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "titanium-plate-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "titanium-plate-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ENERGIZED-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item energized-microcube
-- Fixes: CONFLICT_ITEM_ENERGIZED-MICROCUBE


-- Generic compatibility patch for energized-microcube
-- Fixes conflict between: cubium, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["energized-microcube"] then
    local item = data.raw.item["energized-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "energized-microcube-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "energized-microcube-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DORMANT-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item dormant-microcube
-- Fixes: CONFLICT_ITEM_DORMANT-MICROCUBE


-- Generic compatibility patch for dormant-microcube
-- Fixes conflict between: cubium, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["dormant-microcube"] then
    local item = data.raw.item["dormant-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "dormant-microcube-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "dormant-microcube-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ICE_GENERIC
-- Description: Generic compatibility patch for item ice
-- Fixes: CONFLICT_ITEM_ICE


-- Generic compatibility patch for ice
-- Fixes conflict between: cubium, Krastorio2-spaced-out, secretas, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["ice"] then
    local item = data.raw.item["ice"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "ice-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "ice-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JELLY_GENERIC
-- Description: Generic compatibility patch for item jelly
-- Fixes: CONFLICT_ITEM_JELLY


-- Generic compatibility patch for jelly
-- Fixes conflict between: cubium, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jelly"] then
    local item = data.raw.item["jelly"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jelly-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jelly-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_AUTOMATION-SCIENCE-PACK_GENERIC
-- Description: Generic compatibility patch for item automation-science-pack
-- Fixes: CONFLICT_ITEM_AUTOMATION-SCIENCE-PACK


-- Generic compatibility patch for automation-science-pack
-- Fixes conflict between: cubium, Igrys
-- Severity: MEDIUM
-- Type: item


if data.raw.item["automation-science-pack"] then
    local item = data.raw.item["automation-science-pack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "automation-science-pack-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "automation-science-pack-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RAIL_GENERIC
-- Description: Generic compatibility patch for item rail
-- Fixes: CONFLICT_ITEM_RAIL


-- Generic compatibility patch for rail
-- Fixes conflict between: cubium, foundry-restructuring
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rail"] then
    local item = data.raw.item["rail"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rail-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rail-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PROMETHIUM-ASTEROID-CHUNK_GENERIC
-- Description: Generic compatibility patch for item promethium-asteroid-chunk
-- Fixes: CONFLICT_ITEM_PROMETHIUM-ASTEROID-CHUNK


-- Generic compatibility patch for promethium-asteroid-chunk
-- Fixes conflict between: VoidProcessing, cubium, promethium-quality, slp-dyson-sphere-reworked
-- Severity: MEDIUM
-- Type: item


if data.raw.item["promethium-asteroid-chunk"] then
    local item = data.raw.item["promethium-asteroid-chunk"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "promethium-asteroid-chunk-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "promethium-asteroid-chunk-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TURBO-TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item turbo-transport-belt
-- Fixes: CONFLICT_ITEM_TURBO-TRANSPORT-BELT


-- Generic compatibility patch for turbo-transport-belt
-- Fixes conflict between: cubium, Krastorio2-spaced-out
-- Severity: MEDIUM
-- Type: item


if data.raw.item["turbo-transport-belt"] then
    local item = data.raw.item["turbo-transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "turbo-transport-belt-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "turbo-transport-belt-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TURBO-UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item turbo-underground-belt
-- Fixes: CONFLICT_ITEM_TURBO-UNDERGROUND-BELT


-- Generic compatibility patch for turbo-underground-belt
-- Fixes conflict between: cubium, Krastorio2-spaced-out
-- Severity: MEDIUM
-- Type: item


if data.raw.item["turbo-underground-belt"] then
    local item = data.raw.item["turbo-underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "turbo-underground-belt-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "turbo-underground-belt-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TURBO-SPLITTER_GENERIC
-- Description: Generic compatibility patch for item turbo-splitter
-- Fixes: CONFLICT_ITEM_TURBO-SPLITTER


-- Generic compatibility patch for turbo-splitter
-- Fixes conflict between: cubium, Krastorio2-spaced-out
-- Severity: MEDIUM
-- Type: item


if data.raw.item["turbo-splitter"] then
    local item = data.raw.item["turbo-splitter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "turbo-splitter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "turbo-splitter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FOUNDRY_GENERIC
-- Description: Generic compatibility patch for item foundry
-- Fixes: CONFLICT_ITEM_FOUNDRY


-- Generic compatibility patch for foundry
-- Fixes conflict between: cubium, Krastorio2-spaced-out
-- Severity: MEDIUM
-- Type: item


if data.raw.item["foundry"] then
    local item = data.raw.item["foundry"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "foundry-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "foundry-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EFFICIENCY-MODULE_GENERIC
-- Description: Generic compatibility patch for item efficiency-module
-- Fixes: CONFLICT_ITEM_EFFICIENCY-MODULE


-- Generic compatibility patch for efficiency-module
-- Fixes conflict between: Hovercrafts, Electric Furnaces
-- Severity: MEDIUM
-- Type: item


if data.raw.item["efficiency-module"] then
    local item = data.raw.item["efficiency-module"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "efficiency-module-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "efficiency-module-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SMALL-LAMP_GENERIC
-- Description: Generic compatibility patch for item small-lamp
-- Fixes: CONFLICT_ITEM_SMALL-LAMP


-- Generic compatibility patch for small-lamp
-- Fixes conflict between: Fluid-level-indicator, secretas, metal-and-stars, Krastorio2-spaced-out, terrapalus
-- Severity: MEDIUM
-- Type: item


if data.raw.item["small-lamp"] then
    local item = data.raw.item["small-lamp"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "small-lamp-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "small-lamp-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STEEL-PIPE_GENERIC
-- Description: Generic compatibility patch for item kr-steel-pipe
-- Fixes: CONFLICT_ITEM_KR-STEEL-PIPE


-- Generic compatibility patch for kr-steel-pipe
-- Fixes conflict between: Krastorio2-spaced-out, Fluid-level-indicator
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-steel-pipe"] then
    local item = data.raw.item["kr-steel-pipe"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-steel-pipe-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-steel-pipe-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STACK-INSERTER_GENERIC
-- Description: Generic compatibility patch for item stack-inserter
-- Fixes: CONFLICT_ITEM_STACK-INSERTER


-- Generic compatibility patch for stack-inserter
-- Fixes conflict between: Krastorio2-spaced-out, long_stack_inserter
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stack-inserter"] then
    local item = data.raw.item["stack-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stack-inserter-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stack-inserter-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOOD-DARTS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item wood-darts-magazine
-- Fixes: CONFLICT_ITEM_WOOD-DARTS-MAGAZINE


-- Generic compatibility patch for wood-darts-magazine
-- Fixes conflict between: wood-military, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["wood-darts-magazine"] then
    local item = data.raw.item["wood-darts-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "wood-darts-magazine-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "wood-darts-magazine-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOOD-ARMOR_GENERIC
-- Description: Generic compatibility patch for item wood-armor
-- Fixes: CONFLICT_ITEM_WOOD-ARMOR


-- Generic compatibility patch for wood-armor
-- Fixes conflict between: wood-military, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["wood-armor"] then
    local item = data.raw.item["wood-armor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "wood-armor-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "wood-armor-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIG-MINING-DRILL_GENERIC
-- Description: Generic compatibility patch for item big-mining-drill
-- Fixes: CONFLICT_ITEM_BIG-MINING-DRILL


-- Generic compatibility patch for big-mining-drill
-- Fixes conflict between: lilys-cubeine, OmegaDrill
-- Severity: MEDIUM
-- Type: item


if data.raw.item["big-mining-drill"] then
    local item = data.raw.item["big-mining-drill"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "big-mining-drill-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "big-mining-drill-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item cannon-shell
-- Fixes: CONFLICT_ITEM_CANNON-SHELL


-- Generic compatibility patch for cannon-shell
-- Fixes conflict between: lilys-cubeine, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["cannon-shell"] then
    local item = data.raw.item["cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "cannon-shell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "cannon-shell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPACE-PLATFORM-FOUNDATION_GENERIC
-- Description: Generic compatibility patch for item space-platform-foundation
-- Fixes: CONFLICT_ITEM_SPACE-PLATFORM-FOUNDATION


-- Generic compatibility patch for space-platform-foundation
-- Fixes conflict between: Moshine, secretas, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["space-platform-foundation"] then
    local item = data.raw.item["space-platform-foundation"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "space-platform-foundation-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "space-platform-foundation-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NEODYMIUM_GENERIC
-- Description: Generic compatibility patch for item neodymium
-- Fixes: CONFLICT_ITEM_NEODYMIUM


-- Generic compatibility patch for neodymium
-- Fixes conflict between: Moshine-assets, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["neodymium"] then
    local item = data.raw.item["neodymium"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "neodymium-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "neodymium-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DISPLAY-PANEL_GENERIC
-- Description: Generic compatibility patch for item display-panel
-- Fixes: CONFLICT_ITEM_DISPLAY-PANEL


-- Generic compatibility patch for display-panel
-- Fixes conflict between: secretas, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["display-panel"] then
    local item = data.raw.item["display-panel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "display-panel-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "display-panel-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CONSTANT-COMBINATOR_GENERIC
-- Description: Generic compatibility patch for item constant-combinator
-- Fixes: CONFLICT_ITEM_CONSTANT-COMBINATOR


-- Generic compatibility patch for constant-combinator
-- Fixes conflict between: PavementDriveAssistContinued, secretas, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["constant-combinator"] then
    local item = data.raw.item["constant-combinator"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "constant-combinator-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "constant-combinator-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DEPLETED-URANIUM-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item depleted-uranium-fuel-cell
-- Fixes: CONFLICT_ITEM_DEPLETED-URANIUM-FUEL-CELL


-- Generic compatibility patch for depleted-uranium-fuel-cell
-- Fixes conflict between: StopgapNukes, secretas, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["depleted-uranium-fuel-cell"] then
    local item = data.raw.item["depleted-uranium-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "depleted-uranium-fuel-cell-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "depleted-uranium-fuel-cell-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JR-BORAX_GENERIC
-- Description: Generic compatibility patch for item jr-borax
-- Fixes: CONFLICT_ITEM_JR-BORAX


-- Generic compatibility patch for jr-borax
-- Fixes conflict between: quirkycat_boron, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jr-borax"] then
    local item = data.raw.item["jr-borax"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jr-borax-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jr-borax-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JR-BORON_GENERIC
-- Description: Generic compatibility patch for item jr-boron
-- Fixes: CONFLICT_ITEM_JR-BORON


-- Generic compatibility patch for jr-boron
-- Fixes conflict between: quirkycat_boron, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jr-boron"] then
    local item = data.raw.item["jr-boron"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jr-boron-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jr-boron-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JR-BORON-ROD_GENERIC
-- Description: Generic compatibility patch for item jr-boron-rod
-- Fixes: CONFLICT_ITEM_JR-BORON-ROD


-- Generic compatibility patch for jr-boron-rod
-- Fixes conflict between: quirkycat_boron, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jr-boron-rod"] then
    local item = data.raw.item["jr-boron-rod"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jr-boron-rod-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jr-boron-rod-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CHARCOAL_GENERIC
-- Description: Generic compatibility patch for item charcoal
-- Fixes: CONFLICT_ITEM_CHARCOAL


-- Generic compatibility patch for charcoal
-- Fixes conflict between: wood-industry, quirkycat_base, quirkycat_machines
-- Severity: MEDIUM
-- Type: item


if data.raw.item["charcoal"] then
    local item = data.raw.item["charcoal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "charcoal-basic",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "charcoal-advanced",
        icon = item.icon,
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WATER_GENERIC
-- Description: Generic compatibility patch for fluid water
-- Fixes: CONFLICT_FLUID_WATER


-- Generic compatibility patch for water
-- Fixes conflict between: secretas, Cerys-Moon-of-Fulgora, astroponics, Cold_biters, Moshine-assets, aai-industry, Paracelsin, castra, cubium, vulcanus-sulfuric-bacteria, bobelectronics, wood-industry, StopgapNukes, cerys-lunaponics, bobgreenhouse, bobplates, Krastorio2-spaced-out, quirkycat_boron, WaterExtractor, crushing-industry, lignumis, corrundum, dea-dia-system, metal-and-stars, terrapalus, planet-muluna
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["water"] then
    local prototype = data.raw["fluid"]["water"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.water")
end


-- Patch: PATCH_CRUDE-OIL_GENERIC
-- Description: Generic compatibility patch for fluid crude-oil
-- Fixes: CONFLICT_FLUID_CRUDE-OIL


-- Generic compatibility patch for crude-oil
-- Fixes conflict between: castra, bobplates, bobelectronics, boblogistics, metal-and-stars, planet-muluna, astroponics, aai-industry, janus
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["crude-oil"] then
    local prototype = data.raw["fluid"]["crude-oil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.crude-oil")
end


-- Patch: PATCH_HEAVY-OIL_GENERIC
-- Description: Generic compatibility patch for fluid heavy-oil
-- Fixes: CONFLICT_FLUID_HEAVY-OIL


-- Generic compatibility patch for heavy-oil
-- Fixes conflict between: castra, bobplates, secretas, boblogistics, bobelectronics, corrundum, Krastorio2-spaced-out, metal-and-stars, lilys-cubeine, planet-muluna, terrapalus, wood-industry, aai-industry
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["heavy-oil"] then
    local prototype = data.raw["fluid"]["heavy-oil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.heavy-oil")
end


-- Patch: PATCH_LIGHT-OIL_GENERIC
-- Description: Generic compatibility patch for fluid light-oil
-- Fixes: CONFLICT_FLUID_LIGHT-OIL


-- Generic compatibility patch for light-oil
-- Fixes conflict between: castra, cubium, bobplates, boblogistics, bobelectronics, corrundum, Krastorio2-spaced-out, metal-and-stars, lilys-cubeine, Cerys-Moon-of-Fulgora, planet-muluna, Cold_biters, wood-industry, aai-industry
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["light-oil"] then
    local prototype = data.raw["fluid"]["light-oil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.light-oil")
end


-- Patch: PATCH_PETROLEUM-GAS_GENERIC
-- Description: Generic compatibility patch for fluid petroleum-gas
-- Fixes: CONFLICT_FLUID_PETROLEUM-GAS


-- Generic compatibility patch for petroleum-gas
-- Fixes conflict between: bobgreenhouse, castra, cubium, bobplates, boblogistics, bobelectronics, corrundum, Krastorio2-spaced-out, wood-industry, lilys-cubeine, planet-muluna, StopgapNukes, Cold_biters, VoidProcessing, Moshine-assets, aai-industry
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["petroleum-gas"] then
    local prototype = data.raw["fluid"]["petroleum-gas"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.petroleum-gas")
end


-- Patch: PATCH_VIRTUAL-SIGNAL-UTILITY_GENERIC
-- Description: Generic compatibility patch for item-subgroup virtual-signal-utility
-- Fixes: CONFLICT_ITEM-SUBGROUP_VIRTUAL-SIGNAL-UTILITY


-- Generic compatibility patch for virtual-signal-utility
-- Fixes conflict between: informatron, aai-signals
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["virtual-signal-utility"] then
    local prototype = data.raw["item-subgroup"]["virtual-signal-utility"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.virtual-signal-utility")
end


-- Patch: PATCH_SIGNAL-WAYPOINT_GENERIC
-- Description: Generic compatibility patch for virtual-signal signal-waypoint
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_SIGNAL-WAYPOINT


-- Generic compatibility patch for signal-waypoint
-- Fixes conflict between: SpidertronPatrols, aai-signals
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["signal-waypoint"] then
    local prototype = data.raw["virtual-signal"]["signal-waypoint"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.signal-waypoint")
end


-- Patch: PATCH_FLAMETHROWER-AMMO_GENERIC
-- Description: Generic compatibility patch for ammo flamethrower-ammo
-- Fixes: CONFLICT_AMMO_FLAMETHROWER-AMMO


-- Generic compatibility patch for flamethrower-ammo
-- Fixes conflict between: aai-vehicles-flame-tank, aai-vehicles-flame-tumbler
-- Severity: LOW
-- Type: ammo


if data.raw["ammo"] and data.raw["ammo"]["flamethrower-ammo"] then
    local prototype = data.raw["ammo"]["flamethrower-ammo"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo.flamethrower-ammo")
end


-- Patch: PATCH_MEDIUM-SCORCHMARK-TINTABLE_GENERIC
-- Description: Generic compatibility patch for create-entity medium-scorchmark-tintable
-- Fixes: CONFLICT_CREATE-ENTITY_MEDIUM-SCORCHMARK-TINTABLE


-- Generic compatibility patch for medium-scorchmark-tintable
-- Fixes conflict between: StopgapNukes, aai-vehicles-ironclad, Moshine
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["medium-scorchmark-tintable"] then
    local prototype = data.raw["create-entity"]["medium-scorchmark-tintable"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.medium-scorchmark-tintable")
end


-- Patch: PATCH_EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity explosion
-- Fixes: CONFLICT_CREATE-ENTITY_EXPLOSION


-- Generic compatibility patch for explosion
-- Fixes conflict between: bobvehicleequipment, More_Ammo, aai-vehicles-ironclad, RampantFixed, cubium, wood-military, Krastorio2-spaced-out, RPGsystem
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["explosion"] then
    local prototype = data.raw["create-entity"]["explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.explosion")
end


-- Patch: PATCH_ADVANCED-CENTRIFUGING-OR-CRAFTING_GENERIC
-- Description: Generic compatibility patch for recipe-category advanced-centrifuging-or-crafting
-- Fixes: CONFLICT_RECIPE-CATEGORY_ADVANCED-CENTRIFUGING-OR-CRAFTING


-- Generic compatibility patch for advanced-centrifuging-or-crafting
-- Fixes conflict between: Age-of-Production, atan-nuclear-science
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["advanced-centrifuging-or-crafting"] then
    local prototype = data.raw["recipe-category"]["advanced-centrifuging-or-crafting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.advanced-centrifuging-or-crafting")
end


-- Patch: PATCH_BIG-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity big-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_BIG-EXPLOSION


-- Generic compatibility patch for big-explosion
-- Fixes conflict between: Krastorio2-spaced-out, RPGsystem, StopgapNukes, Aircraft-space-age
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["big-explosion"] then
    local prototype = data.raw["create-entity"]["big-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.big-explosion")
end


-- Patch: PATCH_EXPLOSION-GUNSHOT_GENERIC
-- Description: Generic compatibility patch for create-explosion explosion-gunshot
-- Fixes: CONFLICT_CREATE-EXPLOSION_EXPLOSION-GUNSHOT


-- Generic compatibility patch for explosion-gunshot
-- Fixes conflict between: More_Ammo, PlutoniumEnergy, lignumis, grappling-gun, metal-and-stars, Krastorio2-spaced-out, StopgapNukes, vtk-cannon-turret, Aircraft-space-age, alien-module
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["explosion-gunshot"] then
    local prototype = data.raw["create-explosion"]["explosion-gunshot"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.explosion-gunshot")
end


-- Patch: PATCH_LUBRICANT_GENERIC
-- Description: Generic compatibility patch for fluid lubricant
-- Fixes: CONFLICT_FLUID_LUBRICANT


-- Generic compatibility patch for lubricant
-- Fixes conflict between: castra, promethium-quality, bobplates, secretas, dea-dia-system, Hovercrafts, metal-and-stars, lilys-cubeine, Cerys-Moon-of-Fulgora, Cold_biters, tenebris-prime, Aircraft-space-age
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["lubricant"] then
    local prototype = data.raw["fluid"]["lubricant"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.lubricant")
end


-- Patch: PATCH_EXPLOSION-HIT_GENERIC
-- Description: Generic compatibility patch for create-entity explosion-hit
-- Fixes: CONFLICT_CREATE-ENTITY_EXPLOSION-HIT


-- Generic compatibility patch for explosion-hit
-- Fixes conflict between: PlutoniumEnergy, corrundum, Krastorio2-spaced-out, StopgapNukes, Electric_flying_enemies, alien-module
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["explosion-hit"] then
    local prototype = data.raw["create-entity"]["explosion-hit"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.explosion-hit")
end


-- Patch: PATCH_AMMONIA_GENERIC
-- Description: Generic compatibility patch for fluid ammonia
-- Fixes: CONFLICT_FLUID_AMMONIA


-- Generic compatibility patch for ammonia
-- Fixes conflict between: cerys-lunaponics, cubium, promethium-quality, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, aquilo-seabloom-algaculture
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["ammonia"] then
    local prototype = data.raw["fluid"]["ammonia"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.ammonia")
end


-- Patch: PATCH_STEAM_GENERIC
-- Description: Generic compatibility patch for fluid steam
-- Fixes: CONFLICT_FLUID_STEAM


-- Generic compatibility patch for steam
-- Fixes conflict between: cubium, bobplates, lignumis, secretas, vulcanus-sulfuric-bacteria, corrundum, dea-dia-system, Krastorio2-spaced-out, wood-industry, Cerys-Moon-of-Fulgora, Cold_biters, Moshine-assets, aquilo-seabloom-algaculture, Moshine
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["steam"] then
    local prototype = data.raw["fluid"]["steam"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.steam")
end


-- Patch: PATCH_FLUOROKETONE-HOT_GENERIC
-- Description: Generic compatibility patch for fluid fluoroketone-hot
-- Fixes: CONFLICT_FLUID_FLUOROKETONE-HOT


-- Generic compatibility patch for fluoroketone-hot
-- Fixes conflict between: cubium, VoidProcessing, aquilo-seabloom-algaculture, corrundum
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["fluoroketone-hot"] then
    local prototype = data.raw["fluid"]["fluoroketone-hot"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.fluoroketone-hot")
end


-- Patch: PATCH_FLUOROKETONE-COLD_GENERIC
-- Description: Generic compatibility patch for fluid fluoroketone-cold
-- Fixes: CONFLICT_FLUID_FLUOROKETONE-COLD


-- Generic compatibility patch for fluoroketone-cold
-- Fixes conflict between: cubium, promethium-quality, metal-and-stars, corrundum, Krastorio2-spaced-out, VoidProcessing, aquilo-seabloom-algaculture
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["fluoroketone-cold"] then
    local prototype = data.raw["fluid"]["fluoroketone-cold"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.fluoroketone-cold")
end


-- Patch: PATCH_LIQUID-FERTILIZER_GENERIC
-- Description: Generic compatibility patch for fluid liquid-fertilizer
-- Fixes: CONFLICT_FLUID_LIQUID-FERTILIZER


-- Generic compatibility patch for liquid-fertilizer
-- Fixes conflict between: cerys-lunaponics, lilys-cubeine, astroponics
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["liquid-fertilizer"] then
    local prototype = data.raw["fluid"]["liquid-fertilizer"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.liquid-fertilizer")
end


-- Patch: PATCH_BIOSLURRY_GENERIC
-- Description: Generic compatibility patch for fluid bioslurry
-- Fixes: CONFLICT_FLUID_BIOSLURRY


-- Generic compatibility patch for bioslurry
-- Fixes conflict between: lilys-cubeine, astroponics
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bioslurry"] then
    local prototype = data.raw["fluid"]["bioslurry"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bioslurry")
end


-- Patch: PATCH_SULFURIC-ACID_GENERIC
-- Description: Generic compatibility patch for fluid sulfuric-acid
-- Fixes: CONFLICT_FLUID_SULFURIC-ACID


-- Generic compatibility patch for sulfuric-acid
-- Fixes conflict between: More_Ammo, slp-dyson-sphere-reworked, PlutoniumEnergy, castra, se-space-trains, cubium, bobplates, vulcanus-sulfuric-bacteria, bobelectronics, corrundum, crushing-industry, Krastorio2-spaced-out, wood-industry, Cerys-Moon-of-Fulgora, astroponics, Cold_biters, tenebris-prime, Moshine
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["sulfuric-acid"] then
    local prototype = data.raw["fluid"]["sulfuric-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.sulfuric-acid")
end


-- Patch: PATCH_ARTILLERY-CANNON-MUZZLE-FLASH_GENERIC
-- Description: Generic compatibility patch for create-explosion artillery-cannon-muzzle-flash
-- Fixes: CONFLICT_CREATE-EXPLOSION_ARTILLERY-CANNON-MUZZLE-FLASH


-- Generic compatibility patch for artillery-cannon-muzzle-flash
-- Fixes conflict between: PlutoniumEnergy, atomic-artillery-reborn, wood-military, Krastorio2-spaced-out, StopgapNukes
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["artillery-cannon-muzzle-flash"] then
    local prototype = data.raw["create-explosion"]["artillery-cannon-muzzle-flash"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.artillery-cannon-muzzle-flash")
end


-- Patch: PATCH_BOB-ELECTRONICS_GENERIC
-- Description: Generic compatibility patch for recipe-category bob-electronics
-- Fixes: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS


-- Generic compatibility patch for bob-electronics
-- Fixes conflict between: bobassembly, bobelectronics
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics"] then
    local prototype = data.raw["recipe-category"]["bob-electronics"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics")
end


-- Patch: PATCH_BOB-ELECTRONICS-MACHINE_GENERIC
-- Description: Generic compatibility patch for recipe-category bob-electronics-machine
-- Fixes: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS-MACHINE


-- Generic compatibility patch for bob-electronics-machine
-- Fixes conflict between: bobassembly, bobelectronics
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics-machine"] then
    local prototype = data.raw["recipe-category"]["bob-electronics-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics-machine")
end


-- Patch: PATCH_BOB-ELECTRONICS-WITH-FLUID_GENERIC
-- Description: Generic compatibility patch for recipe-category bob-electronics-with-fluid
-- Fixes: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS-WITH-FLUID


-- Generic compatibility patch for bob-electronics-with-fluid
-- Fixes conflict between: bobassembly, bobelectronics
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics-with-fluid"] then
    local prototype = data.raw["recipe-category"]["bob-electronics-with-fluid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics-with-fluid")
end


-- Patch: PATCH_BOB-ASSEMBLY-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-assembly-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ASSEMBLY-MACHINE


-- Generic compatibility patch for bob-assembly-machine
-- Fixes conflict between: bobplates, bobassembly
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-assembly-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-assembly-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-assembly-machine")
end


-- Patch: PATCH_BOB-CHEMICAL-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-chemical-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-CHEMICAL-MACHINE


-- Generic compatibility patch for bob-chemical-machine
-- Fixes conflict between: bobplates, bobassembly
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-chemical-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-chemical-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-chemical-machine")
end


-- Patch: PATCH_BOB-ELECTROLYSER-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-electrolyser-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ELECTROLYSER-MACHINE


-- Generic compatibility patch for bob-electrolyser-machine
-- Fixes conflict between: bobplates, bobassembly
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electrolyser-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-electrolyser-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electrolyser-machine")
end


-- Patch: PATCH_BOB-REFINERY-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-refinery-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-REFINERY-MACHINE


-- Generic compatibility patch for bob-refinery-machine
-- Fixes conflict between: bobplates, bobassembly
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-refinery-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-refinery-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-refinery-machine")
end


-- Patch: PATCH_BOB-RESOURCE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-resource
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-RESOURCE


-- Generic compatibility patch for bob-resource
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-resource"] then
    local prototype = data.raw["item-subgroup"]["bob-resource"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-resource")
end


-- Patch: PATCH_BOB-ELECTRONIC-COMPONENTS_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-electronic-components
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ELECTRONIC-COMPONENTS


-- Generic compatibility patch for bob-electronic-components
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electronic-components"] then
    local prototype = data.raw["item-subgroup"]["bob-electronic-components"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electronic-components")
end


-- Patch: PATCH_BOB-BOARDS_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-boards
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-BOARDS


-- Generic compatibility patch for bob-boards
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-boards"] then
    local prototype = data.raw["item-subgroup"]["bob-boards"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-boards")
end


-- Patch: PATCH_BOB-ELECTRONIC-BOARDS_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-electronic-boards
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ELECTRONIC-BOARDS


-- Generic compatibility patch for bob-electronic-boards
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electronic-boards"] then
    local prototype = data.raw["item-subgroup"]["bob-electronic-boards"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electronic-boards")
end


-- Patch: PATCH_BOB-FERRIC-CHLORIDE-SOLUTION_GENERIC
-- Description: Generic compatibility patch for fluid bob-ferric-chloride-solution
-- Fixes: CONFLICT_FLUID_BOB-FERRIC-CHLORIDE-SOLUTION


-- Generic compatibility patch for bob-ferric-chloride-solution
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-ferric-chloride-solution"] then
    local prototype = data.raw["fluid"]["bob-ferric-chloride-solution"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-ferric-chloride-solution")
end


-- Patch: PATCH_BOB-COMPUTER-AGE-1_GENERIC
-- Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-1
-- Fixes: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-1


-- Generic compatibility patch for bob-computer-age-1
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: produce-per-hour-achievement


if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-1"] then
    local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-1"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-1")
end


-- Patch: PATCH_BOB-COMPUTER-AGE-2_GENERIC
-- Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-2
-- Fixes: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-2


-- Generic compatibility patch for bob-computer-age-2
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: produce-per-hour-achievement


if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-2"] then
    local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-2")
end


-- Patch: PATCH_BOB-COMPUTER-AGE-3_GENERIC
-- Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-3
-- Fixes: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-3


-- Generic compatibility patch for bob-computer-age-3
-- Fixes conflict between: bobplates, bobelectronics
-- Severity: LOW
-- Type: produce-per-hour-achievement


if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-3"] then
    local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-3"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-3")
end


-- Patch: PATCH_BOB-PLASMA_GENERIC
-- Description: Generic compatibility patch for damage-type bob-plasma
-- Fixes: CONFLICT_DAMAGE-TYPE_BOB-PLASMA


-- Generic compatibility patch for bob-plasma
-- Fixes conflict between: bobvehicleequipment, bobenemies
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["bob-plasma"] then
    local prototype = data.raw["damage-type"]["bob-plasma"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.bob-plasma")
end


-- Patch: PATCH_BOB-INSERTER-LONG_GENERIC
-- Description: Generic compatibility patch for custom-input bob-inserter-long
-- Fixes: CONFLICT_CUSTOM-INPUT_BOB-INSERTER-LONG


-- Generic compatibility patch for bob-inserter-long
-- Fixes conflict between: bobinserters, boblogistics
-- Severity: LOW
-- Type: custom-input


if data.raw["custom-input"] and data.raw["custom-input"]["bob-inserter-long"] then
    local prototype = data.raw["custom-input"]["bob-inserter-long"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "custom-input.bob-inserter-long")
end


-- Patch: PATCH_SIGNAL-X_GENERIC
-- Description: Generic compatibility patch for virtual signal-X
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-X


-- Generic compatibility patch for signal-X
-- Fixes conflict between: Krastorio2-spaced-out, boblogistics
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-X"] then
    local prototype = data.raw["virtual"]["signal-X"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-X")
end


-- Patch: PATCH_SIGNAL-Y_GENERIC
-- Description: Generic compatibility patch for virtual signal-Y
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-Y


-- Generic compatibility patch for signal-Y
-- Fixes conflict between: Krastorio2-spaced-out, boblogistics
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-Y"] then
    local prototype = data.raw["virtual"]["signal-Y"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-Y")
end


-- Patch: PATCH_SIGNAL-Z_GENERIC
-- Description: Generic compatibility patch for virtual signal-Z
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-Z


-- Generic compatibility patch for signal-Z
-- Fixes conflict between: Krastorio2-spaced-out, boblogistics
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-Z"] then
    local prototype = data.raw["virtual"]["signal-Z"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-Z")
end


-- Patch: PATCH_SIGNAL-T_GENERIC
-- Description: Generic compatibility patch for virtual signal-T
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-T


-- Generic compatibility patch for signal-T
-- Fixes conflict between: Krastorio2-spaced-out, RampantFixed, boblogistics
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-T"] then
    local prototype = data.raw["virtual"]["signal-T"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-T")
end


-- Patch: PATCH_BOB-ORES_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-ores
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ORES


-- Generic compatibility patch for bob-ores
-- Fixes conflict between: bobplates, bobores
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-ores"] then
    local prototype = data.raw["item-subgroup"]["bob-ores"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-ores")
end


-- Patch: PATCH_BOB-GEMS-ORE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-gems-ore
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-GEMS-ORE


-- Generic compatibility patch for bob-gems-ore
-- Fixes conflict between: bobplates, bobores
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-gems-ore"] then
    local prototype = data.raw["item-subgroup"]["bob-gems-ore"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-gems-ore")
end


-- Patch: PATCH_BOB-ALIEN-ACID_GENERIC
-- Description: Generic compatibility patch for fluid bob-alien-acid
-- Fixes: CONFLICT_FLUID_BOB-ALIEN-ACID


-- Generic compatibility patch for bob-alien-acid
-- Fixes conflict between: bobvehicleequipment, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-alien-acid"] then
    local prototype = data.raw["fluid"]["bob-alien-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-alien-acid")
end


-- Patch: PATCH_SIGNAL-A_GENERIC
-- Description: Generic compatibility patch for virtual signal-A
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-A


-- Generic compatibility patch for signal-A
-- Fixes conflict between: Krastorio2-spaced-out, snouz-big-accumulator, bobpower, metal-and-stars
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-A"] then
    local prototype = data.raw["virtual"]["signal-A"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-A")
end


-- Patch: PATCH_SMALL-SCORCHMARK_GENERIC
-- Description: Generic compatibility patch for create-entity small-scorchmark
-- Fixes: CONFLICT_CREATE-ENTITY_SMALL-SCORCHMARK


-- Generic compatibility patch for small-scorchmark
-- Fixes conflict between: bobvehicleequipment, Krastorio2-spaced-out, PlutoniumEnergy
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["small-scorchmark"] then
    local prototype = data.raw["create-entity"]["small-scorchmark"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.small-scorchmark")
end


-- Patch: PATCH_HYDROGEN-SULFIDE_GENERIC
-- Description: Generic compatibility patch for fluid hydrogen-sulfide
-- Fixes: CONFLICT_FLUID_HYDROGEN-SULFIDE


-- Generic compatibility patch for hydrogen-sulfide
-- Fixes conflict between: corrundum, StopgapNukes, castra
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["hydrogen-sulfide"] then
    local prototype = data.raw["fluid"]["hydrogen-sulfide"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.hydrogen-sulfide")
end


-- Patch: PATCH_MOLTEN-IRON_GENERIC
-- Description: Generic compatibility patch for fluid molten-iron
-- Fixes: CONFLICT_FLUID_MOLTEN-IRON


-- Generic compatibility patch for molten-iron
-- Fixes conflict between: castra, foundry-restructuring, common-prototypes, metal-and-stars, Krastorio2-spaced-out, crushing-industry, Moshine-assets, Paracelsin, Moshine
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-iron"] then
    local prototype = data.raw["fluid"]["molten-iron"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-iron")
end


-- Patch: PATCH_HOLMIUM-SOLUTION_GENERIC
-- Description: Generic compatibility patch for fluid holmium-solution
-- Fixes: CONFLICT_FLUID_HOLMIUM-SOLUTION


-- Generic compatibility patch for holmium-solution
-- Fixes conflict between: fulgora-coralmium-agriculture, Cerys-Moon-of-Fulgora, castra
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["holmium-solution"] then
    local prototype = data.raw["fluid"]["holmium-solution"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.holmium-solution")
end


-- Patch: PATCH_METHANE_GENERIC
-- Description: Generic compatibility patch for fluid methane
-- Fixes: CONFLICT_FLUID_METHANE


-- Generic compatibility patch for methane
-- Fixes conflict between: cerys-lunaponics, Cerys-Moon-of-Fulgora
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["methane"] then
    local prototype = data.raw["fluid"]["methane"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.methane")
end


-- Patch: PATCH_NITRIC-ACID_GENERIC
-- Description: Generic compatibility patch for fluid nitric-acid
-- Fixes: CONFLICT_FLUID_NITRIC-ACID


-- Generic compatibility patch for nitric-acid
-- Fixes conflict between: cerys-lunaponics, Cerys-Moon-of-Fulgora
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["nitric-acid"] then
    local prototype = data.raw["fluid"]["nitric-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.nitric-acid")
end


-- Patch: PATCH_COLD_GENERIC
-- Description: Generic compatibility patch for damage-type cold
-- Fixes: CONFLICT_DAMAGE-TYPE_COLD


-- Generic compatibility patch for cold
-- Fixes conflict between: enemyracemanager, Cold_biters
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["cold"] then
    local prototype = data.raw["damage-type"]["cold"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.cold")
end


-- Patch: PATCH_SPACE-NANITES_GENERIC
-- Description: Generic compatibility patch for item-subgroup space-nanites
-- Fixes: CONFLICT_ITEM-SUBGROUP_SPACE-NANITES


-- Generic compatibility patch for space-nanites
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["space-nanites"] then
    local prototype = data.raw["item-subgroup"]["space-nanites"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.space-nanites")
end


-- Patch: PATCH_SHIPYARD-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup shipyard-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_SHIPYARD-PROCESSES


-- Generic compatibility patch for shipyard-processes
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["shipyard-processes"] then
    local prototype = data.raw["item-subgroup"]["shipyard-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.shipyard-processes")
end


-- Patch: PATCH_NIX-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup nix-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_NIX-PROCESSES


-- Generic compatibility patch for nix-processes
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["nix-processes"] then
    local prototype = data.raw["item-subgroup"]["nix-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.nix-processes")
end


-- Patch: PATCH_RINGWORLD-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup ringworld-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_RINGWORLD-PROCESSES


-- Generic compatibility patch for ringworld-processes
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["ringworld-processes"] then
    local prototype = data.raw["item-subgroup"]["ringworld-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.ringworld-processes")
end


-- Patch: PATCH_MIRANDUS-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup mirandus-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_MIRANDUS-PROCESSES


-- Generic compatibility patch for mirandus-processes
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["mirandus-processes"] then
    local prototype = data.raw["item-subgroup"]["mirandus-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.mirandus-processes")
end


-- Patch: PATCH_QUANTUM-PROCESSING_GENERIC
-- Description: Generic compatibility patch for item-subgroup quantum-processing
-- Fixes: CONFLICT_ITEM-SUBGROUP_QUANTUM-PROCESSING


-- Generic compatibility patch for quantum-processing
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["quantum-processing"] then
    local prototype = data.raw["item-subgroup"]["quantum-processing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.quantum-processing")
end


-- Patch: PATCH_QUANTUM-CONVERSION_GENERIC
-- Description: Generic compatibility patch for item-subgroup quantum-conversion
-- Fixes: CONFLICT_ITEM-SUBGROUP_QUANTUM-CONVERSION


-- Generic compatibility patch for quantum-conversion
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["quantum-conversion"] then
    local prototype = data.raw["item-subgroup"]["quantum-conversion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.quantum-conversion")
end


-- Patch: PATCH_LIQUID-FUEL_GENERIC
-- Description: Generic compatibility patch for item-subgroup liquid-fuel
-- Fixes: CONFLICT_ITEM-SUBGROUP_LIQUID-FUEL


-- Generic compatibility patch for liquid-fuel
-- Fixes conflict between: metal-and-stars, common-prototypes
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["liquid-fuel"] then
    local prototype = data.raw["item-subgroup"]["liquid-fuel"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.liquid-fuel")
end


-- Patch: PATCH_MOLTEN-GOLD_GENERIC
-- Description: Generic compatibility patch for fluid molten-gold
-- Fixes: CONFLICT_FLUID_MOLTEN-GOLD


-- Generic compatibility patch for molten-gold
-- Fixes conflict between: lignumis, common-prototypes
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-gold"] then
    local prototype = data.raw["fluid"]["molten-gold"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-gold")
end


-- Patch: PATCH_MOLTEN-GLASS_GENERIC
-- Description: Generic compatibility patch for fluid molten-glass
-- Fixes: CONFLICT_FLUID_MOLTEN-GLASS


-- Generic compatibility patch for molten-glass
-- Fixes conflict between: crushing-industry, common-prototypes
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-glass"] then
    local prototype = data.raw["fluid"]["molten-glass"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-glass")
end


-- Patch: PATCH_DREAM-CONCENTRATE_GENERIC
-- Description: Generic compatibility patch for fluid dream-concentrate
-- Fixes: CONFLICT_FLUID_DREAM-CONCENTRATE


-- Generic compatibility patch for dream-concentrate
-- Fixes conflict between: cubium, secretas, corrundum
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["dream-concentrate"] then
    local prototype = data.raw["fluid"]["dream-concentrate"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.dream-concentrate")
end


-- Patch: PATCH_THRUSTER-FUEL_GENERIC
-- Description: Generic compatibility patch for fluid thruster-fuel
-- Fixes: CONFLICT_FLUID_THRUSTER-FUEL


-- Generic compatibility patch for thruster-fuel
-- Fixes conflict between: VoidProcessing, cubium, slp-dyson-sphere-reworked, corrundum
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["thruster-fuel"] then
    local prototype = data.raw["fluid"]["thruster-fuel"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.thruster-fuel")
end


-- Patch: PATCH_THRUSTER-OXIDIZER_GENERIC
-- Description: Generic compatibility patch for fluid thruster-oxidizer
-- Fixes: CONFLICT_FLUID_THRUSTER-OXIDIZER


-- Generic compatibility patch for thruster-oxidizer
-- Fixes conflict between: cubium, slp-dyson-sphere-reworked, corrundum
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["thruster-oxidizer"] then
    local prototype = data.raw["fluid"]["thruster-oxidizer"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.thruster-oxidizer")
end


-- Patch: PATCH_BASIC-CRUSHING_GENERIC
-- Description: Generic compatibility patch for recipe-category basic-crushing
-- Fixes: CONFLICT_RECIPE-CATEGORY_BASIC-CRUSHING


-- Generic compatibility patch for basic-crushing
-- Fixes conflict between: quirkycat_base, crushing-industry
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["basic-crushing"] then
    local prototype = data.raw["recipe-category"]["basic-crushing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.basic-crushing")
end


-- Patch: PATCH_BASIC-CRUSHING-OR-CRAFTING_GENERIC
-- Description: Generic compatibility patch for recipe-category basic-crushing-or-crafting
-- Fixes: CONFLICT_RECIPE-CATEGORY_BASIC-CRUSHING-OR-CRAFTING


-- Generic compatibility patch for basic-crushing-or-crafting
-- Fixes conflict between: wood-industry, crushing-industry
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["basic-crushing-or-crafting"] then
    local prototype = data.raw["recipe-category"]["basic-crushing-or-crafting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.basic-crushing-or-crafting")
end


-- Patch: PATCH_LAVA_GENERIC
-- Description: Generic compatibility patch for fluid lava
-- Fixes: CONFLICT_FLUID_LAVA


-- Generic compatibility patch for lava
-- Fixes conflict between: metal-and-stars, vulcanus-sulfuric-bacteria, foundry-restructuring, crushing-industry
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["lava"] then
    local prototype = data.raw["fluid"]["lava"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.lava")
end


-- Patch: PATCH_SMALL-SCORCHMARK-TINTABLE_GENERIC
-- Description: Generic compatibility patch for create-entity small-scorchmark-tintable
-- Fixes: CONFLICT_CREATE-ENTITY_SMALL-SCORCHMARK-TINTABLE


-- Generic compatibility patch for small-scorchmark-tintable
-- Fixes conflict between: wood-military, cubium
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["small-scorchmark-tintable"] then
    local prototype = data.raw["create-entity"]["small-scorchmark-tintable"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.small-scorchmark-tintable")
end


-- Patch: PATCH_ULTRADENSE-LAVA_GENERIC
-- Description: Generic compatibility patch for fluid ultradense-lava
-- Fixes: CONFLICT_FLUID_ULTRADENSE-LAVA


-- Generic compatibility patch for ultradense-lava
-- Fixes conflict between: cubium, lilys-cubeine
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["ultradense-lava"] then
    local prototype = data.raw["fluid"]["ultradense-lava"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.ultradense-lava")
end


-- Patch: PATCH_MOLTEN-COPPER_GENERIC
-- Description: Generic compatibility patch for fluid molten-copper
-- Fixes: CONFLICT_FLUID_MOLTEN-COPPER


-- Generic compatibility patch for molten-copper
-- Fixes conflict between: Moshine-assets, cubium, Krastorio2-spaced-out, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-copper"] then
    local prototype = data.raw["fluid"]["molten-copper"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-copper")
end


-- Patch: PATCH_ELECTROLYTE_GENERIC
-- Description: Generic compatibility patch for fluid electrolyte
-- Fixes: CONFLICT_FLUID_ELECTROLYTE


-- Generic compatibility patch for electrolyte
-- Fixes conflict between: fulgora-coralmium-agriculture, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["electrolyte"] then
    local prototype = data.raw["fluid"]["electrolyte"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.electrolyte")
end


-- Patch: PATCH_HEALING_GENERIC
-- Description: Generic compatibility patch for damage-type healing
-- Fixes: CONFLICT_DAMAGE-TYPE_HEALING


-- Generic compatibility patch for healing
-- Fixes conflict between: RampantFixed, enemyracemanager
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["healing"] then
    local prototype = data.raw["damage-type"]["healing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.healing")
end


-- Patch: PATCH_PROTOSS--ARCHON-HIT-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-explosion protoss--archon-hit-explosion
-- Fixes: CONFLICT_CREATE-EXPLOSION_PROTOSS--ARCHON-HIT-EXPLOSION


-- Generic compatibility patch for protoss--archon-hit-explosion
-- Fixes conflict between: erm_toss, erm_toss_economy
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--archon-hit-explosion"] then
    local prototype = data.raw["create-explosion"]["protoss--archon-hit-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--archon-hit-explosion")
end


-- Patch: PATCH_PROTOSS--CORSAIR-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-explosion protoss--corsair-explosion
-- Fixes: CONFLICT_CREATE-EXPLOSION_PROTOSS--CORSAIR-EXPLOSION


-- Generic compatibility patch for protoss--corsair-explosion
-- Fixes conflict between: erm_toss, erm_toss_economy
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--corsair-explosion"] then
    local prototype = data.raw["create-explosion"]["protoss--corsair-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--corsair-explosion")
end


-- Patch: PATCH_PROTOSS--DISRUPT-80_GENERIC
-- Description: Generic compatibility patch for create-explosion protoss--disrupt-80
-- Fixes: CONFLICT_CREATE-EXPLOSION_PROTOSS--DISRUPT-80


-- Generic compatibility patch for protoss--disrupt-80
-- Fixes conflict between: erm_toss, erm_toss_economy
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--disrupt-80"] then
    local prototype = data.raw["create-explosion"]["protoss--disrupt-80"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--disrupt-80")
end


-- Patch: PATCH_MEDIUM-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-explosion medium-explosion
-- Fixes: CONFLICT_CREATE-EXPLOSION_MEDIUM-EXPLOSION


-- Generic compatibility patch for medium-explosion
-- Fixes conflict between: erm_zerg_economy, erm_zerg
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["medium-explosion"] then
    local prototype = data.raw["create-explosion"]["medium-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.medium-explosion")
end


-- Patch: PATCH_FIRE-FLAME_GENERIC
-- Description: Generic compatibility patch for create-fire fire-flame
-- Fixes: CONFLICT_CREATE-FIRE_FIRE-FLAME


-- Generic compatibility patch for fire-flame
-- Fixes conflict between: RPGsystem, Kux-OrbitalIonCannon
-- Severity: LOW
-- Type: create-fire


if data.raw["create-fire"] and data.raw["create-fire"]["fire-flame"] then
    local prototype = data.raw["create-fire"]["fire-flame"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-fire.fire-flame")
end


-- Patch: PATCH_FIRE-FLAME-ON-TREE_GENERIC
-- Description: Generic compatibility patch for create-fire fire-flame-on-tree
-- Fixes: CONFLICT_CREATE-FIRE_FIRE-FLAME-ON-TREE


-- Generic compatibility patch for fire-flame-on-tree
-- Fixes conflict between: More_Ammo, Kux-OrbitalIonCannon
-- Severity: LOW
-- Type: create-fire


if data.raw["create-fire"] and data.raw["create-fire"]["fire-flame-on-tree"] then
    local prototype = data.raw["create-fire"]["fire-flame-on-tree"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-fire.fire-flame-on-tree")
end


-- Patch: PATCH_HEAVY-WATER_GENERIC
-- Description: Generic compatibility patch for fluid heavy-water
-- Fixes: CONFLICT_FLUID_HEAVY-WATER


-- Generic compatibility patch for heavy-water
-- Fixes conflict between: StopgapNukes, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["heavy-water"] then
    local prototype = data.raw["fluid"]["heavy-water"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.heavy-water")
end


-- Patch: PATCH_RAW-DATA_GENERIC
-- Description: Generic compatibility patch for fluid raw-data
-- Fixes: CONFLICT_FLUID_RAW-DATA


-- Generic compatibility patch for raw-data
-- Fixes conflict between: Moshine-assets, Moshine
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["raw-data"] then
    local prototype = data.raw["fluid"]["raw-data"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.raw-data")
end


-- Patch: PATCH_PULVERISING_GENERIC
-- Description: Generic compatibility patch for recipe-category pulverising
-- Fixes: CONFLICT_RECIPE-CATEGORY_PULVERISING


-- Generic compatibility patch for pulverising
-- Fixes conflict between: quirkycat_base, quirkycat_machines
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["pulverising"] then
    local prototype = data.raw["recipe-category"]["pulverising"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.pulverising")
end


-- Patch: PATCH_JR-FOUNDRY-SMELTING_GENERIC
-- Description: Generic compatibility patch for recipe-category jr-foundry-smelting
-- Fixes: CONFLICT_RECIPE-CATEGORY_JR-FOUNDRY-SMELTING


-- Generic compatibility patch for jr-foundry-smelting
-- Fixes conflict between: quirkycat_base, quirkycat_machines
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["jr-foundry-smelting"] then
    local prototype = data.raw["recipe-category"]["jr-foundry-smelting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.jr-foundry-smelting")
end

