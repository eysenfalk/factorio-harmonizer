-- Auto-generated compatibility patch
-- Generated by Factorio Mod Harmonizer
-- Resolves 715 conflict(s)

-- Patch: PATCH_BURNER-INSERTER_ALL_VARIANTS
-- Description: Recipe expansion for burner-inserter - adds all mod variants as additional recipes
-- Fixes: MOD_RECIPE_CONFLICT_BURNER-INSERTER


-- Comprehensive recipe expansion for burner-inserter
-- Adds mod-specific recipe variants alongside original recipes
-- Affected mods: lignumis, base
-- Severity: CRITICAL

-- Create additional recipe variants for each mod


-- Lignumis variant of burner-inserter
if data.raw.recipe["burner-inserter"] then
    local lignumis_variant = table.deepcopy(data.raw.recipe["burner-inserter"])
    lignumis_variant.name = "burner-inserter-lignumis-variant"
    lignumis_variant.localised_name = {"", "burner-inserter", " (Lignumis Style)"}
    lignumis_variant.enabled = true
    lignumis_variant.order = (lignumis_variant.order or "a") .. "-lignumis-variant"
    lignumis_variant.hidden = false

    lignumis_variant.category = "wood-processing-or-assembling"
    
    data:extend({lignumis_variant})
end

-- Base Game variant of burner-inserter
if data.raw.recipe["burner-inserter"] then
    local base_variant = table.deepcopy(data.raw.recipe["burner-inserter"])
    base_variant.name = "burner-inserter-base-variant"
    base_variant.localised_name = {"", "burner-inserter", " (Base Game Style)"}
    base_variant.enabled = true
    base_variant.order = (base_variant.order or "a") .. "-base-variant"
    base_variant.hidden = false

    base_variant.ingredients = {{"iron-plate", 1}, {"iron-gear-wheel", 1}}
    base_variant.results = {{"burner-inserter", 1}}
    
    data:extend({base_variant})
end

-- Keep ALL original recipes active - no disabling!
-- Players can now choose between:
-- 1. Original burner-inserter (current winner of mod conflicts)
-- 2. burner-inserter-lignumis-variant (Lignumis style)
-- 2. burner-inserter-base-variant (Base Game style)


-- Patch: PATCH_ELECTRONIC-CIRCUIT_ALL_VARIANTS
-- Description: Recipe expansion for electronic-circuit - adds all mod variants as additional recipes
-- Fixes: CONFLICT_RECIPE_ELECTRONIC-CIRCUIT


-- Comprehensive recipe expansion for electronic-circuit
-- Adds mod-specific recipe variants alongside original recipes
-- Affected mods: aai-industry, base
-- Severity: HIGH

-- Create additional recipe variants for each mod


-- AAI Industry variant of electronic-circuit
if data.raw.recipe["electronic-circuit"] then
    local aai_industry_variant = table.deepcopy(data.raw.recipe["electronic-circuit"])
    aai_industry_variant.name = "electronic-circuit-aai_industry-variant"
    aai_industry_variant.localised_name = {"", "electronic-circuit", " (AAI Industry Style)"}
    aai_industry_variant.enabled = true
    aai_industry_variant.order = (aai_industry_variant.order or "a") .. "-aai_industry-variant"
    aai_industry_variant.hidden = false

    
    data:extend({aai_industry_variant})
end

-- Base Game variant of electronic-circuit
if data.raw.recipe["electronic-circuit"] then
    local base_variant = table.deepcopy(data.raw.recipe["electronic-circuit"])
    base_variant.name = "electronic-circuit-base-variant"
    base_variant.localised_name = {"", "electronic-circuit", " (Base Game Style)"}
    base_variant.enabled = true
    base_variant.order = (base_variant.order or "a") .. "-base-variant"
    base_variant.hidden = false

    base_variant.ingredients = {{"iron-plate", 1}, {"copper-cable", 3}}
    base_variant.results = {{"electronic-circuit", 1}}
    
    data:extend({base_variant})
end

-- Keep ALL original recipes active - no disabling!
-- Players can now choose between:
-- 1. Original electronic-circuit (current winner of mod conflicts)
-- 2. electronic-circuit-aai_industry-variant (AAI Industry style)
-- 2. electronic-circuit-base-variant (Base Game style)


-- Patch: PATCH_EXPRESS-TRANSPORT-BELT_ALL_VARIANTS
-- Description: Recipe expansion for express-transport-belt - adds all mod variants as additional recipes
-- Fixes: MISSING_DEPS_EXPRESS-TRANSPORT-BELT


-- Comprehensive recipe expansion for express-transport-belt
-- Adds mod-specific recipe variants alongside original recipes
-- Affected mods: base
-- Severity: HIGH

-- Create additional recipe variants for each mod


-- Base Game variant of express-transport-belt
if data.raw.recipe["express-transport-belt"] then
    local base_variant = table.deepcopy(data.raw.recipe["express-transport-belt"])
    base_variant.name = "express-transport-belt-base-variant"
    base_variant.localised_name = {"", "express-transport-belt", " (Base Game Style)"}
    base_variant.enabled = true
    base_variant.order = (base_variant.order or "a") .. "-base-variant"
    base_variant.hidden = false

    base_variant.ingredients = {{"fast-transport-belt", 1}, {"iron-gear-wheel", 10}, {"lubricant", 20}}
    base_variant.results = {{"express-transport-belt", 1}}
    
    data:extend({base_variant})
end

-- Keep ALL original recipes active - no disabling!
-- Players can now choose between:
-- 1. Original express-transport-belt (current winner of mod conflicts)
-- 2. express-transport-belt-base-variant (Base Game style)


-- Patch: PATCH_PROCESSING-UNIT_ALL_VARIANTS
-- Description: Recipe expansion for processing-unit - adds all mod variants as additional recipes
-- Fixes: MISSING_DEPS_PROCESSING-UNIT


-- Comprehensive recipe expansion for processing-unit
-- Adds mod-specific recipe variants alongside original recipes
-- Affected mods: base
-- Severity: HIGH

-- Create additional recipe variants for each mod


-- Base Game variant of processing-unit
if data.raw.recipe["processing-unit"] then
    local base_variant = table.deepcopy(data.raw.recipe["processing-unit"])
    base_variant.name = "processing-unit-base-variant"
    base_variant.localised_name = {"", "processing-unit", " (Base Game Style)"}
    base_variant.enabled = true
    base_variant.order = (base_variant.order or "a") .. "-base-variant"
    base_variant.hidden = false

    base_variant.ingredients = {{"electronic-circuit", 20}, {"advanced-circuit", 2}, {"sulfuric-acid", 5}}
    base_variant.results = {{"processing-unit", 1}}
    
    data:extend({base_variant})
end

-- Keep ALL original recipes active - no disabling!
-- Players can now choose between:
-- 1. Original processing-unit (current winner of mod conflicts)
-- 2. processing-unit-base-variant (Base Game style)


-- Patch: PATCH_ADVANCED-ELECTRONICS_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for advanced-electronics with 3 alternative research paths
-- Fixes: MISSING_DEPS_ADVANCED-ELECTRONICS


-- Comprehensive research compatibility patch for advanced-electronics
-- Fixes conflict between: base
-- Severity: HIGH

if data.raw.technology["advanced-electronics"] then
    local tech = data.raw.technology["advanced-electronics"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "advanced-electronics-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "advanced-electronics-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "advanced-electronics-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_ADVANCED-ELECTRONICS-2_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for advanced-electronics-2 with 3 alternative research paths
-- Fixes: MISSING_DEPS_ADVANCED-ELECTRONICS-2


-- Comprehensive research compatibility patch for advanced-electronics-2
-- Fixes conflict between: base
-- Severity: HIGH

if data.raw.technology["advanced-electronics-2"] then
    local tech = data.raw.technology["advanced-electronics-2"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "advanced-electronics-2-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "advanced-electronics-2-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "advanced-electronics-2-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_ROCKET-SILO_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for rocket-silo with 3 alternative research paths
-- Fixes: MISSING_DEPS_ROCKET-SILO


-- Comprehensive research compatibility patch for rocket-silo
-- Fixes conflict between: base, bobelectronics
-- Severity: HIGH

if data.raw.technology["rocket-silo"] then
    local tech = data.raw.technology["rocket-silo"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "rocket-silo-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "rocket-silo-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "rocket-silo-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_AUTOMATION_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for automation with 3 alternative research paths
-- Fixes: MOD_TECH_CONFLICT_AUTOMATION


-- Comprehensive research compatibility patch for automation
-- Fixes conflict between: lignumis, base
-- Severity: HIGH

if data.raw.technology["automation"] then
    local tech = data.raw.technology["automation"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "automation-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "automation-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "automation-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_FAST-INSERTER_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for fast-inserter with 3 alternative research paths
-- Fixes: MOD_TECH_CONFLICT_FAST-INSERTER


-- Comprehensive research compatibility patch for fast-inserter
-- Fixes conflict between: bobassembly, base
-- Severity: HIGH

if data.raw.technology["fast-inserter"] then
    local tech = data.raw.technology["fast-inserter"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "fast-inserter-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "fast-inserter-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "fast-inserter-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_ELECTRONICS_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for electronics with 3 alternative research paths
-- Fixes: MOD_TECH_CONFLICT_ELECTRONICS


-- Comprehensive research compatibility patch for electronics
-- Fixes conflict between: lignumis, Age-of-Production, base
-- Severity: HIGH

if data.raw.technology["electronics"] then
    local tech = data.raw.technology["electronics"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "electronics-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "electronics-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "electronics-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_TREE-SEEDING_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for tree-seeding with 3 alternative research paths
-- Fixes: MOD_TECH_CONFLICT_TREE-SEEDING


-- Comprehensive research compatibility patch for tree-seeding
-- Fixes conflict between: gleba-reborn, lignumis
-- Severity: HIGH

if data.raw.technology["tree-seeding"] then
    local tech = data.raw.technology["tree-seeding"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "tree-seeding-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "tree-seeding-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "tree-seeding-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_AUTOMATION-SCIENCE-PACK_RESEARCH_COMPREHENSIVE
-- Description: Comprehensive research compatibility patch for automation-science-pack with 3 alternative research paths
-- Fixes: MOD_TECH_CONFLICT_AUTOMATION-SCIENCE-PACK


-- Comprehensive research compatibility patch for automation-science-pack
-- Fixes conflict between: lignumis, Krastorio2
-- Severity: HIGH

if data.raw.technology["automation-science-pack"] then
    local tech = data.raw.technology["automation-science-pack"]
    local original_prerequisites = tech.prerequisites or {}
    local original_unit = tech.unit
    local original_effects = tech.effects or {}
    
    -- Store original technology for reference
    local base_prerequisites = original_prerequisites
    local base_unit = original_unit
    local base_effects = original_effects
    
    -- Fallback: Create universal alternative research paths
    -- Alternative 1: Basic research path
    data:extend({{
        type = "technology",
        name = "automation-science-pack-basic",
        icon = tech.icon or "__base__/graphics/technology/automation.png",
        icon_size = tech.icon_size or 256,
        prerequisites = {"automation"},
        unit = {
            count = 25,
            ingredients = {
                {"automation-science-pack", 1}
            },
            time = 10
        },
        effects = tech.effects or {}
    }})
    
    -- Alternative 2: Advanced research path
    if data.raw.technology["logistic-science-pack"] then
        data:extend({{
            type = "technology",
            name = "automation-science-pack-advanced",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"automation", "logistic-science-pack"},
            unit = {
                count = 100,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1}
                },
                time = 30
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Alternative 3: Space-age compatible path
    if data.raw.technology["space-science-pack"] then
        data:extend({{
            type = "technology",
            name = "automation-science-pack-space",
            icon = tech.icon or "__base__/graphics/technology/automation.png",
            icon_size = tech.icon_size or 256,
            prerequisites = {"space-science-pack"},
            unit = {
                count = 200,
                ingredients = {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"space-science-pack", 1}
                },
                time = 60
            },
            effects = tech.effects or {}
        }})
    end
    
    -- Ensure original technology remains accessible
    if not tech.prerequisites or #tech.prerequisites == 0 then
        tech.prerequisites = {"automation"}
    end
end


-- Patch: PATCH_IRON-PLATE_GENERIC
-- Description: Generic compatibility patch for item iron-plate
-- Fixes: CONFLICT_ITEM_IRON-PLATE


-- Generic compatibility patch for iron-plate
-- Fixes conflict between: bobpower, More_Ammo, aai-vehicles-hauler, castra, PlutoniumEnergy, Spaghetorio, base, Krastorio2, secretas, alien-module, bobplates, corrundum, Flare Stack, RampantArsenalFork, vtk-cannon-turret, boblogistics, tenebris-prime, Krastorio2-spaced-out, FluidMustFlow, early-agriculture, planet-muluna, quirkycat_boron, bobequipment, aai-vehicles-warden, crushing-industry, cubium, RenaiTransportation, terrapalus, tenebris, DoubleWagons, lex-aircraft, bobassembly, bobtech, rubia, Aircraft-space-age, bzcarbon, bobwarfare, bobgreenhouse, Electric Furnaces, Moshine, metal-and-stars, bzsilicon, equipment-gantry, bobmining, wood-military, aai-industry, StopgapNukes, dea-dia-system, aai-vehicles-chaingunner
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-plate"] then
    local item = data.raw.item["iron-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOOD_GENERIC
-- Description: Generic compatibility patch for item wood
-- Fixes: CONFLICT_ITEM_WOOD


-- Generic compatibility patch for wood
-- Fixes conflict between: base, Krastorio2, bobplates, corrundum, wood-industry, enemyracemanager, Krastorio2-spaced-out, planet-muluna, lignumis, astroponics, Wood-Walls, bobtech, lilys-cubeine, bobwarfare, biochemistry, bobgreenhouse, metal-and-stars, vulcanus-sulfuric-bacteria, wood-military, bobelectronics, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["wood"] then
    local item = data.raw.item["wood"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "wood-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "wood-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEEL-PLATE_GENERIC
-- Description: Generic compatibility patch for item steel-plate
-- Fixes: CONFLICT_ITEM_STEEL-PLATE


-- Generic compatibility patch for steel-plate
-- Fixes conflict between: Robocharger-Updated, bobenemies, quirkycat_machines, bobpower, More_Ammo, castra, ballistic_missile, PlutoniumEnergy, minimalist-rails, Spaghetorio, base, Cerys-Moon-of-Fulgora, Krastorio2, secretas, alien-module, aai-vehicles-ironclad, bobplates, corrundum, Flare Stack, aai-vehicles-laser-tank, bobrevamp, vtk-cannon-turret, boblogistics, alloy-smelting, tenebris-prime, aai-signal-transmission, Cold_biters, Krastorio2-spaced-out, FluidMustFlow, early-agriculture, slp-dyson-sphere-reworked, Warehousing, bobequipment, OmegaDrill, crushing-industry, cubium, RenaiTransportation, tenebris, grappling-gun, Fluid-level-indicator, shield-projector, HelicopterRevival, lex-aircraft, bobassembly, bobvehicleequipment, atan-nuclear-science, rubia, lilys-cubeine, Aircraft-space-age, bzcarbon, bobwarfare, Planet-Hopper, foundry-restructuring, metal-and-stars, snouz_better_substation, bzsilicon, aai-vehicles-flame-tumbler, bobmining, se-space-trains, aai-industry, aquilo-seabloom-algaculture, Hovercrafts, StopgapNukes, VoidProcessing, dea-dia-system, More_Repair_Packs, bobmodules, aai-vehicles-flame-tank
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steel-plate"] then
    local item = data.raw.item["steel-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steel-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steel-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-GEAR-WHEEL_GENERIC
-- Description: Generic compatibility patch for item iron-gear-wheel
-- Fixes: CONFLICT_ITEM_IRON-GEAR-WHEEL


-- Generic compatibility patch for iron-gear-wheel
-- Fixes conflict between: Robocharger-Updated, bobenemies, bobpower, aai-vehicles-hauler, castra, base, Krastorio2, secretas, alien-module, aai-vehicles-ironclad, bobplates, corrundum, Flare Stack, RampantArsenalFork, boblogistics, Krastorio2-spaced-out, FluidMustFlow, bobequipment, OmegaDrill, aai-vehicles-warden, crushing-industry, cubium, RenaiTransportation, grappling-gun, DoubleWagons, HelicopterRevival, bobassembly, bobtech, bobvehicleequipment, rubia, lilys-cubeine, bzcarbon, bobwarfare, foundry-restructuring, bzsilicon, bobmining, aai-industry, Hovercrafts, dea-dia-system, aai-vehicles-chaingunner, aai-vehicles-flame-tank
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-gear-wheel"] then
    local item = data.raw.item["iron-gear-wheel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-gear-wheel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-gear-wheel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COPPER-PLATE_GENERIC
-- Description: Generic compatibility patch for item copper-plate
-- Fixes: CONFLICT_ITEM_COPPER-PLATE


-- Generic compatibility patch for copper-plate
-- Fixes conflict between: Igrys, bobpower, More_Ammo, castra, Spaghetorio, PlutoniumEnergy, base, Cerys-Moon-of-Fulgora, Krastorio2, secretas, alien-module, bobplates, corrundum, RampantArsenalFork, boblogistics, aai-signal-transmission, Krastorio2-spaced-out, lignumis, bobequipment, crushing-industry, cubium, RenaiTransportation, bobassembly, bobvehicleequipment, rubia, lilys-cubeine, bobwarfare, bobgreenhouse, wood-military, bobelectronics, aai-industry, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["copper-plate"] then
    local item = data.raw.item["copper-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "copper-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "copper-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRONIC-CIRCUIT_GENERIC
-- Description: Generic compatibility patch for item electronic-circuit
-- Fixes: CONFLICT_ITEM_ELECTRONIC-CIRCUIT


-- Generic compatibility patch for electronic-circuit
-- Fixes conflict between: bobpower, castra, base, Cerys-Moon-of-Fulgora, Krastorio2, alien-module, bobplates, corrundum, Flare Stack, RampantArsenalFork, vtk-cannon-turret, boblogistics, tenebris-prime, Krastorio2-spaced-out, early-agriculture, lignumis, bobequipment, aai-vehicles-warden, crushing-industry, cubium, RenaiTransportation, terrapalus, tenebris, lex-aircraft, bobassembly, bobvehicleequipment, rubia, Aircraft-space-age, Planet-Hopper, bobwarfare, Electric Furnaces, janus, Moshine, metal-and-stars, Automatic_Train_Painter, bobmining, bobelectronics, wood-military, TimeTools, aquilo-seabloom-algaculture, dea-dia-system, More_Repair_Packs, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electronic-circuit"] then
    local item = data.raw.item["electronic-circuit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electronic-circuit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electronic-circuit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ADVANCED-CIRCUIT_GENERIC
-- Description: Generic compatibility patch for item advanced-circuit
-- Fixes: CONFLICT_ITEM_ADVANCED-CIRCUIT


-- Generic compatibility patch for advanced-circuit
-- Fixes conflict between: Robocharger-Updated, bobenemies, bobpower, castra, ballistic_missile, PlutoniumEnergy, base, Cerys-Moon-of-Fulgora, Krastorio2, secretas, bobplates, aai-vehicles-laser-tank, RampantArsenalFork, vtk-cannon-turret, boblogistics, alloy-smelting, tenebris-prime, Krastorio2-spaced-out, Warehousing, bobequipment, OmegaDrill, crushing-industry, cubium, RenaiTransportation, tenebris, lex-aircraft, bobassembly, bobtech, bobvehicleequipment, rubia, Aircraft-space-age, bobwarfare, janus, Moshine, metal-and-stars, aai-vehicles-flame-tumbler, PavementDriveAssistContinued, bobmining, bobelectronics, Hovercrafts, StopgapNukes, dea-dia-system, More_Repair_Packs, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["advanced-circuit"] then
    local item = data.raw.item["advanced-circuit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "advanced-circuit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "advanced-circuit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PROCESSING-UNIT_GENERIC
-- Description: Generic compatibility patch for item processing-unit
-- Fixes: CONFLICT_ITEM_PROCESSING-UNIT


-- Generic compatibility patch for processing-unit
-- Fixes conflict between: bobpower, fulgora-coralmium-agriculture, atomic-artillery-reborn, castra, ballistic_missile, PlutoniumEnergy, base, Cerys-Moon-of-Fulgora, Krastorio2, secretas, bobplates, corrundum, enemyracemanager, boblogistics, aai-signal-transmission, Krastorio2-spaced-out, slp-dyson-sphere-reworked, cerys-lunaponics, bobequipment, OmegaDrill, crushing-industry, cubium, RenaiTransportation, astroponics, shield-projector, HelicopterRevival, lex-aircraft, bobassembly, bobvehicleequipment, atan-nuclear-science, rubia, Aircraft-space-age, bobwarfare, RampantFixed, orbital-transfer, janus, Moshine, metal-and-stars, Kux-OrbitalIonCannon, bobmining, bobelectronics, se-space-trains, aai-industry, Hovercrafts, StopgapNukes, More_Repair_Packs, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["processing-unit"] then
    local item = data.raw.item["processing-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "processing-unit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "processing-unit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRIC-MINING-DRILL_GENERIC
-- Description: Generic compatibility patch for item electric-mining-drill
-- Fixes: CONFLICT_ITEM_ELECTRIC-MINING-DRILL


-- Generic compatibility patch for electric-mining-drill
-- Fixes conflict between: bobmining, Krastorio2-spaced-out, Krastorio2, aai-industry, OmegaDrill
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electric-mining-drill"] then
    local item = data.raw.item["electric-mining-drill"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electric-mining-drill-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electric-mining-drill-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRIC-ENGINE-UNIT_GENERIC
-- Description: Generic compatibility patch for item electric-engine-unit
-- Fixes: CONFLICT_ITEM_ELECTRIC-ENGINE-UNIT


-- Generic compatibility patch for electric-engine-unit
-- Fixes conflict between: castra, ballistic_missile, Krastorio2, secretas, bobplates, corrundum, boblogistics, aai-signal-transmission, Krastorio2-spaced-out, OmegaDrill, crushing-industry, cubium, RenaiTransportation, lex-aircraft, bobvehicleequipment, rubia, Aircraft-space-age, bobwarfare, RampantFixed, orbital-transfer, Kux-OrbitalIonCannon, aai-industry, Hovercrafts, dea-dia-system
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electric-engine-unit"] then
    local item = data.raw.item["electric-engine-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electric-engine-unit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electric-engine-unit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CONCRETE_GENERIC
-- Description: Generic compatibility patch for item concrete
-- Fixes: CONFLICT_ITEM_CONCRETE


-- Generic compatibility patch for concrete
-- Fixes conflict between: bobpower, fulgora-coralmium-agriculture, ballistic_missile, PlutoniumEnergy, Krastorio2, Cerys-Moon-of-Fulgora, secretas, corrundum, alloy-smelting, tenebris-prime, Krastorio2-spaced-out, Warehousing, snouz-big-accumulator, crushing-industry, cubium, RenaiTransportation, astroponics, tenebris, snouz-big-solar-panel, atan-nuclear-science, rubia, bobwarfare, Moshine, metal-and-stars, aai-industry, Moshine-assets
-- Severity: MEDIUM
-- Type: item


if data.raw.item["concrete"] then
    local item = data.raw.item["concrete"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "concrete-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "concrete-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRIC-FURNACE_GENERIC
-- Description: Generic compatibility patch for item electric-furnace
-- Fixes: CONFLICT_ITEM_ELECTRIC-FURNACE


-- Generic compatibility patch for electric-furnace
-- Fixes conflict between: Krastorio2-spaced-out, bobassembly, aai-industry, Krastorio2, lilys-cubeine, rubia, bobplates, Electric Furnaces, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electric-furnace"] then
    local item = data.raw.item["electric-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electric-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electric-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE-BRICK_GENERIC
-- Description: Generic compatibility patch for item stone-brick
-- Fixes: CONFLICT_ITEM_STONE-BRICK


-- Generic compatibility patch for stone-brick
-- Fixes conflict between: tenebris, boblogistics, alloy-smelting, tenebris-prime, castra, bobassembly, aai-industry, Cerys-Moon-of-Fulgora, lignumis, planet-muluna, bobwarfare, Warehousing, bobplates, dea-dia-system, crushing-industry, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone-brick"] then
    local item = data.raw.item["stone-brick"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-brick-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-brick-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE-WALL_GENERIC
-- Description: Generic compatibility patch for item stone-wall
-- Fixes: CONFLICT_ITEM_STONE-WALL


-- Generic compatibility patch for stone-wall
-- Fixes conflict between: cubium, aai-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone-wall"] then
    local item = data.raw.item["stone-wall"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-wall-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-wall-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE-TABLET_GENERIC
-- Description: Generic compatibility patch for item stone-tablet
-- Fixes: CONFLICT_ITEM_STONE-TABLET


-- Generic compatibility patch for stone-tablet
-- Fixes conflict between: Spaghetorio, aai-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone-tablet"] then
    local item = data.raw.item["stone-tablet"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-tablet-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-tablet-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ELECTRIC-MOTOR_GENERIC
-- Description: Generic compatibility patch for item electric-motor
-- Fixes: CONFLICT_ITEM_ELECTRIC-MOTOR


-- Generic compatibility patch for electric-motor
-- Fixes conflict between: early-agriculture, aai-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["electric-motor"] then
    local item = data.raw.item["electric-motor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "electric-motor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "electric-motor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BURNER-ASSEMBLING-MACHINE_GENERIC
-- Description: Generic compatibility patch for item burner-assembling-machine
-- Fixes: CONFLICT_ITEM_BURNER-ASSEMBLING-MACHINE


-- Generic compatibility patch for burner-assembling-machine
-- Fixes conflict between: lignumis, aai-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["burner-assembling-machine"] then
    local item = data.raw.item["burner-assembling-machine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "burner-assembling-machine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "burner-assembling-machine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SAND_GENERIC
-- Description: Generic compatibility patch for item sand
-- Fixes: CONFLICT_ITEM_SAND


-- Generic compatibility patch for sand
-- Fixes conflict between: wood-industry, quirkycat_glass, Moshine-assets, aai-industry, quirkycat_base, crushing-industry, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["sand"] then
    local item = data.raw.item["sand"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "sand-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "sand-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE_GENERIC
-- Description: Generic compatibility patch for item stone
-- Fixes: CONFLICT_ITEM_STONE


-- Generic compatibility patch for stone
-- Fixes conflict between: fulgora-coralmium-agriculture, Krastorio2, secretas, alien-module, bobplates, corrundum, bobrevamp, wood-industry, boblogistics, Krastorio2-spaced-out, bztitanium, bzzirconium, crushing-industry, cubium, bobtech, bztin, rubia, bzcarbon, bzlead, bobgreenhouse, metal-and-stars, vulcanus-sulfuric-bacteria, bzsilicon, quirkycat_glass, aai-industry, Moshine-assets, quirkycat_recycle
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone"] then
    local item = data.raw.item["stone"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GLASS_GENERIC
-- Description: Generic compatibility patch for item glass
-- Fixes: CONFLICT_ITEM_GLASS


-- Generic compatibility patch for glass
-- Fixes conflict between: early-agriculture, quirkycat_glass, aai-industry, quirkycat_base, crushing-industry, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["glass"] then
    local item = data.raw.item["glass"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "glass-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "glass-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COPPER-CABLE_GENERIC
-- Description: Generic compatibility patch for item copper-cable
-- Fixes: CONFLICT_ITEM_COPPER-CABLE


-- Generic compatibility patch for copper-cable
-- Fixes conflict between: bobpower, castra, Spaghetorio, Krastorio2, Cerys-Moon-of-Fulgora, secretas, corrundum, boblogistics, Krastorio2-spaced-out, lignumis, bobequipment, snouz-big-accumulator, RenaiTransportation, terrapalus, bobvehicleequipment, rubia, bobwarfare, se-space-trains, bobelectronics, aai-industry, TimeTools, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["copper-cable"] then
    local item = data.raw.item["copper-cable"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "copper-cable-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "copper-cable-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-STICK_GENERIC
-- Description: Generic compatibility patch for item iron-stick
-- Fixes: CONFLICT_ITEM_IRON-STICK


-- Generic compatibility patch for iron-stick
-- Fixes conflict between: grappling-gun, boblogistics, wood-military, HelicopterRevival, Krastorio2-spaced-out, minimalist-rails, aai-industry, Krastorio2, rubia, corrundum, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-stick"] then
    local item = data.raw.item["iron-stick"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-stick-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-stick-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STONE-FURNACE_GENERIC
-- Description: Generic compatibility patch for item stone-furnace
-- Fixes: CONFLICT_ITEM_STONE-FURNACE


-- Generic compatibility patch for stone-furnace
-- Fixes conflict between: alloy-smelting, bobpower, bobtech, aai-industry, bobplates, Flare Stack, Electric Furnaces
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stone-furnace"] then
    local item = data.raw.item["stone-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stone-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stone-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BATTERY_GENERIC
-- Description: Generic compatibility patch for item battery
-- Fixes: CONFLICT_ITEM_BATTERY


-- Generic compatibility patch for battery
-- Fixes conflict between: Robocharger-Updated, bobpower, castra, Krastorio2, secretas, alien-module, aai-vehicles-laser-tank, boblogistics, aai-signal-transmission, Cold_biters, Krastorio2-spaced-out, bobequipment, shield-projector, HelicopterRevival, bobvehicleequipment, rubia, Aircraft-space-age, bobwarfare, biochemistry, janus, metal-and-stars, Kux-OrbitalIonCannon, se-space-trains
-- Severity: MEDIUM
-- Type: item


if data.raw.item["battery"] then
    local item = data.raw.item["battery"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "battery-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "battery-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GUN-TURRET_GENERIC
-- Description: Generic compatibility patch for item gun-turret
-- Fixes: CONFLICT_ITEM_GUN-TURRET


-- Generic compatibility patch for gun-turret
-- Fixes conflict between: vtk-cannon-turret, HelicopterRevival, Krastorio2-spaced-out, Krastorio2, rubia, secretas, bobwarfare, Hovercrafts, aai-vehicles-chaingunner, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gun-turret"] then
    local item = data.raw.item["gun-turret"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gun-turret-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gun-turret-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ENGINE-UNIT_GENERIC
-- Description: Generic compatibility patch for item engine-unit
-- Fixes: CONFLICT_ITEM_ENGINE-UNIT


-- Generic compatibility patch for engine-unit
-- Fixes conflict between: aai-vehicles-flame-tumbler, castra, FluidMustFlow, HelicopterRevival, Krastorio2-spaced-out, Krastorio2, Cerys-Moon-of-Fulgora, RenaiTransportation, rubia, bobwarfare, aai-vehicles-ironclad, Hovercrafts, crushing-industry, foundry-restructuring, cubium, aai-vehicles-flame-tank
-- Severity: MEDIUM
-- Type: item


if data.raw.item["engine-unit"] then
    local item = data.raw.item["engine-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "engine-unit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "engine-unit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLAMETHROWER_GENERIC
-- Description: Generic compatibility patch for item flamethrower
-- Fixes: CONFLICT_ITEM_FLAMETHROWER


-- Generic compatibility patch for flamethrower
-- Fixes conflict between: metal-and-stars, aai-vehicles-flame-tank
-- Severity: MEDIUM
-- Type: item


if data.raw.item["flamethrower"] then
    local item = data.raw.item["flamethrower"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "flamethrower-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "flamethrower-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-CHEST_GENERIC
-- Description: Generic compatibility patch for item iron-chest
-- Fixes: CONFLICT_ITEM_IRON-CHEST


-- Generic compatibility patch for iron-chest
-- Fixes conflict between: equipment-gantry, aai-vehicles-hauler, Warehousing, aai-vehicles-warden, metal-and-stars, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-chest"] then
    local item = data.raw.item["iron-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-chest-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-chest-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GRENADE_GENERIC
-- Description: Generic compatibility patch for item grenade
-- Fixes: CONFLICT_ITEM_GRENADE


-- Generic compatibility patch for grenade
-- Fixes conflict between: Cold_biters, castra, aai-vehicles-ironclad, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["grenade"] then
    local item = data.raw.item["grenade"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "grenade-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "grenade-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVES_GENERIC
-- Description: Generic compatibility patch for item explosives
-- Fixes: CONFLICT_ITEM_EXPLOSIVES


-- Generic compatibility patch for explosives
-- Fixes conflict between: vtk-cannon-turret, castra, Krastorio2-spaced-out, PlutoniumEnergy, Krastorio2, Aircraft-space-age, bobwarfare, aai-vehicles-ironclad, StopgapNukes, corrundum, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosives"] then
    local item = data.raw.item["explosives"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosives-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosives-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TANK_GENERIC
-- Description: Generic compatibility patch for item tank
-- Fixes: CONFLICT_ITEM_TANK


-- Generic compatibility patch for tank
-- Fixes conflict between: Krastorio2-spaced-out, castra, lex-aircraft, Krastorio2, bobwarfare, aai-vehicles-laser-tank
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tank"] then
    local item = data.raw.item["tank"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tank-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tank-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LASER-TURRET_GENERIC
-- Description: Generic compatibility patch for item laser-turret
-- Fixes: CONFLICT_ITEM_LASER-TURRET


-- Generic compatibility patch for laser-turret
-- Fixes conflict between: Kux-OrbitalIonCannon, secretas, bobwarfare, Hovercrafts, aai-vehicles-laser-tank, terrapalus
-- Severity: MEDIUM
-- Type: item


if data.raw.item["laser-turret"] then
    local item = data.raw.item["laser-turret"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "laser-turret-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "laser-turret-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SOLID-FUEL_GENERIC
-- Description: Generic compatibility patch for item solid-fuel
-- Fixes: CONFLICT_ITEM_SOLID-FUEL


-- Generic compatibility patch for solid-fuel
-- Fixes conflict between: bobrevamp, wood-industry, Krastorio2-spaced-out, Krastorio2, Cerys-Moon-of-Fulgora, Aircraft-space-age, planet-muluna, bobwarfare, secretas, bobplates, corrundum, aai-vehicles-laser-tank, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["solid-fuel"] then
    local item = data.raw.item["solid-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "solid-fuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "solid-fuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RADAR_GENERIC
-- Description: Generic compatibility patch for item radar
-- Fixes: CONFLICT_ITEM_RADAR


-- Generic compatibility patch for radar
-- Fixes conflict between: bobenemies, Kux-OrbitalIonCannon, atomic-artillery-reborn, castra, Krastorio2-spaced-out, PlutoniumEnergy, slp-dyson-sphere-reworked, Krastorio2, bobwarfare, RampantFixed, aai-vehicles-warden, RampantArsenalFork
-- Severity: MEDIUM
-- Type: item


if data.raw.item["radar"] then
    local item = data.raw.item["radar"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "radar-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "radar-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COAL_GENERIC
-- Description: Generic compatibility patch for item coal
-- Fixes: CONFLICT_ITEM_COAL


-- Generic compatibility patch for coal
-- Fixes conflict between: quirkycat_machines, Krastorio2, alien-module, bobplates, alloy-smelting, Krastorio2-spaced-out, aai-vehicles-warden, crushing-industry, cubium, RenaiTransportation, grappling-gun, bzcarbon, bobwarfare, Moshine, metal-and-stars, vulcanus-sulfuric-bacteria, bobelectronics, Moshine-assets, quirkycat_recycle
-- Severity: MEDIUM
-- Type: item


if data.raw.item["coal"] then
    local item = data.raw.item["coal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "coal-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "coal-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUBMACHINE-GUN_GENERIC
-- Description: Generic compatibility patch for item submachine-gun
-- Fixes: CONFLICT_ITEM_SUBMACHINE-GUN


-- Generic compatibility patch for submachine-gun
-- Fixes conflict between: Aircraft-space-age, Krastorio2-spaced-out, lex-aircraft, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["submachine-gun"] then
    local item = data.raw.item["submachine-gun"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "submachine-gun-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "submachine-gun-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET-LAUNCHER_GENERIC
-- Description: Generic compatibility patch for item rocket-launcher
-- Fixes: CONFLICT_ITEM_ROCKET-LAUNCHER


-- Generic compatibility patch for rocket-launcher
-- Fixes conflict between: HelicopterRevival, Krastorio2-spaced-out, lex-aircraft, Krastorio2, Aircraft-space-age, bobwarfare, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket-launcher"] then
    local item = data.raw.item["rocket-launcher"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-launcher-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-launcher-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LOW-DENSITY-STRUCTURE_GENERIC
-- Description: Generic compatibility patch for item low-density-structure
-- Fixes: CONFLICT_ITEM_LOW-DENSITY-STRUCTURE


-- Generic compatibility patch for low-density-structure
-- Fixes conflict between: fulgora-coralmium-agriculture, castra, PlutoniumEnergy, Krastorio2, Cerys-Moon-of-Fulgora, secretas, Krastorio2-spaced-out, lignumis, bobequipment, cubium, astroponics, shield-projector, lex-aircraft, bobvehicleequipment, rubia, lilys-cubeine, Aircraft-space-age, bobwarfare, RampantFixed, orbital-transfer, janus, metal-and-stars, Kux-OrbitalIonCannon, Hovercrafts, StopgapNukes, More_Repair_Packs
-- Severity: MEDIUM
-- Type: item


if data.raw.item["low-density-structure"] then
    local item = data.raw.item["low-density-structure"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "low-density-structure-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "low-density-structure-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVE-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item explosive-cannon-shell
-- Fixes: CONFLICT_ITEM_EXPLOSIVE-CANNON-SHELL


-- Generic compatibility patch for explosive-cannon-shell
-- Fixes conflict between: Aircraft-space-age, PlutoniumEnergy, StopgapNukes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosive-cannon-shell"] then
    local item = data.raw.item["explosive-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosive-cannon-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosive-cannon-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLAMETHROWER-AMMO_GENERIC
-- Description: Generic compatibility patch for item flamethrower-ammo
-- Fixes: CONFLICT_ITEM_FLAMETHROWER-AMMO


-- Generic compatibility patch for flamethrower-ammo
-- Fixes conflict between: Aircraft-space-age, StopgapNukes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["flamethrower-ammo"] then
    local item = data.raw.item["flamethrower-ammo"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "flamethrower-ammo-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "flamethrower-ammo-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ENERGY-SHIELD-MK2-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item energy-shield-mk2-equipment
-- Fixes: CONFLICT_ITEM_ENERGY-SHIELD-MK2-EQUIPMENT


-- Generic compatibility patch for energy-shield-mk2-equipment
-- Fixes conflict between: castra, Krastorio2-spaced-out, Krastorio2, Aircraft-space-age, bobequipment, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["energy-shield-mk2-equipment"] then
    local item = data.raw.item["energy-shield-mk2-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "energy-shield-mk2-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "energy-shield-mk2-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-ORE_GENERIC
-- Description: Generic compatibility patch for item iron-ore
-- Fixes: CONFLICT_ITEM_IRON-ORE


-- Generic compatibility patch for iron-ore
-- Fixes conflict between: quirkycat_machines, tenebris, tenebris-prime, bobelectronics, castra, Krastorio2-spaced-out, Spaghetorio, Krastorio2, Cerys-Moon-of-Fulgora, Moshine-assets, alien-module, bzlead, quirkycat_recycle, bobplates, corrundum, crushing-industry, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-ore"] then
    local item = data.raw.item["iron-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COPPER-ORE_GENERIC
-- Description: Generic compatibility patch for item copper-ore
-- Fixes: CONFLICT_ITEM_COPPER-ORE


-- Generic compatibility patch for copper-ore
-- Fixes conflict between: Krastorio2-spaced-out, Spaghetorio, Krastorio2, Moshine-assets, alien-module, bzlead, quirkycat_recycle, bobplates, corrundum, crushing-industry, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["copper-ore"] then
    local item = data.raw.item["copper-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "copper-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "copper-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-ORE_GENERIC
-- Description: Generic compatibility patch for item uranium-ore
-- Fixes: CONFLICT_ITEM_URANIUM-ORE


-- Generic compatibility patch for uranium-ore
-- Fixes conflict between: alien-module, quirkycat_recycle
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-ore"] then
    local item = data.raw.item["uranium-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_COKE_GENERIC
-- Description: Generic compatibility patch for item coke
-- Fixes: CONFLICT_ITEM_COKE


-- Generic compatibility patch for coke
-- Fixes conflict between: wood-industry, alloy-smelting, rubia
-- Severity: MEDIUM
-- Type: item


if data.raw.item["coke"] then
    local item = data.raw.item["coke"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "coke-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "coke-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CRUSHED-COAL_GENERIC
-- Description: Generic compatibility patch for item crushed-coal
-- Fixes: CONFLICT_ITEM_CRUSHED-COAL


-- Generic compatibility patch for crushed-coal
-- Fixes conflict between: crushing-industry, alloy-smelting
-- Severity: MEDIUM
-- Type: item


if data.raw.item["crushed-coal"] then
    local item = data.raw.item["crushed-coal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "crushed-coal-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "crushed-coal-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CARBON_GENERIC
-- Description: Generic compatibility patch for item carbon
-- Fixes: CONFLICT_ITEM_CARBON


-- Generic compatibility patch for carbon
-- Fixes conflict between: astroponics, vulcanus-sulfuric-bacteria, wood-industry, alloy-smelting, Moshine, castra, Krastorio2-spaced-out, Spaghetorio, Moshine-assets, Cerys-Moon-of-Fulgora, bzcarbon, RampantFixed, corrundum, crushing-industry, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["carbon"] then
    local item = data.raw.item["carbon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "carbon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "carbon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPOILAGE_GENERIC
-- Description: Generic compatibility patch for item spoilage
-- Fixes: CONFLICT_ITEM_SPOILAGE


-- Generic compatibility patch for spoilage
-- Fixes conflict between: fulgora-coralmium-agriculture, planet-muluna, bztitanium, rubia, secretas, biochemistry, aquilo-seabloom-algaculture, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["spoilage"] then
    local item = data.raw.item["spoilage"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "spoilage-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "spoilage-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LANDFILL_GENERIC
-- Description: Generic compatibility patch for item landfill
-- Fixes: CONFLICT_ITEM_LANDFILL


-- Generic compatibility patch for landfill
-- Fixes conflict between: astroponics, Krastorio2-spaced-out, aquilo-seabloom-algaculture, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["landfill"] then
    local item = data.raw.item["landfill"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "landfill-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "landfill-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TUNGSTEN-PLATE_GENERIC
-- Description: Generic compatibility patch for item tungsten-plate
-- Fixes: CONFLICT_ITEM_TUNGSTEN-PLATE


-- Generic compatibility patch for tungsten-plate
-- Fixes conflict between: Fluid-level-indicator, Krastorio2-spaced-out, slp-dyson-sphere-reworked, promethium-quality, secretas, lilys-cubeine, RenaiTransportation, aquilo-seabloom-algaculture, VoidProcessing, StopgapNukes, corrundum, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tungsten-plate"] then
    local item = data.raw.item["tungsten-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tungsten-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tungsten-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUPERCONDUCTOR_GENERIC
-- Description: Generic compatibility patch for item superconductor
-- Fixes: CONFLICT_ITEM_SUPERCONDUCTOR


-- Generic compatibility patch for superconductor
-- Fixes conflict between: Krastorio2-spaced-out, slp-dyson-sphere-reworked, promethium-quality, secretas, Cerys-Moon-of-Fulgora, RenaiTransportation, RampantFixed, aquilo-seabloom-algaculture, VoidProcessing, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["superconductor"] then
    local item = data.raw.item["superconductor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "superconductor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "superconductor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PENTAPOD-EGG_GENERIC
-- Description: Generic compatibility patch for item pentapod-egg
-- Fixes: CONFLICT_ITEM_PENTAPOD-EGG


-- Generic compatibility patch for pentapod-egg
-- Fixes conflict between: Krastorio2-spaced-out, secretas, aquilo-seabloom-algaculture, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["pentapod-egg"] then
    local item = data.raw.item["pentapod-egg"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "pentapod-egg-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "pentapod-egg-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NUTRIENTS_GENERIC
-- Description: Generic compatibility patch for item nutrients
-- Fixes: CONFLICT_ITEM_NUTRIENTS


-- Generic compatibility patch for nutrients
-- Fixes conflict between: lignumis, rubia, secretas, biochemistry, aquilo-seabloom-algaculture, VoidProcessing, corrundum, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["nutrients"] then
    local item = data.raw.item["nutrients"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "nutrients-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "nutrients-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RESIN_GENERIC
-- Description: Generic compatibility patch for item resin
-- Fixes: CONFLICT_ITEM_RESIN


-- Generic compatibility patch for resin
-- Fixes conflict between: vulcanus-sulfuric-bacteria, wood-industry, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["resin"] then
    local item = data.raw.item["resin"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "resin-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "resin-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOODCHIPS_GENERIC
-- Description: Generic compatibility patch for item woodchips
-- Fixes: CONFLICT_ITEM_WOODCHIPS


-- Generic compatibility patch for woodchips
-- Fixes conflict between: wood-industry, aquilo-seabloom-algaculture
-- Severity: MEDIUM
-- Type: item


if data.raw.item["woodchips"] then
    local item = data.raw.item["woodchips"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "woodchips-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "woodchips-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOFLUX_GENERIC
-- Description: Generic compatibility patch for item bioflux
-- Fixes: CONFLICT_ITEM_BIOFLUX


-- Generic compatibility patch for bioflux
-- Fixes conflict between: astroponics, secretas, VoidProcessing, corrundum, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bioflux"] then
    local item = data.raw.item["bioflux"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bioflux-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bioflux-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PIPE_GENERIC
-- Description: Generic compatibility patch for item pipe
-- Fixes: CONFLICT_ITEM_PIPE


-- Generic compatibility patch for pipe
-- Fixes conflict between: bobpower, castra, ballistic_missile, Krastorio2, secretas, bobplates, Flare Stack, Flow Control, boblogistics, Krastorio2-spaced-out, FluidMustFlow, planet-muluna, RenaiTransportation, astroponics, grappling-gun, Fluid-level-indicator, bobassembly, rubia, lilys-cubeine, Planet-Hopper, bobwarfare, foundry-restructuring, metal-and-stars, bobmining, dea-dia-system
-- Severity: MEDIUM
-- Type: item


if data.raw.item["pipe"] then
    local item = data.raw.item["pipe"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "pipe-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "pipe-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TREE-SEED_GENERIC
-- Description: Generic compatibility patch for item tree-seed
-- Fixes: CONFLICT_ITEM_TREE-SEED


-- Generic compatibility patch for tree-seed
-- Fixes conflict between: astroponics, planet-muluna
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tree-seed"] then
    local item = data.raw.item["tree-seed"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tree-seed-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tree-seed-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CALCITE_GENERIC
-- Description: Generic compatibility patch for item calcite
-- Fixes: CONFLICT_ITEM_CALCITE


-- Generic compatibility patch for calcite
-- Fixes conflict between: astroponics, vulcanus-sulfuric-bacteria, bzsilicon, Krastorio2-spaced-out, Spaghetorio, bztin, lignumis, lilys-cubeine, Moshine-assets, bzlead, corrundum, bzzirconium, crushing-industry, common-prototypes, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["calcite"] then
    local item = data.raw.item["calcite"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "calcite-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "calcite-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_YUMAKO-SEED_GENERIC
-- Description: Generic compatibility patch for item yumako-seed
-- Fixes: CONFLICT_ITEM_YUMAKO-SEED


-- Generic compatibility patch for yumako-seed
-- Fixes conflict between: astroponics, Krastorio2-spaced-out, planet-muluna
-- Severity: MEDIUM
-- Type: item


if data.raw.item["yumako-seed"] then
    local item = data.raw.item["yumako-seed"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "yumako-seed-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "yumako-seed-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_YUMAKO_GENERIC
-- Description: Generic compatibility patch for item yumako
-- Fixes: CONFLICT_ITEM_YUMAKO


-- Generic compatibility patch for yumako
-- Fixes conflict between: astroponics, Krastorio2-spaced-out, planet-muluna
-- Severity: MEDIUM
-- Type: item


if data.raw.item["yumako"] then
    local item = data.raw.item["yumako"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "yumako-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "yumako-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JELLYNUT-SEED_GENERIC
-- Description: Generic compatibility patch for item jellynut-seed
-- Fixes: CONFLICT_ITEM_JELLYNUT-SEED


-- Generic compatibility patch for jellynut-seed
-- Fixes conflict between: astroponics, Krastorio2-spaced-out, bztitanium, planet-muluna
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jellynut-seed"] then
    local item = data.raw.item["jellynut-seed"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jellynut-seed-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jellynut-seed-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JELLYNUT_GENERIC
-- Description: Generic compatibility patch for item jellynut
-- Fixes: CONFLICT_ITEM_JELLYNUT


-- Generic compatibility patch for jellynut
-- Fixes conflict between: astroponics, Krastorio2-spaced-out, bztitanium, planet-muluna
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jellynut"] then
    local item = data.raw.item["jellynut"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jellynut-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jellynut-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-235_GENERIC
-- Description: Generic compatibility patch for item uranium-235
-- Fixes: CONFLICT_ITEM_URANIUM-235


-- Generic compatibility patch for uranium-235
-- Fixes conflict between: Krastorio2-spaced-out, StopgapNukes, atan-nuclear-science, Krastorio2, Cerys-Moon-of-Fulgora, lilys-cubeine, bobwarfare, RampantFixed, bobplates, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-235"] then
    local item = data.raw.item["uranium-235"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-235-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-235-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WATER-BARREL_GENERIC
-- Description: Generic compatibility patch for item water-barrel
-- Fixes: CONFLICT_ITEM_WATER-BARREL


-- Generic compatibility patch for water-barrel
-- Fixes conflict between: enemyracemanager, atan-nuclear-science
-- Severity: MEDIUM
-- Type: item


if data.raw.item["water-barrel"] then
    local item = data.raw.item["water-barrel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "water-barrel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "water-barrel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BARREL_GENERIC
-- Description: Generic compatibility patch for item barrel
-- Fixes: CONFLICT_ITEM_BARREL


-- Generic compatibility patch for barrel
-- Fixes conflict between: PlutoniumEnergy, atan-nuclear-science, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["barrel"] then
    local item = data.raw.item["barrel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "barrel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "barrel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CENTRIFUGE_GENERIC
-- Description: Generic compatibility patch for item centrifuge
-- Fixes: CONFLICT_ITEM_CENTRIFUGE


-- Generic compatibility patch for centrifuge
-- Fixes conflict between: bobassembly, atan-nuclear-science
-- Severity: MEDIUM
-- Type: item


if data.raw.item["centrifuge"] then
    local item = data.raw.item["centrifuge"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "centrifuge-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "centrifuge-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_REFINED-CONCRETE_GENERIC
-- Description: Generic compatibility patch for item refined-concrete
-- Fixes: CONFLICT_ITEM_REFINED-CONCRETE


-- Generic compatibility patch for refined-concrete
-- Fixes conflict between: HelicopterRevival, Krastorio2-spaced-out, bobassembly, minimalist-rails, atan-nuclear-science, Krastorio2, Cerys-Moon-of-Fulgora, rubia, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["refined-concrete"] then
    local item = data.raw.item["refined-concrete"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "refined-concrete-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "refined-concrete-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-239_GENERIC
-- Description: Generic compatibility patch for item plutonium-239
-- Fixes: CONFLICT_ITEM_PLUTONIUM-239


-- Generic compatibility patch for plutonium-239
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy, atan-nuclear-science
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-239"] then
    local item = data.raw.item["plutonium-239"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-239-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-239-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ATOMIC-BOMB_GENERIC
-- Description: Generic compatibility patch for item atomic-bomb
-- Fixes: CONFLICT_ITEM_ATOMIC-BOMB


-- Generic compatibility patch for atomic-bomb
-- Fixes conflict between: Cerys-Moon-of-Fulgora, atomic-artillery-reborn
-- Severity: MEDIUM
-- Type: item


if data.raw.item["atomic-bomb"] then
    local item = data.raw.item["atomic-bomb"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "atomic-bomb-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "atomic-bomb-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVE-URANIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item explosive-uranium-cannon-shell
-- Fixes: CONFLICT_ITEM_EXPLOSIVE-URANIUM-CANNON-SHELL


-- Generic compatibility patch for explosive-uranium-cannon-shell
-- Fixes conflict between: Cerys-Moon-of-Fulgora, atomic-artillery-reborn
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosive-uranium-cannon-shell"] then
    local item = data.raw.item["explosive-uranium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosive-uranium-cannon-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosive-uranium-cannon-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STORAGE-TANK_GENERIC
-- Description: Generic compatibility patch for item storage-tank
-- Fixes: CONFLICT_ITEM_STORAGE-TANK


-- Generic compatibility patch for storage-tank
-- Fixes conflict between: secretas, ballistic_missile, boblogistics, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["storage-tank"] then
    local item = data.raw.item["storage-tank"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "storage-tank-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "storage-tank-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET-PART_GENERIC
-- Description: Generic compatibility patch for item rocket-part
-- Fixes: CONFLICT_ITEM_ROCKET-PART


-- Generic compatibility patch for rocket-part
-- Fixes conflict between: Planet-Hopper, ballistic_missile, rubia, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket-part"] then
    local item = data.raw.item["rocket-part"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-part-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-part-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RAW-FISH_GENERIC
-- Description: Generic compatibility patch for item raw-fish
-- Fixes: CONFLICT_ITEM_RAW-FISH


-- Generic compatibility patch for raw-fish
-- Fixes conflict between: enemyracemanager, biochemistry, corrundum, metal-and-stars, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["raw-fish"] then
    local item = data.raw.item["raw-fish"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "raw-fish-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "raw-fish-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLASTIC-BAR_GENERIC
-- Description: Generic compatibility patch for item plastic-bar
-- Fixes: CONFLICT_ITEM_PLASTIC-BAR


-- Generic compatibility patch for plastic-bar
-- Fixes conflict between: fulgora-coralmium-agriculture, More_Ammo, castra, Krastorio2, secretas, bobplates, corrundum, bobrevamp, vtk-cannon-turret, boblogistics, tenebris-prime, Cold_biters, Krastorio2-spaced-out, lignumis, bobequipment, cubium, tenebris, Fluid-level-indicator, HelicopterRevival, bobassembly, bobvehicleequipment, lilys-cubeine, bobwarfare, biochemistry, metal-and-stars, Kux-OrbitalIonCannon, bobelectronics, quirkycat_glass, StopgapNukes, More_Repair_Packs, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plastic-bar"] then
    local item = data.raw.item["plastic-bar"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plastic-bar-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plastic-bar-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TUNGSTEN-ORE_GENERIC
-- Description: Generic compatibility patch for item tungsten-ore
-- Fixes: CONFLICT_ITEM_TUNGSTEN-ORE


-- Generic compatibility patch for tungsten-ore
-- Fixes conflict between: vulcanus-sulfuric-bacteria, Spaghetorio, quirkycat_recycle, biochemistry, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tungsten-ore"] then
    local item = data.raw.item["tungsten-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tungsten-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tungsten-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ASSEMBLING-MACHINE-3_GENERIC
-- Description: Generic compatibility patch for item assembling-machine-3
-- Fixes: CONFLICT_ITEM_ASSEMBLING-MACHINE-3


-- Generic compatibility patch for assembling-machine-3
-- Fixes conflict between: Krastorio2-spaced-out, bobassembly, Moshine, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["assembling-machine-3"] then
    local item = data.raw.item["assembling-machine-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "assembling-machine-3-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "assembling-machine-3-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ELECTRIC-CHEMICAL-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-electric-chemical-furnace
-- Fixes: CONFLICT_ITEM_BOB-ELECTRIC-CHEMICAL-FURNACE


-- Generic compatibility patch for bob-electric-chemical-furnace
-- Fixes conflict between: bobassembly, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-electric-chemical-furnace"] then
    local item = data.raw.item["bob-electric-chemical-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-electric-chemical-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-electric-chemical-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CHEMICAL-PLANT_GENERIC
-- Description: Generic compatibility patch for item chemical-plant
-- Fixes: CONFLICT_ITEM_CHEMICAL-PLANT


-- Generic compatibility patch for chemical-plant
-- Fixes conflict between: corrundum, bobassembly, rubia
-- Severity: MEDIUM
-- Type: item


if data.raw.item["chemical-plant"] then
    local item = data.raw.item["chemical-plant"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "chemical-plant-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "chemical-plant-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-DISTILLERY_GENERIC
-- Description: Generic compatibility patch for item bob-distillery
-- Fixes: CONFLICT_ITEM_BOB-DISTILLERY


-- Generic compatibility patch for bob-distillery
-- Fixes conflict between: bobassembly, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-distillery"] then
    local item = data.raw.item["bob-distillery"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-distillery-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-distillery-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ELECTROLYSER_GENERIC
-- Description: Generic compatibility patch for item bob-electrolyser
-- Fixes: CONFLICT_ITEM_BOB-ELECTROLYSER


-- Generic compatibility patch for bob-electrolyser
-- Fixes conflict between: bobassembly, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-electrolyser"] then
    local item = data.raw.item["bob-electrolyser"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-electrolyser-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-electrolyser-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-FLUID-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-fluid-furnace
-- Fixes: CONFLICT_ITEM_BOB-FLUID-FURNACE


-- Generic compatibility patch for bob-fluid-furnace
-- Fixes conflict between: bobassembly, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-fluid-furnace"] then
    local item = data.raw.item["bob-fluid-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-fluid-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-fluid-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEEL-FURNACE_GENERIC
-- Description: Generic compatibility patch for item steel-furnace
-- Fixes: CONFLICT_ITEM_STEEL-FURNACE


-- Generic compatibility patch for steel-furnace
-- Fixes conflict between: Electric Furnaces, bobassembly, bobpower, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steel-furnace"] then
    local item = data.raw.item["steel-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steel-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steel-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-STEEL-MIXING-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-steel-mixing-furnace
-- Fixes: CONFLICT_ITEM_BOB-STEEL-MIXING-FURNACE


-- Generic compatibility patch for bob-steel-mixing-furnace
-- Fixes conflict between: bobassembly, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-steel-mixing-furnace"] then
    local item = data.raw.item["bob-steel-mixing-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-steel-mixing-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-steel-mixing-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-STEEL-CHEMICAL-FURNACE_GENERIC
-- Description: Generic compatibility patch for item bob-steel-chemical-furnace
-- Fixes: CONFLICT_ITEM_BOB-STEEL-CHEMICAL-FURNACE


-- Generic compatibility patch for bob-steel-chemical-furnace
-- Fixes conflict between: bobassembly, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-steel-chemical-furnace"] then
    local item = data.raw.item["bob-steel-chemical-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-steel-chemical-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-steel-chemical-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TIN-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-tin-plate
-- Fixes: CONFLICT_ITEM_BOB-TIN-PLATE


-- Generic compatibility patch for bob-tin-plate
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-tin-plate"] then
    local item = data.raw.item["bob-tin-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-tin-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-tin-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-RUBBER_GENERIC
-- Description: Generic compatibility patch for item bob-rubber
-- Fixes: CONFLICT_ITEM_BOB-RUBBER


-- Generic compatibility patch for bob-rubber
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-rubber"] then
    local item = data.raw.item["bob-rubber"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-rubber-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-rubber-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-GOLD-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-gold-plate
-- Fixes: CONFLICT_ITEM_BOB-GOLD-PLATE


-- Generic compatibility patch for bob-gold-plate
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-gold-plate"] then
    local item = data.raw.item["bob-gold-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-gold-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-gold-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-RESIN_GENERIC
-- Description: Generic compatibility patch for item bob-resin
-- Fixes: CONFLICT_ITEM_BOB-RESIN


-- Generic compatibility patch for bob-resin
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-resin"] then
    local item = data.raw.item["bob-resin"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-resin-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-resin-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ADVANCED-PROCESSING-UNIT_GENERIC
-- Description: Generic compatibility patch for item bob-advanced-processing-unit
-- Fixes: CONFLICT_ITEM_BOB-ADVANCED-PROCESSING-UNIT


-- Generic compatibility patch for bob-advanced-processing-unit
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-advanced-processing-unit"] then
    local item = data.raw.item["bob-advanced-processing-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-advanced-processing-unit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-advanced-processing-unit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SILICON-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-silicon-plate
-- Fixes: CONFLICT_ITEM_BOB-SILICON-PLATE


-- Generic compatibility patch for bob-silicon-plate
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-silicon-plate"] then
    local item = data.raw.item["bob-silicon-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-silicon-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-silicon-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SILICON-WAFER_GENERIC
-- Description: Generic compatibility patch for item bob-silicon-wafer
-- Fixes: CONFLICT_ITEM_BOB-SILICON-WAFER


-- Generic compatibility patch for bob-silicon-wafer
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-silicon-wafer"] then
    local item = data.raw.item["bob-silicon-wafer"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-silicon-wafer-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-silicon-wafer-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-LEAD-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-lead-plate
-- Fixes: CONFLICT_ITEM_BOB-LEAD-PLATE


-- Generic compatibility patch for bob-lead-plate
-- Fixes conflict between: bobelectronics, bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-lead-plate"] then
    local item = data.raw.item["bob-lead-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-lead-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-lead-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT


-- Generic compatibility patch for bob-alien-artifact
-- Fixes conflict between: bobvehicleequipment, bobenemies, bobtech
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact"] then
    local item = data.raw.item["bob-alien-artifact"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-RED_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-red
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-RED


-- Generic compatibility patch for bob-alien-artifact-red
-- Fixes conflict between: bobenemies, bobtech, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-red"] then
    local item = data.raw.item["bob-alien-artifact-red"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-red-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-red-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-ORANGE_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-orange
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-ORANGE


-- Generic compatibility patch for bob-alien-artifact-orange
-- Fixes conflict between: bobenemies, bobtech, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-orange"] then
    local item = data.raw.item["bob-alien-artifact-orange"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-orange-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-orange-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-YELLOW_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-yellow
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-YELLOW


-- Generic compatibility patch for bob-alien-artifact-yellow
-- Fixes conflict between: bobenemies, bobtech, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-yellow"] then
    local item = data.raw.item["bob-alien-artifact-yellow"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-yellow-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-yellow-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-GREEN_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-green
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-GREEN


-- Generic compatibility patch for bob-alien-artifact-green
-- Fixes conflict between: bobenemies, bobtech, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-green"] then
    local item = data.raw.item["bob-alien-artifact-green"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-green-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-green-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-BLUE_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-blue
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-BLUE


-- Generic compatibility patch for bob-alien-artifact-blue
-- Fixes conflict between: bobenemies, bobtech, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-blue"] then
    local item = data.raw.item["bob-alien-artifact-blue"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-blue-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-blue-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ARTIFACT-PURPLE_GENERIC
-- Description: Generic compatibility patch for item bob-alien-artifact-purple
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-PURPLE


-- Generic compatibility patch for bob-alien-artifact-purple
-- Fixes conflict between: bobenemies, bobtech, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-artifact-purple"] then
    local item = data.raw.item["bob-alien-artifact-purple"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-purple-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-artifact-purple-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_POWER-ARMOR-MK2_GENERIC
-- Description: Generic compatibility patch for item power-armor-mk2
-- Fixes: CONFLICT_ITEM_POWER-ARMOR-MK2


-- Generic compatibility patch for power-armor-mk2
-- Fixes conflict between: Cold_biters, bobwarfare, bobequipment, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["power-armor-mk2"] then
    local item = data.raw.item["power-armor-mk2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "power-armor-mk2-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "power-armor-mk2-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EFFICIENCY-MODULE-2_GENERIC
-- Description: Generic compatibility patch for item efficiency-module-2
-- Fixes: CONFLICT_ITEM_EFFICIENCY-MODULE-2


-- Generic compatibility patch for efficiency-module-2
-- Fixes conflict between: bobwarfare, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["efficiency-module-2"] then
    local item = data.raw.item["efficiency-module-2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "efficiency-module-2-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "efficiency-module-2-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPEED-MODULE-2_GENERIC
-- Description: Generic compatibility patch for item speed-module-2
-- Fixes: CONFLICT_ITEM_SPEED-MODULE-2


-- Generic compatibility patch for speed-module-2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2, bobwarfare, bobequipment, Electric Furnaces
-- Severity: MEDIUM
-- Type: item


if data.raw.item["speed-module-2"] then
    local item = data.raw.item["speed-module-2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "speed-module-2-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "speed-module-2-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-POWER-ARMOR-MK3_GENERIC
-- Description: Generic compatibility patch for item bob-power-armor-mk3
-- Fixes: CONFLICT_ITEM_BOB-POWER-ARMOR-MK3


-- Generic compatibility patch for bob-power-armor-mk3
-- Fixes conflict between: bobwarfare, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-power-armor-mk3"] then
    local item = data.raw.item["bob-power-armor-mk3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-power-armor-mk3-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-power-armor-mk3-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EFFICIENCY-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item efficiency-module-3
-- Fixes: CONFLICT_ITEM_EFFICIENCY-MODULE-3


-- Generic compatibility patch for efficiency-module-3
-- Fixes conflict between: bobvehicleequipment, Krastorio2, rubia, secretas, bobwarfare, bobequipment, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["efficiency-module-3"] then
    local item = data.raw.item["efficiency-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "efficiency-module-3-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "efficiency-module-3-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPEED-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item speed-module-3
-- Fixes: CONFLICT_ITEM_SPEED-MODULE-3


-- Generic compatibility patch for speed-module-3
-- Fixes conflict between: Krastorio2-spaced-out, bobvehicleequipment, Krastorio2, secretas, bobwarfare, bobequipment, bobmodules
-- Severity: MEDIUM
-- Type: item


if data.raw.item["speed-module-3"] then
    local item = data.raw.item["speed-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "speed-module-3-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "speed-module-3-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-POWER-ARMOR-MK4_GENERIC
-- Description: Generic compatibility patch for item bob-power-armor-mk4
-- Fixes: CONFLICT_ITEM_BOB-POWER-ARMOR-MK4


-- Generic compatibility patch for bob-power-armor-mk4
-- Fixes conflict between: bobwarfare, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-power-armor-mk4"] then
    local item = data.raw.item["bob-power-armor-mk4"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-power-armor-mk4-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-power-armor-mk4-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-POWER-ARMOR-MK5_GENERIC
-- Description: Generic compatibility patch for item bob-power-armor-mk5
-- Fixes: CONFLICT_ITEM_BOB-POWER-ARMOR-MK5


-- Generic compatibility patch for bob-power-armor-mk5
-- Fixes conflict between: bobwarfare, bobequipment
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-power-armor-mk5"] then
    local item = data.raw.item["bob-power-armor-mk5"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-power-armor-mk5-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-power-armor-mk5-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PRODUCTIVITY-MODULE-2_GENERIC
-- Description: Generic compatibility patch for item productivity-module-2
-- Fixes: CONFLICT_ITEM_PRODUCTIVITY-MODULE-2


-- Generic compatibility patch for productivity-module-2
-- Fixes conflict between: bobequipment, bobvehicleequipment, Moshine, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["productivity-module-2"] then
    local item = data.raw.item["productivity-module-2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "productivity-module-2-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "productivity-module-2-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PRODUCTIVITY-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item productivity-module-3
-- Fixes: CONFLICT_ITEM_PRODUCTIVITY-MODULE-3


-- Generic compatibility patch for productivity-module-3
-- Fixes conflict between: bobequipment, bobmodules, bobvehicleequipment, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["productivity-module-3"] then
    local item = data.raw.item["productivity-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "productivity-module-3-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "productivity-module-3-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BATTERY-MK2-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item battery-mk2-equipment
-- Fixes: CONFLICT_ITEM_BATTERY-MK2-EQUIPMENT


-- Generic compatibility patch for battery-mk2-equipment
-- Fixes conflict between: bobequipment, Hovercrafts, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["battery-mk2-equipment"] then
    local item = data.raw.item["battery-mk2-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "battery-mk2-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "battery-mk2-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FISSION-REACTOR-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item fission-reactor-equipment
-- Fixes: CONFLICT_ITEM_FISSION-REACTOR-EQUIPMENT


-- Generic compatibility patch for fission-reactor-equipment
-- Fixes conflict between: bobequipment, PlutoniumEnergy, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fission-reactor-equipment"] then
    local item = data.raw.item["fission-reactor-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fission-reactor-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fission-reactor-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item uranium-fuel-cell
-- Fixes: CONFLICT_ITEM_URANIUM-FUEL-CELL


-- Generic compatibility patch for uranium-fuel-cell
-- Fixes conflict between: maraxsis, slp-dyson-sphere-reworked, bobvehicleequipment, secretas, bobequipment, StopgapNukes, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-fuel-cell"] then
    local item = data.raw.item["uranium-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-fuel-cell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-fuel-cell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NIGHT-VISION-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item night-vision-equipment
-- Fixes: CONFLICT_ITEM_NIGHT-VISION-EQUIPMENT


-- Generic compatibility patch for night-vision-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["night-vision-equipment"] then
    local item = data.raw.item["night-vision-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "night-vision-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "night-vision-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SOLAR-PANEL-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item solar-panel-equipment
-- Fixes: CONFLICT_ITEM_SOLAR-PANEL-EQUIPMENT


-- Generic compatibility patch for solar-panel-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["solar-panel-equipment"] then
    local item = data.raw.item["solar-panel-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "solar-panel-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "solar-panel-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PERSONAL-LASER-DEFENSE-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item personal-laser-defense-equipment
-- Fixes: CONFLICT_ITEM_PERSONAL-LASER-DEFENSE-EQUIPMENT


-- Generic compatibility patch for personal-laser-defense-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["personal-laser-defense-equipment"] then
    local item = data.raw.item["personal-laser-defense-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "personal-laser-defense-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "personal-laser-defense-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXOSKELETON-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item exoskeleton-equipment
-- Fixes: CONFLICT_ITEM_EXOSKELETON-EQUIPMENT


-- Generic compatibility patch for exoskeleton-equipment
-- Fixes conflict between: Krastorio2-spaced-out, bobequipment, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["exoskeleton-equipment"] then
    local item = data.raw.item["exoskeleton-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "exoskeleton-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "exoskeleton-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SULFUR_GENERIC
-- Description: Generic compatibility patch for item sulfur
-- Fixes: CONFLICT_ITEM_SULFUR


-- Generic compatibility patch for sulfur
-- Fixes conflict between: bobrevamp, vulcanus-sulfuric-bacteria, tenebris-prime, More_Ammo, castra, Spaghetorio, StopgapNukes, Moshine-assets, bobgreenhouse, bobplates, corrundum, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["sulfur"] then
    local item = data.raw.item["sulfur"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "sulfur-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "sulfur-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-BRASS-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-brass-alloy
-- Fixes: CONFLICT_ITEM_BOB-BRASS-ALLOY


-- Generic compatibility patch for bob-brass-alloy
-- Fixes conflict between: boblogistics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-brass-alloy"] then
    local item = data.raw.item["bob-brass-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-brass-alloy-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-brass-alloy-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TITANIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-titanium-plate
-- Fixes: CONFLICT_ITEM_BOB-TITANIUM-PLATE


-- Generic compatibility patch for bob-titanium-plate
-- Fixes conflict between: boblogistics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-titanium-plate"] then
    local item = data.raw.item["bob-titanium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-titanium-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-titanium-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LONG-HANDED-INSERTER_GENERIC
-- Description: Generic compatibility patch for item long-handed-inserter
-- Fixes: CONFLICT_ITEM_LONG-HANDED-INSERTER


-- Generic compatibility patch for long-handed-inserter
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, long_stack_inserter, rubia, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["long-handed-inserter"] then
    local item = data.raw.item["long-handed-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "long-handed-inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "long-handed-inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item transport-belt
-- Fixes: CONFLICT_ITEM_TRANSPORT-BELT


-- Generic compatibility patch for transport-belt
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, Krastorio2, Cerys-Moon-of-Fulgora, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["transport-belt"] then
    local item = data.raw.item["transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "transport-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "transport-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item fast-transport-belt
-- Fixes: CONFLICT_ITEM_FAST-TRANSPORT-BELT


-- Generic compatibility patch for fast-transport-belt
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, rubia, Krastorio2, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-transport-belt"] then
    local item = data.raw.item["fast-transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-transport-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-transport-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPRESS-TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item express-transport-belt
-- Fixes: CONFLICT_ITEM_EXPRESS-TRANSPORT-BELT


-- Generic compatibility patch for express-transport-belt
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, bobtech, Krastorio2, OmegaDrill, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["express-transport-belt"] then
    local item = data.raw.item["express-transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "express-transport-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "express-transport-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item underground-belt
-- Fixes: CONFLICT_ITEM_UNDERGROUND-BELT


-- Generic compatibility patch for underground-belt
-- Fixes conflict between: boblogistics, rubia
-- Severity: MEDIUM
-- Type: item


if data.raw.item["underground-belt"] then
    local item = data.raw.item["underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "underground-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "underground-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item fast-underground-belt
-- Fixes: CONFLICT_ITEM_FAST-UNDERGROUND-BELT


-- Generic compatibility patch for fast-underground-belt
-- Fixes conflict between: boblogistics, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-underground-belt"] then
    local item = data.raw.item["fast-underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-underground-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-underground-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPRESS-UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item express-underground-belt
-- Fixes: CONFLICT_ITEM_EXPRESS-UNDERGROUND-BELT


-- Generic compatibility patch for express-underground-belt
-- Fixes conflict between: boblogistics, cubium, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["express-underground-belt"] then
    local item = data.raw.item["express-underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "express-underground-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "express-underground-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-SPLITTER_GENERIC
-- Description: Generic compatibility patch for item fast-splitter
-- Fixes: CONFLICT_ITEM_FAST-SPLITTER


-- Generic compatibility patch for fast-splitter
-- Fixes conflict between: boblogistics, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-splitter"] then
    local item = data.raw.item["fast-splitter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-splitter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-splitter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPRESS-SPLITTER_GENERIC
-- Description: Generic compatibility patch for item express-splitter
-- Fixes: CONFLICT_ITEM_EXPRESS-SPLITTER


-- Generic compatibility patch for express-splitter
-- Fixes conflict between: rubia, boblogistics, cubium, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["express-splitter"] then
    local item = data.raw.item["express-splitter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "express-splitter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "express-splitter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BURNER-INSERTER_GENERIC
-- Description: Generic compatibility patch for item burner-inserter
-- Fixes: CONFLICT_ITEM_BURNER-INSERTER


-- Generic compatibility patch for burner-inserter
-- Fixes conflict between: Krastorio2-spaced-out, boblogistics, lignumis, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["burner-inserter"] then
    local item = data.raw.item["burner-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "burner-inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "burner-inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FAST-INSERTER_GENERIC
-- Description: Generic compatibility patch for item fast-inserter
-- Fixes: CONFLICT_ITEM_FAST-INSERTER


-- Generic compatibility patch for fast-inserter
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, bobtech, Krastorio2, rubia, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fast-inserter"] then
    local item = data.raw.item["fast-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fast-inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fast-inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BULK-INSERTER_GENERIC
-- Description: Generic compatibility patch for item bulk-inserter
-- Fixes: CONFLICT_ITEM_BULK-INSERTER


-- Generic compatibility patch for bulk-inserter
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, bobtech, secretas, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bulk-inserter"] then
    local item = data.raw.item["bulk-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bulk-inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bulk-inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_INSERTER_GENERIC
-- Description: Generic compatibility patch for item inserter
-- Fixes: CONFLICT_ITEM_INSERTER


-- Generic compatibility patch for inserter
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, Krastorio2, secretas, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["inserter"] then
    local item = data.raw.item["inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PASSIVE-PROVIDER-CHEST_GENERIC
-- Description: Generic compatibility patch for item passive-provider-chest
-- Fixes: CONFLICT_ITEM_PASSIVE-PROVIDER-CHEST


-- Generic compatibility patch for passive-provider-chest
-- Fixes conflict between: Warehousing, boblogistics, orbital-transfer
-- Severity: MEDIUM
-- Type: item


if data.raw.item["passive-provider-chest"] then
    local item = data.raw.item["passive-provider-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "passive-provider-chest-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "passive-provider-chest-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ACTIVE-PROVIDER-CHEST_GENERIC
-- Description: Generic compatibility patch for item active-provider-chest
-- Fixes: CONFLICT_ITEM_ACTIVE-PROVIDER-CHEST


-- Generic compatibility patch for active-provider-chest
-- Fixes conflict between: Warehousing, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["active-provider-chest"] then
    local item = data.raw.item["active-provider-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "active-provider-chest-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "active-provider-chest-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STORAGE-CHEST_GENERIC
-- Description: Generic compatibility patch for item storage-chest
-- Fixes: CONFLICT_ITEM_STORAGE-CHEST


-- Generic compatibility patch for storage-chest
-- Fixes conflict between: Warehousing, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["storage-chest"] then
    local item = data.raw.item["storage-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "storage-chest-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "storage-chest-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BUFFER-CHEST_GENERIC
-- Description: Generic compatibility patch for item buffer-chest
-- Fixes: CONFLICT_ITEM_BUFFER-CHEST


-- Generic compatibility patch for buffer-chest
-- Fixes conflict between: Warehousing, boblogistics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["buffer-chest"] then
    local item = data.raw.item["buffer-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "buffer-chest-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "buffer-chest-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_REQUESTER-CHEST_GENERIC
-- Description: Generic compatibility patch for item requester-chest
-- Fixes: CONFLICT_ITEM_REQUESTER-CHEST


-- Generic compatibility patch for requester-chest
-- Fixes conflict between: Warehousing, boblogistics, orbital-transfer
-- Severity: MEDIUM
-- Type: item


if data.raw.item["requester-chest"] then
    local item = data.raw.item["requester-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "requester-chest-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "requester-chest-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-BRONZE-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-bronze-alloy
-- Fixes: CONFLICT_ITEM_BOB-BRONZE-ALLOY


-- Generic compatibility patch for bob-bronze-alloy
-- Fixes conflict between: boblogistics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-bronze-alloy"] then
    local item = data.raw.item["bob-bronze-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-bronze-alloy-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-bronze-alloy-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SILICON-NITRIDE_GENERIC
-- Description: Generic compatibility patch for item bob-silicon-nitride
-- Fixes: CONFLICT_ITEM_BOB-SILICON-NITRIDE


-- Generic compatibility patch for bob-silicon-nitride
-- Fixes conflict between: boblogistics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-silicon-nitride"] then
    local item = data.raw.item["bob-silicon-nitride"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-silicon-nitride-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-silicon-nitride-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TUNGSTEN-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-tungsten-plate
-- Fixes: CONFLICT_ITEM_BOB-TUNGSTEN-PLATE


-- Generic compatibility patch for bob-tungsten-plate
-- Fixes conflict between: boblogistics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-tungsten-plate"] then
    local item = data.raw.item["bob-tungsten-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-tungsten-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-tungsten-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-NITINOL-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-nitinol-alloy
-- Fixes: CONFLICT_ITEM_BOB-NITINOL-ALLOY


-- Generic compatibility patch for bob-nitinol-alloy
-- Fixes conflict between: boblogistics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-nitinol-alloy"] then
    local item = data.raw.item["bob-nitinol-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-nitinol-alloy-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-nitinol-alloy-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-COPPER-TUNGSTEN-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-copper-tungsten-alloy
-- Fixes: CONFLICT_ITEM_BOB-COPPER-TUNGSTEN-ALLOY


-- Generic compatibility patch for bob-copper-tungsten-alloy
-- Fixes conflict between: boblogistics, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-copper-tungsten-alloy"] then
    local item = data.raw.item["bob-copper-tungsten-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-copper-tungsten-alloy-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-copper-tungsten-alloy-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PUMP_GENERIC
-- Description: Generic compatibility patch for item pump
-- Fixes: CONFLICT_ITEM_PUMP


-- Generic compatibility patch for pump
-- Fixes conflict between: secretas, boblogistics, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["pump"] then
    local item = data.raw.item["pump"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "pump-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "pump-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROBOPORT_GENERIC
-- Description: Generic compatibility patch for item roboport
-- Fixes: CONFLICT_ITEM_ROBOPORT


-- Generic compatibility patch for roboport
-- Fixes conflict between: Krastorio2-spaced-out, boblogistics, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["roboport"] then
    local item = data.raw.item["roboport"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "roboport-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "roboport-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEEL-CHEST_GENERIC
-- Description: Generic compatibility patch for item steel-chest
-- Fixes: CONFLICT_ITEM_STEEL-CHEST


-- Generic compatibility patch for steel-chest
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, bobtech, Krastorio2, rubia, bobwarfare, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steel-chest"] then
    local item = data.raw.item["steel-chest"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steel-chest-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steel-chest-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LOCOMOTIVE_GENERIC
-- Description: Generic compatibility patch for item locomotive
-- Fixes: CONFLICT_ITEM_LOCOMOTIVE


-- Generic compatibility patch for locomotive
-- Fixes conflict between: boblogistics, se-space-trains, Krastorio2-spaced-out, rubia, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["locomotive"] then
    local item = data.raw.item["locomotive"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "locomotive-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "locomotive-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CARGO-WAGON_GENERIC
-- Description: Generic compatibility patch for item cargo-wagon
-- Fixes: CONFLICT_ITEM_CARGO-WAGON


-- Generic compatibility patch for cargo-wagon
-- Fixes conflict between: boblogistics, se-space-trains, DoubleWagons, rubia, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["cargo-wagon"] then
    local item = data.raw.item["cargo-wagon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "cargo-wagon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "cargo-wagon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLUID-WAGON_GENERIC
-- Description: Generic compatibility patch for item fluid-wagon
-- Fixes: CONFLICT_ITEM_FLUID-WAGON


-- Generic compatibility patch for fluid-wagon
-- Fixes conflict between: se-space-trains, boblogistics, rubia, DoubleWagons
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fluid-wagon"] then
    local item = data.raw.item["fluid-wagon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fluid-wagon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fluid-wagon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FLYING-ROBOT-FRAME_GENERIC
-- Description: Generic compatibility patch for item flying-robot-frame
-- Fixes: CONFLICT_ITEM_FLYING-ROBOT-FRAME


-- Generic compatibility patch for flying-robot-frame
-- Fixes conflict between: boblogistics, bobtech, cubium, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["flying-robot-frame"] then
    local item = data.raw.item["flying-robot-frame"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "flying-robot-frame-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "flying-robot-frame-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_QUALITY-MODULE-3_GENERIC
-- Description: Generic compatibility patch for item quality-module-3
-- Fixes: CONFLICT_ITEM_QUALITY-MODULE-3


-- Generic compatibility patch for quality-module-3
-- Fixes conflict between: bobmodules, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["quality-module-3"] then
    local item = data.raw.item["quality-module-3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "quality-module-3-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "quality-module-3-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-RUBY-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-ruby-ore
-- Fixes: CONFLICT_ITEM_BOB-RUBY-ORE


-- Generic compatibility patch for bob-ruby-ore
-- Fixes conflict between: bobores, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-ruby-ore"] then
    local item = data.raw.item["bob-ruby-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-ruby-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-ruby-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SAPPHIRE-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-sapphire-ore
-- Fixes: CONFLICT_ITEM_BOB-SAPPHIRE-ORE


-- Generic compatibility patch for bob-sapphire-ore
-- Fixes conflict between: bobores, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-sapphire-ore"] then
    local item = data.raw.item["bob-sapphire-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-sapphire-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-sapphire-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-EMERALD-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-emerald-ore
-- Fixes: CONFLICT_ITEM_BOB-EMERALD-ORE


-- Generic compatibility patch for bob-emerald-ore
-- Fixes conflict between: bobores, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-emerald-ore"] then
    local item = data.raw.item["bob-emerald-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-emerald-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-emerald-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-AMETHYST-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-amethyst-ore
-- Fixes: CONFLICT_ITEM_BOB-AMETHYST-ORE


-- Generic compatibility patch for bob-amethyst-ore
-- Fixes conflict between: bobores, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-amethyst-ore"] then
    local item = data.raw.item["bob-amethyst-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-amethyst-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-amethyst-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-TOPAZ-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-topaz-ore
-- Fixes: CONFLICT_ITEM_BOB-TOPAZ-ORE


-- Generic compatibility patch for bob-topaz-ore
-- Fixes conflict between: bobores, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-topaz-ore"] then
    local item = data.raw.item["bob-topaz-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-topaz-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-topaz-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-DIAMOND-ORE_GENERIC
-- Description: Generic compatibility patch for item bob-diamond-ore
-- Fixes: CONFLICT_ITEM_BOB-DIAMOND-ORE


-- Generic compatibility patch for bob-diamond-ore
-- Fixes conflict between: bobores, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-diamond-ore"] then
    local item = data.raw.item["bob-diamond-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-diamond-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-diamond-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SALT_GENERIC
-- Description: Generic compatibility patch for item bob-salt
-- Fixes: CONFLICT_ITEM_BOB-SALT


-- Generic compatibility patch for bob-salt
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-salt"] then
    local item = data.raw.item["bob-salt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-salt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-salt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-LITHIUM-CHLORIDE_GENERIC
-- Description: Generic compatibility patch for item bob-lithium-chloride
-- Fixes: CONFLICT_ITEM_BOB-LITHIUM-CHLORIDE


-- Generic compatibility patch for bob-lithium-chloride
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-lithium-chloride"] then
    local item = data.raw.item["bob-lithium-chloride"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-lithium-chloride-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-lithium-chloride-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-LITHIUM-PERCHLORATE_GENERIC
-- Description: Generic compatibility patch for item bob-lithium-perchlorate
-- Fixes: CONFLICT_ITEM_BOB-LITHIUM-PERCHLORATE


-- Generic compatibility patch for bob-lithium-perchlorate
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-lithium-perchlorate"] then
    local item = data.raw.item["bob-lithium-perchlorate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-lithium-perchlorate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-lithium-perchlorate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-SODIUM-HYDROXIDE_GENERIC
-- Description: Generic compatibility patch for item bob-sodium-hydroxide
-- Fixes: CONFLICT_ITEM_BOB-SODIUM-HYDROXIDE


-- Generic compatibility patch for bob-sodium-hydroxide
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-sodium-hydroxide"] then
    local item = data.raw.item["bob-sodium-hydroxide"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-sodium-hydroxide-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-sodium-hydroxide-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-CALCIUM-CHLORIDE_GENERIC
-- Description: Generic compatibility patch for item bob-calcium-chloride
-- Fixes: CONFLICT_ITEM_BOB-CALCIUM-CHLORIDE


-- Generic compatibility patch for bob-calcium-chloride
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-calcium-chloride"] then
    local item = data.raw.item["bob-calcium-chloride"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-calcium-chloride-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-calcium-chloride-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-COBALT-OXIDE_GENERIC
-- Description: Generic compatibility patch for item bob-cobalt-oxide
-- Fixes: CONFLICT_ITEM_BOB-COBALT-OXIDE


-- Generic compatibility patch for bob-cobalt-oxide
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-cobalt-oxide"] then
    local item = data.raw.item["bob-cobalt-oxide"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-cobalt-oxide-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-cobalt-oxide-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-PLUTONIUM-239_GENERIC
-- Description: Generic compatibility patch for item bob-plutonium-239
-- Fixes: CONFLICT_ITEM_BOB-PLUTONIUM-239


-- Generic compatibility patch for bob-plutonium-239
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-plutonium-239"] then
    local item = data.raw.item["bob-plutonium-239"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-plutonium-239-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-plutonium-239-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALUMINIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item bob-aluminium-plate
-- Fixes: CONFLICT_ITEM_BOB-ALUMINIUM-PLATE


-- Generic compatibility patch for bob-aluminium-plate
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-aluminium-plate"] then
    local item = data.raw.item["bob-aluminium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-aluminium-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-aluminium-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ALIEN-ORANGE-ALLOY_GENERIC
-- Description: Generic compatibility patch for item bob-alien-orange-alloy
-- Fixes: CONFLICT_ITEM_BOB-ALIEN-ORANGE-ALLOY


-- Generic compatibility patch for bob-alien-orange-alloy
-- Fixes conflict between: bobvehicleequipment, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-alien-orange-alloy"] then
    local item = data.raw.item["bob-alien-orange-alloy"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-alien-orange-alloy-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-alien-orange-alloy-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-CARBON_GENERIC
-- Description: Generic compatibility patch for item bob-carbon
-- Fixes: CONFLICT_ITEM_BOB-CARBON


-- Generic compatibility patch for bob-carbon
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-carbon"] then
    local item = data.raw.item["bob-carbon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-carbon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-carbon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-238_GENERIC
-- Description: Generic compatibility patch for item uranium-238
-- Fixes: CONFLICT_ITEM_URANIUM-238


-- Generic compatibility patch for uranium-238
-- Fixes conflict between: vtk-cannon-turret, More_Ammo, Krastorio2-spaced-out, StopgapNukes, PlutoniumEnergy, Krastorio2, Cerys-Moon-of-Fulgora, rubia, bobwarfare, bobplates, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-238"] then
    local item = data.raw.item["uranium-238"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-238-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-238-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-ENRICHED-FUEL_GENERIC
-- Description: Generic compatibility patch for item bob-enriched-fuel
-- Fixes: CONFLICT_ITEM_BOB-ENRICHED-FUEL


-- Generic compatibility patch for bob-enriched-fuel
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-enriched-fuel"] then
    local item = data.raw.item["bob-enriched-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-enriched-fuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-enriched-fuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOB-BURNER-GENERATOR_GENERIC
-- Description: Generic compatibility patch for item bob-burner-generator
-- Fixes: CONFLICT_ITEM_BOB-BURNER-GENERATOR


-- Generic compatibility patch for bob-burner-generator
-- Fixes conflict between: bobtech, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bob-burner-generator"] then
    local item = data.raw.item["bob-burner-generator"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bob-burner-generator-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bob-burner-generator-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HEAT-PIPE_GENERIC
-- Description: Generic compatibility patch for item heat-pipe
-- Fixes: CONFLICT_ITEM_HEAT-PIPE


-- Generic compatibility patch for heat-pipe
-- Fixes conflict between: bobpower, secretas, Cerys-Moon-of-Fulgora, Hovercrafts, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["heat-pipe"] then
    local item = data.raw.item["heat-pipe"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "heat-pipe-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "heat-pipe-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ACCUMULATOR_GENERIC
-- Description: Generic compatibility patch for item accumulator
-- Fixes: CONFLICT_ITEM_ACCUMULATOR


-- Generic compatibility patch for accumulator
-- Fixes conflict between: Kux-OrbitalIonCannon, bobpower, slp-dyson-sphere-reworked, RenaiTransportation, RampantFixed, snouz-big-accumulator, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["accumulator"] then
    local item = data.raw.item["accumulator"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "accumulator-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "accumulator-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOILER_GENERIC
-- Description: Generic compatibility patch for item boiler
-- Fixes: CONFLICT_ITEM_BOILER


-- Generic compatibility patch for boiler
-- Fixes conflict between: corrundum, bobpower, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["boiler"] then
    local item = data.raw.item["boiler"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "boiler-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "boiler-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HEAT-EXCHANGER_GENERIC
-- Description: Generic compatibility patch for item heat-exchanger
-- Fixes: CONFLICT_ITEM_HEAT-EXCHANGER


-- Generic compatibility patch for heat-exchanger
-- Fixes conflict between: bobpower, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["heat-exchanger"] then
    local item = data.raw.item["heat-exchanger"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "heat-exchanger-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "heat-exchanger-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NUCLEAR-REACTOR_GENERIC
-- Description: Generic compatibility patch for item nuclear-reactor
-- Fixes: CONFLICT_ITEM_NUCLEAR-REACTOR


-- Generic compatibility patch for nuclear-reactor
-- Fixes conflict between: RampantFixed, bobpower
-- Severity: MEDIUM
-- Type: item


if data.raw.item["nuclear-reactor"] then
    local item = data.raw.item["nuclear-reactor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "nuclear-reactor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "nuclear-reactor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_MEDIUM-ELECTRIC-POLE_GENERIC
-- Description: Generic compatibility patch for item medium-electric-pole
-- Fixes: CONFLICT_ITEM_MEDIUM-ELECTRIC-POLE


-- Generic compatibility patch for medium-electric-pole
-- Fixes conflict between: snouz-big-solar-panel, bobpower, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["medium-electric-pole"] then
    local item = data.raw.item["medium-electric-pole"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "medium-electric-pole-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "medium-electric-pole-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUBSTATION_GENERIC
-- Description: Generic compatibility patch for item substation
-- Fixes: CONFLICT_ITEM_SUBSTATION


-- Generic compatibility patch for substation
-- Fixes conflict between: snouz_better_substation, bobpower, Krastorio2-spaced-out, Krastorio2, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["substation"] then
    local item = data.raw.item["substation"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "substation-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "substation-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SOLAR-PANEL_GENERIC
-- Description: Generic compatibility patch for item solar-panel
-- Fixes: CONFLICT_ITEM_SOLAR-PANEL


-- Generic compatibility patch for solar-panel
-- Fixes conflict between: Kux-OrbitalIonCannon, snouz-big-solar-panel, bobpower, Krastorio2-spaced-out, slp-dyson-sphere-reworked, secretas, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["solar-panel"] then
    local item = data.raw.item["solar-panel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "solar-panel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "solar-panel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEAM-ENGINE_GENERIC
-- Description: Generic compatibility patch for item steam-engine
-- Fixes: CONFLICT_ITEM_STEAM-ENGINE


-- Generic compatibility patch for steam-engine
-- Fixes conflict between: corrundum, bobpower, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steam-engine"] then
    local item = data.raw.item["steam-engine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steam-engine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steam-engine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STEAM-TURBINE_GENERIC
-- Description: Generic compatibility patch for item steam-turbine
-- Fixes: CONFLICT_ITEM_STEAM-TURBINE


-- Generic compatibility patch for steam-turbine
-- Fixes conflict between: bobpower, Krastorio2-spaced-out, Krastorio2, Cerys-Moon-of-Fulgora, secretas, corrundum
-- Severity: MEDIUM
-- Type: item


if data.raw.item["steam-turbine"] then
    local item = data.raw.item["steam-turbine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "steam-turbine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "steam-turbine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_AUTOMATION-SCIENCE-PACK_GENERIC
-- Description: Generic compatibility patch for item automation-science-pack
-- Fixes: CONFLICT_ITEM_AUTOMATION-SCIENCE-PACK


-- Generic compatibility patch for automation-science-pack
-- Fixes conflict between: Igrys, bobtech, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["automation-science-pack"] then
    local item = data.raw.item["automation-science-pack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "automation-science-pack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "automation-science-pack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LOGISTIC-SCIENCE-PACK_GENERIC
-- Description: Generic compatibility patch for item logistic-science-pack
-- Fixes: CONFLICT_ITEM_LOGISTIC-SCIENCE-PACK


-- Generic compatibility patch for logistic-science-pack
-- Fixes conflict between: bobtech, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["logistic-science-pack"] then
    local item = data.raw.item["logistic-science-pack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "logistic-science-pack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "logistic-science-pack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CHEMICAL-SCIENCE-PACK_GENERIC
-- Description: Generic compatibility patch for item chemical-science-pack
-- Fixes: CONFLICT_ITEM_CHEMICAL-SCIENCE-PACK


-- Generic compatibility patch for chemical-science-pack
-- Fixes conflict between: bobtech, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["chemical-science-pack"] then
    local item = data.raw.item["chemical-science-pack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "chemical-science-pack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "chemical-science-pack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_MILITARY-SCIENCE-PACK_GENERIC
-- Description: Generic compatibility patch for item military-science-pack
-- Fixes: CONFLICT_ITEM_MILITARY-SCIENCE-PACK


-- Generic compatibility patch for military-science-pack
-- Fixes conflict between: bobtech, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["military-science-pack"] then
    local item = data.raw.item["military-science-pack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "military-science-pack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "military-science-pack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LAB_GENERIC
-- Description: Generic compatibility patch for item lab
-- Fixes: CONFLICT_ITEM_LAB


-- Generic compatibility patch for lab
-- Fixes conflict between: Krastorio2-spaced-out, bobtech, Krastorio2, corrundum, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lab"] then
    local item = data.raw.item["lab"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lab-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lab-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PRODUCTIVITY-MODULE_GENERIC
-- Description: Generic compatibility patch for item productivity-module
-- Fixes: CONFLICT_ITEM_PRODUCTIVITY-MODULE


-- Generic compatibility patch for productivity-module
-- Fixes conflict between: crushing-industry, bobvehicleequipment, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["productivity-module"] then
    local item = data.raw.item["productivity-module"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "productivity-module-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "productivity-module-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-ROUNDS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item uranium-rounds-magazine
-- Fixes: CONFLICT_ITEM_URANIUM-ROUNDS-MAGAZINE


-- Generic compatibility patch for uranium-rounds-magazine
-- Fixes conflict between: Cerys-Moon-of-Fulgora, castra, bobwarfare, StopgapNukes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-rounds-magazine"] then
    local item = data.raw.item["uranium-rounds-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-rounds-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-rounds-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DISTRACTOR-CAPSULE_GENERIC
-- Description: Generic compatibility patch for item distractor-capsule
-- Fixes: CONFLICT_ITEM_DISTRACTOR-CAPSULE


-- Generic compatibility patch for distractor-capsule
-- Fixes conflict between: castra, bobwarfare
-- Severity: MEDIUM
-- Type: item


if data.raw.item["distractor-capsule"] then
    local item = data.raw.item["distractor-capsule"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "distractor-capsule-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "distractor-capsule-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_POISON-CAPSULE_GENERIC
-- Description: Generic compatibility patch for item poison-capsule
-- Fixes: CONFLICT_ITEM_POISON-CAPSULE


-- Generic compatibility patch for poison-capsule
-- Fixes conflict between: castra, bobwarfare, Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["poison-capsule"] then
    local item = data.raw.item["poison-capsule"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "poison-capsule-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "poison-capsule-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SLOWDOWN-CAPSULE_GENERIC
-- Description: Generic compatibility patch for item slowdown-capsule
-- Fixes: CONFLICT_ITEM_SLOWDOWN-CAPSULE


-- Generic compatibility patch for slowdown-capsule
-- Fixes conflict between: castra, bobwarfare
-- Severity: MEDIUM
-- Type: item


if data.raw.item["slowdown-capsule"] then
    local item = data.raw.item["slowdown-capsule"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "slowdown-capsule-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "slowdown-capsule-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GRAPHITE_GENERIC
-- Description: Generic compatibility patch for item graphite
-- Fixes: CONFLICT_ITEM_GRAPHITE


-- Generic compatibility patch for graphite
-- Fixes conflict between: bzcarbon, bztin
-- Severity: MEDIUM
-- Type: item


if data.raw.item["graphite"] then
    local item = data.raw.item["graphite"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "graphite-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "graphite-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DIAMOND_GENERIC
-- Description: Generic compatibility patch for item diamond
-- Fixes: CONFLICT_ITEM_DIAMOND


-- Generic compatibility patch for diamond
-- Fixes conflict between: bzcarbon, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["diamond"] then
    local item = data.raw.item["diamond"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "diamond-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "diamond-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BASIC-CRUSHER_GENERIC
-- Description: Generic compatibility patch for item basic-crusher
-- Fixes: CONFLICT_ITEM_BASIC-CRUSHER


-- Generic compatibility patch for basic-crusher
-- Fixes conflict between: bzcarbon, bzsilicon
-- Severity: MEDIUM
-- Type: item


if data.raw.item["basic-crusher"] then
    local item = data.raw.item["basic-crusher"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "basic-crusher-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "basic-crusher-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CARBONIC-ASTEROID-CHUNK_GENERIC
-- Description: Generic compatibility patch for item carbonic-asteroid-chunk
-- Fixes: CONFLICT_ITEM_CARBONIC-ASTEROID-CHUNK


-- Generic compatibility patch for carbonic-asteroid-chunk
-- Fixes conflict between: bzcarbon, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["carbonic-asteroid-chunk"] then
    local item = data.raw.item["carbonic-asteroid-chunk"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "carbonic-asteroid-chunk-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "carbonic-asteroid-chunk-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CARBON-FIBER_GENERIC
-- Description: Generic compatibility patch for item carbon-fiber
-- Fixes: CONFLICT_ITEM_CARBON-FIBER


-- Generic compatibility patch for carbon-fiber
-- Fixes conflict between: castra, Krastorio2-spaced-out, slp-dyson-sphere-reworked, rubia, lilys-cubeine, secretas, bzcarbon, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["carbon-fiber"] then
    local item = data.raw.item["carbon-fiber"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "carbon-fiber-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "carbon-fiber-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_METALLIC-ASTEROID-CHUNK_GENERIC
-- Description: Generic compatibility patch for item metallic-asteroid-chunk
-- Fixes: CONFLICT_ITEM_METALLIC-ASTEROID-CHUNK


-- Generic compatibility patch for metallic-asteroid-chunk
-- Fixes conflict between: bzlead, bztin, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["metallic-asteroid-chunk"] then
    local item = data.raw.item["metallic-asteroid-chunk"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "metallic-asteroid-chunk-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "metallic-asteroid-chunk-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LEAD-ORE_GENERIC
-- Description: Generic compatibility patch for item lead-ore
-- Fixes: CONFLICT_ITEM_LEAD-ORE


-- Generic compatibility patch for lead-ore
-- Fixes conflict between: quirkycat_recycle, bzlead, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lead-ore"] then
    local item = data.raw.item["lead-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lead-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lead-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LEAD-PLATE_GENERIC
-- Description: Generic compatibility patch for item lead-plate
-- Fixes: CONFLICT_ITEM_LEAD-PLATE


-- Generic compatibility patch for lead-plate
-- Fixes conflict between: bzlead, PlutoniumEnergy, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lead-plate"] then
    local item = data.raw.item["lead-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lead-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lead-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SILICON_GENERIC
-- Description: Generic compatibility patch for item silicon
-- Fixes: CONFLICT_ITEM_SILICON


-- Generic compatibility patch for silicon
-- Fixes conflict between: bzsilicon, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["silicon"] then
    local item = data.raw.item["silicon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "silicon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "silicon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SILICA_GENERIC
-- Description: Generic compatibility patch for item silica
-- Fixes: CONFLICT_ITEM_SILICA


-- Generic compatibility patch for silica
-- Fixes conflict between: bzsilicon, quirkycat_recycle, Moshine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["silica"] then
    local item = data.raw.item["silica"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "silica-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "silica-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SILICON_GENERIC
-- Description: Generic compatibility patch for item kr-silicon
-- Fixes: CONFLICT_ITEM_KR-SILICON


-- Generic compatibility patch for kr-silicon
-- Fixes conflict between: Krastorio2-spaced-out, bzsilicon, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-silicon"] then
    local item = data.raw.item["kr-silicon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-silicon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-silicon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TIN-ORE_GENERIC
-- Description: Generic compatibility patch for item tin-ore
-- Fixes: CONFLICT_ITEM_TIN-ORE


-- Generic compatibility patch for tin-ore
-- Fixes conflict between: quirkycat_recycle, crushing-industry, bztin, cerys-lunaponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tin-ore"] then
    local item = data.raw.item["tin-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tin-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tin-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TIN-PLATE_GENERIC
-- Description: Generic compatibility patch for item tin-plate
-- Fixes: CONFLICT_ITEM_TIN-PLATE


-- Generic compatibility patch for tin-plate
-- Fixes conflict between: crushing-industry, bztin
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tin-plate"] then
    local item = data.raw.item["tin-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tin-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tin-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TITANIUM-ORE_GENERIC
-- Description: Generic compatibility patch for item titanium-ore
-- Fixes: CONFLICT_ITEM_TITANIUM-ORE


-- Generic compatibility patch for titanium-ore
-- Fixes conflict between: bztitanium, bzzirconium, crushing-industry, quirkycat_recycle
-- Severity: MEDIUM
-- Type: item


if data.raw.item["titanium-ore"] then
    local item = data.raw.item["titanium-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "titanium-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "titanium-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ICE_GENERIC
-- Description: Generic compatibility patch for item ice
-- Fixes: CONFLICT_ITEM_ICE


-- Generic compatibility patch for ice
-- Fixes conflict between: Krastorio2-spaced-out, secretas, bzzirconium, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["ice"] then
    local item = data.raw.item["ice"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "ice-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "ice-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ZIRCON_GENERIC
-- Description: Generic compatibility patch for item zircon
-- Fixes: CONFLICT_ITEM_ZIRCON


-- Generic compatibility patch for zircon
-- Fixes conflict between: bzzirconium, quirkycat_recycle
-- Severity: MEDIUM
-- Type: item


if data.raw.item["zircon"] then
    local item = data.raw.item["zircon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "zircon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "zircon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FIREARM-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item firearm-magazine
-- Fixes: CONFLICT_ITEM_FIREARM-MAGAZINE


-- Generic compatibility patch for firearm-magazine
-- Fixes conflict between: rubia, castra, cubium, More_Ammo
-- Severity: MEDIUM
-- Type: item


if data.raw.item["firearm-magazine"] then
    local item = data.raw.item["firearm-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "firearm-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "firearm-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PIERCING-ROUNDS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item piercing-rounds-magazine
-- Fixes: CONFLICT_ITEM_PIERCING-ROUNDS-MAGAZINE


-- Generic compatibility patch for piercing-rounds-magazine
-- Fixes conflict between: More_Ammo, castra, Krastorio2-spaced-out, PlutoniumEnergy, Krastorio2, rubia, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["piercing-rounds-magazine"] then
    local item = data.raw.item["piercing-rounds-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "piercing-rounds-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "piercing-rounds-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LITHIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item lithium-plate
-- Fixes: CONFLICT_ITEM_LITHIUM-PLATE


-- Generic compatibility patch for lithium-plate
-- Fixes conflict between: castra, Krastorio2-spaced-out, slp-dyson-sphere-reworked, secretas, Cerys-Moon-of-Fulgora, VoidProcessing, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lithium-plate"] then
    local item = data.raw.item["lithium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lithium-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lithium-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SUPERCAPACITOR_GENERIC
-- Description: Generic compatibility patch for item supercapacitor
-- Fixes: CONFLICT_ITEM_SUPERCAPACITOR


-- Generic compatibility patch for supercapacitor
-- Fixes conflict between: tenebris, tenebris-prime, castra, lignumis, secretas, RenaiTransportation, RampantFixed, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["supercapacitor"] then
    local item = data.raw.item["supercapacitor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "supercapacitor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "supercapacitor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HOLMIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item holmium-plate
-- Fixes: CONFLICT_ITEM_HOLMIUM-PLATE


-- Generic compatibility patch for holmium-plate
-- Fixes conflict between: metal-and-stars, castra, Spaghetorio, secretas, Cerys-Moon-of-Fulgora, VoidProcessing, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["holmium-plate"] then
    local item = data.raw.item["holmium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "holmium-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "holmium-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_QUANTUM-PROCESSOR_GENERIC
-- Description: Generic compatibility patch for item quantum-processor
-- Fixes: CONFLICT_ITEM_QUANTUM-PROCESSOR


-- Generic compatibility patch for quantum-processor
-- Fixes conflict between: castra, Krastorio2-spaced-out, slp-dyson-sphere-reworked, promethium-quality, RampantFixed, VoidProcessing, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["quantum-processor"] then
    local item = data.raw.item["quantum-processor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "quantum-processor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "quantum-processor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET-FUEL_GENERIC
-- Description: Generic compatibility patch for item rocket-fuel
-- Fixes: CONFLICT_ITEM_ROCKET-FUEL


-- Generic compatibility patch for rocket-fuel
-- Fixes conflict between: tenebris, Kux-OrbitalIonCannon, tenebris-prime, castra, Krastorio2-spaced-out, PlutoniumEnergy, Krastorio2, lignumis, RenaiTransportation, rubia, VoidProcessing, StopgapNukes, corrundum, cubium, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket-fuel"] then
    local item = data.raw.item["rocket-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-fuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-fuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ANCIENT-STRUCTURE-REPAIR-PART_GENERIC
-- Description: Generic compatibility patch for item ancient-structure-repair-part
-- Fixes: CONFLICT_ITEM_ANCIENT-STRUCTURE-REPAIR-PART


-- Generic compatibility patch for ancient-structure-repair-part
-- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["ancient-structure-repair-part"] then
    local item = data.raw.item["ancient-structure-repair-part"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "ancient-structure-repair-part-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "ancient-structure-repair-part-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CERYS-NITROGEN-RICH-MINERALS_GENERIC
-- Description: Generic compatibility patch for item cerys-nitrogen-rich-minerals
-- Fixes: CONFLICT_ITEM_CERYS-NITROGEN-RICH-MINERALS


-- Generic compatibility patch for cerys-nitrogen-rich-minerals
-- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
-- Severity: MEDIUM
-- Type: item


if data.raw.item["cerys-nitrogen-rich-minerals"] then
    local item = data.raw.item["cerys-nitrogen-rich-minerals"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "cerys-nitrogen-rich-minerals-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "cerys-nitrogen-rich-minerals-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-238_GENERIC
-- Description: Generic compatibility patch for item plutonium-238
-- Fixes: CONFLICT_ITEM_PLUTONIUM-238


-- Generic compatibility patch for plutonium-238
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-238"] then
    local item = data.raw.item["plutonium-238"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-238-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-238-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-ROUNDS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item plutonium-rounds-magazine
-- Fixes: CONFLICT_ITEM_PLUTONIUM-ROUNDS-MAGAZINE


-- Generic compatibility patch for plutonium-rounds-magazine
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-rounds-magazine"] then
    local item = data.raw.item["plutonium-rounds-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-rounds-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-rounds-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NUCLEAR-FUEL_GENERIC
-- Description: Generic compatibility patch for item nuclear-fuel
-- Fixes: CONFLICT_ITEM_NUCLEAR-FUEL


-- Generic compatibility patch for nuclear-fuel
-- Fixes conflict between: Cerys-Moon-of-Fulgora, RenaiTransportation, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["nuclear-fuel"] then
    local item = data.raw.item["nuclear-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "nuclear-fuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "nuclear-fuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-FUEL_GENERIC
-- Description: Generic compatibility patch for item plutonium-fuel
-- Fixes: CONFLICT_ITEM_PLUTONIUM-FUEL


-- Generic compatibility patch for plutonium-fuel
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-fuel"] then
    local item = data.raw.item["plutonium-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-fuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-fuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_URANIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item uranium-cannon-shell
-- Fixes: CONFLICT_ITEM_URANIUM-CANNON-SHELL


-- Generic compatibility patch for uranium-cannon-shell
-- Fixes conflict between: Cerys-Moon-of-Fulgora, lilys-cubeine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["uranium-cannon-shell"] then
    local item = data.raw.item["uranium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "uranium-cannon-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "uranium-cannon-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PLUTONIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item plutonium-cannon-shell
-- Fixes: CONFLICT_ITEM_PLUTONIUM-CANNON-SHELL


-- Generic compatibility patch for plutonium-cannon-shell
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["plutonium-cannon-shell"] then
    local item = data.raw.item["plutonium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "plutonium-cannon-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "plutonium-cannon-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EXPLOSIVE-PLUTONIUM-CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item explosive-plutonium-cannon-shell
-- Fixes: CONFLICT_ITEM_EXPLOSIVE-PLUTONIUM-CANNON-SHELL


-- Generic compatibility patch for explosive-plutonium-cannon-shell
-- Fixes conflict between: Cerys-Moon-of-Fulgora, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["explosive-plutonium-cannon-shell"] then
    local item = data.raw.item["explosive-plutonium-cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "explosive-plutonium-cannon-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "explosive-plutonium-cannon-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_HOLMIUM-ORE_GENERIC
-- Description: Generic compatibility patch for item holmium-ore
-- Fixes: CONFLICT_ITEM_HOLMIUM-ORE


-- Generic compatibility patch for holmium-ore
-- Fixes conflict between: fulgora-coralmium-agriculture, Spaghetorio, rubia, Cerys-Moon-of-Fulgora, quirkycat_recycle, crushing-industry, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["holmium-ore"] then
    local item = data.raw.item["holmium-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "holmium-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "holmium-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LITHIUM_GENERIC
-- Description: Generic compatibility patch for item lithium
-- Fixes: CONFLICT_ITEM_LITHIUM


-- Generic compatibility patch for lithium
-- Fixes conflict between: Cerys-Moon-of-Fulgora, crushing-industry, quirkycat_recycle, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lithium"] then
    local item = data.raw.item["lithium"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lithium-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lithium-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ARTILLERY-SHELL_GENERIC
-- Description: Generic compatibility patch for item artillery-shell
-- Fixes: CONFLICT_ITEM_ARTILLERY-SHELL


-- Generic compatibility patch for artillery-shell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2, Cerys-Moon-of-Fulgora, lilys-cubeine, StopgapNukes
-- Severity: MEDIUM
-- Type: item


if data.raw.item["artillery-shell"] then
    local item = data.raw.item["artillery-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "artillery-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "artillery-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPEED-MODULE_GENERIC
-- Description: Generic compatibility patch for item speed-module
-- Fixes: CONFLICT_ITEM_SPEED-MODULE


-- Generic compatibility patch for speed-module
-- Fixes conflict between: Cold_biters, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["speed-module"] then
    local item = data.raw.item["speed-module"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "speed-module-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "speed-module-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GOLD-PLATE_GENERIC
-- Description: Generic compatibility patch for item gold-plate
-- Fixes: CONFLICT_ITEM_GOLD-PLATE


-- Generic compatibility patch for gold-plate
-- Fixes conflict between: secretas, common-prototypes, metal-and-stars, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gold-plate"] then
    local item = data.raw.item["gold-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gold-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gold-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GOLD-CABLE_GENERIC
-- Description: Generic compatibility patch for item gold-cable
-- Fixes: CONFLICT_ITEM_GOLD-CABLE


-- Generic compatibility patch for gold-cable
-- Fixes conflict between: common-prototypes, metal-and-stars, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gold-cable"] then
    local item = data.raw.item["gold-cable"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gold-cable-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gold-cable-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NEODYMIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item neodymium-plate
-- Fixes: CONFLICT_ITEM_NEODYMIUM-PLATE


-- Generic compatibility patch for neodymium-plate
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["neodymium-plate"] then
    local item = data.raw.item["neodymium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "neodymium-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "neodymium-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GOLD-ORE_GENERIC
-- Description: Generic compatibility patch for item gold-ore
-- Fixes: CONFLICT_ITEM_GOLD-ORE


-- Generic compatibility patch for gold-ore
-- Fixes conflict between: secretas, common-prototypes, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["gold-ore"] then
    local item = data.raw.item["gold-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "gold-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "gold-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SILICA-SAND_GENERIC
-- Description: Generic compatibility patch for item silica-sand
-- Fixes: CONFLICT_ITEM_SILICA-SAND


-- Generic compatibility patch for silica-sand
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["silica-sand"] then
    local item = data.raw.item["silica-sand"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "silica-sand-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "silica-sand-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GLASS-PLATE_GENERIC
-- Description: Generic compatibility patch for item glass-plate
-- Fixes: CONFLICT_ITEM_GLASS-PLATE


-- Generic compatibility patch for glass-plate
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["glass-plate"] then
    local item = data.raw.item["glass-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "glass-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "glass-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_GLASS-BILLET_GENERIC
-- Description: Generic compatibility patch for item glass-billet
-- Fixes: CONFLICT_ITEM_GLASS-BILLET


-- Generic compatibility patch for glass-billet
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["glass-billet"] then
    local item = data.raw.item["glass-billet"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "glass-billet-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "glass-billet-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NEODYMIUM-ORE_GENERIC
-- Description: Generic compatibility patch for item neodymium-ore
-- Fixes: CONFLICT_ITEM_NEODYMIUM-ORE


-- Generic compatibility patch for neodymium-ore
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["neodymium-ore"] then
    local item = data.raw.item["neodymium-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "neodymium-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "neodymium-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_INVERTED-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item inverted-microcube
-- Fixes: CONFLICT_ITEM_INVERTED-MICROCUBE


-- Generic compatibility patch for inverted-microcube
-- Fixes conflict between: corrundum, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["inverted-microcube"] then
    local item = data.raw.item["inverted-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "inverted-microcube-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "inverted-microcube-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_INVERTED-DORMANT-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item inverted-dormant-microcube
-- Fixes: CONFLICT_ITEM_INVERTED-DORMANT-MICROCUBE


-- Generic compatibility patch for inverted-dormant-microcube
-- Fixes conflict between: corrundum, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["inverted-dormant-microcube"] then
    local item = data.raw.item["inverted-dormant-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "inverted-dormant-microcube-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "inverted-dormant-microcube-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BITER-EGG_GENERIC
-- Description: Generic compatibility patch for item biter-egg
-- Fixes: CONFLICT_ITEM_BITER-EGG


-- Generic compatibility patch for biter-egg
-- Fixes conflict between: Krastorio2-spaced-out, secretas, rubia, corrundum, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["biter-egg"] then
    local item = data.raw.item["biter-egg"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "biter-egg-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "biter-egg-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ROCKET_GENERIC
-- Description: Generic compatibility patch for item rocket
-- Fixes: CONFLICT_ITEM_ROCKET


-- Generic compatibility patch for rocket
-- Fixes conflict between: corrundum, secretas, StopgapNukes, lilys-cubeine
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rocket"] then
    local item = data.raw.item["rocket"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rocket-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rocket-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TUNGSTEN-CARBIDE_GENERIC
-- Description: Generic compatibility patch for item tungsten-carbide
-- Fixes: CONFLICT_ITEM_TUNGSTEN-CARBIDE


-- Generic compatibility patch for tungsten-carbide
-- Fixes conflict between: vulcanus-sulfuric-bacteria, Krastorio2-spaced-out, lignumis, lilys-cubeine, crushing-industry, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tungsten-carbide"] then
    local item = data.raw.item["tungsten-carbide"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tungsten-carbide-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tungsten-carbide-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TITANIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item titanium-plate
-- Fixes: CONFLICT_ITEM_TITANIUM-PLATE


-- Generic compatibility patch for titanium-plate
-- Fixes conflict between: Fluid-level-indicator, crushing-industry
-- Severity: MEDIUM
-- Type: item


if data.raw.item["titanium-plate"] then
    local item = data.raw.item["titanium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "titanium-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "titanium-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_ENERGIZED-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item energized-microcube
-- Fixes: CONFLICT_ITEM_ENERGIZED-MICROCUBE


-- Generic compatibility patch for energized-microcube
-- Fixes conflict between: cubium, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["energized-microcube"] then
    local item = data.raw.item["energized-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "energized-microcube-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "energized-microcube-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DORMANT-MICROCUBE_GENERIC
-- Description: Generic compatibility patch for item dormant-microcube
-- Fixes: CONFLICT_ITEM_DORMANT-MICROCUBE


-- Generic compatibility patch for dormant-microcube
-- Fixes conflict between: cubium, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["dormant-microcube"] then
    local item = data.raw.item["dormant-microcube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "dormant-microcube-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "dormant-microcube-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JELLY_GENERIC
-- Description: Generic compatibility patch for item jelly
-- Fixes: CONFLICT_ITEM_JELLY


-- Generic compatibility patch for jelly
-- Fixes conflict between: cubium, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jelly"] then
    local item = data.raw.item["jelly"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jelly-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jelly-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_RAIL_GENERIC
-- Description: Generic compatibility patch for item rail
-- Fixes: CONFLICT_ITEM_RAIL


-- Generic compatibility patch for rail
-- Fixes conflict between: rubia, foundry-restructuring, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["rail"] then
    local item = data.raw.item["rail"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "rail-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "rail-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_METALLURGIC-SCIENCE-PACK_GENERIC
-- Description: Generic compatibility patch for item metallurgic-science-pack
-- Fixes: CONFLICT_ITEM_METALLURGIC-SCIENCE-PACK


-- Generic compatibility patch for metallurgic-science-pack
-- Fixes conflict between: Spaghetorio, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["metallurgic-science-pack"] then
    local item = data.raw.item["metallurgic-science-pack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "metallurgic-science-pack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "metallurgic-science-pack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PROMETHIUM-ASTEROID-CHUNK_GENERIC
-- Description: Generic compatibility patch for item promethium-asteroid-chunk
-- Fixes: CONFLICT_ITEM_PROMETHIUM-ASTEROID-CHUNK


-- Generic compatibility patch for promethium-asteroid-chunk
-- Fixes conflict between: promethium-quality, slp-dyson-sphere-reworked, VoidProcessing, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["promethium-asteroid-chunk"] then
    local item = data.raw.item["promethium-asteroid-chunk"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "promethium-asteroid-chunk-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "promethium-asteroid-chunk-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TURBO-TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item turbo-transport-belt
-- Fixes: CONFLICT_ITEM_TURBO-TRANSPORT-BELT


-- Generic compatibility patch for turbo-transport-belt
-- Fixes conflict between: Krastorio2-spaced-out, cubium, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["turbo-transport-belt"] then
    local item = data.raw.item["turbo-transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "turbo-transport-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "turbo-transport-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TURBO-UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item turbo-underground-belt
-- Fixes: CONFLICT_ITEM_TURBO-UNDERGROUND-BELT


-- Generic compatibility patch for turbo-underground-belt
-- Fixes conflict between: Krastorio2-spaced-out, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["turbo-underground-belt"] then
    local item = data.raw.item["turbo-underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "turbo-underground-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "turbo-underground-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TURBO-SPLITTER_GENERIC
-- Description: Generic compatibility patch for item turbo-splitter
-- Fixes: CONFLICT_ITEM_TURBO-SPLITTER


-- Generic compatibility patch for turbo-splitter
-- Fixes conflict between: Krastorio2-spaced-out, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["turbo-splitter"] then
    local item = data.raw.item["turbo-splitter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "turbo-splitter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "turbo-splitter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FOUNDRY_GENERIC
-- Description: Generic compatibility patch for item foundry
-- Fixes: CONFLICT_ITEM_FOUNDRY


-- Generic compatibility patch for foundry
-- Fixes conflict between: Krastorio2-spaced-out, cubium
-- Severity: MEDIUM
-- Type: item


if data.raw.item["foundry"] then
    local item = data.raw.item["foundry"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "foundry-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "foundry-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PIPE-TO-GROUND_GENERIC
-- Description: Generic compatibility patch for item pipe-to-ground
-- Fixes: CONFLICT_ITEM_PIPE-TO-GROUND


-- Generic compatibility patch for pipe-to-ground
-- Fixes conflict between: dea-dia-system, rubia, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["pipe-to-ground"] then
    local item = data.raw.item["pipe-to-ground"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "pipe-to-ground-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "pipe-to-ground-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_EFFICIENCY-MODULE_GENERIC
-- Description: Generic compatibility patch for item efficiency-module
-- Fixes: CONFLICT_ITEM_EFFICIENCY-MODULE


-- Generic compatibility patch for efficiency-module
-- Fixes conflict between: Electric Furnaces, Hovercrafts
-- Severity: MEDIUM
-- Type: item


if data.raw.item["efficiency-module"] then
    local item = data.raw.item["efficiency-module"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "efficiency-module-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "efficiency-module-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SMALL-LAMP_GENERIC
-- Description: Generic compatibility patch for item small-lamp
-- Fixes: CONFLICT_ITEM_SMALL-LAMP


-- Generic compatibility patch for small-lamp
-- Fixes conflict between: terrapalus, Fluid-level-indicator, Krastorio2-spaced-out, secretas, Krastorio2, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["small-lamp"] then
    local item = data.raw.item["small-lamp"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "small-lamp-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "small-lamp-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STEEL-PIPE_GENERIC
-- Description: Generic compatibility patch for item kr-steel-pipe
-- Fixes: CONFLICT_ITEM_KR-STEEL-PIPE


-- Generic compatibility patch for kr-steel-pipe
-- Fixes conflict between: Fluid-level-indicator, Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-steel-pipe"] then
    local item = data.raw.item["kr-steel-pipe"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-steel-pipe-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-steel-pipe-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STRONGBOX_GENERIC
-- Description: Generic compatibility patch for item kr-strongbox
-- Fixes: CONFLICT_ITEM_KR-STRONGBOX


-- Generic compatibility patch for kr-strongbox
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-strongbox"] then
    local item = data.raw.item["kr-strongbox"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-strongbox-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-strongbox-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ACTIVE-PROVIDER-STRONGBOX_GENERIC
-- Description: Generic compatibility patch for item kr-active-provider-strongbox
-- Fixes: CONFLICT_ITEM_KR-ACTIVE-PROVIDER-STRONGBOX


-- Generic compatibility patch for kr-active-provider-strongbox
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-active-provider-strongbox"] then
    local item = data.raw.item["kr-active-provider-strongbox"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-active-provider-strongbox-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-active-provider-strongbox-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-WAREHOUSE_GENERIC
-- Description: Generic compatibility patch for item kr-warehouse
-- Fixes: CONFLICT_ITEM_KR-WAREHOUSE


-- Generic compatibility patch for kr-warehouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-warehouse"] then
    local item = data.raw.item["kr-warehouse"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-warehouse-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-warehouse-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ACTIVE-PROVIDER-WAREHOUSE_GENERIC
-- Description: Generic compatibility patch for item kr-active-provider-warehouse
-- Fixes: CONFLICT_ITEM_KR-ACTIVE-PROVIDER-WAREHOUSE


-- Generic compatibility patch for kr-active-provider-warehouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-active-provider-warehouse"] then
    local item = data.raw.item["kr-active-provider-warehouse"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-active-provider-warehouse-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-active-provider-warehouse-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSIUM-BEAM_GENERIC
-- Description: Generic compatibility patch for item kr-imersium-beam
-- Fixes: CONFLICT_ITEM_KR-IMERSIUM-BEAM


-- Generic compatibility patch for kr-imersium-beam
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersium-beam"] then
    local item = data.raw.item["kr-imersium-beam"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersium-beam-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersium-beam-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-AI-CORE_GENERIC
-- Description: Generic compatibility patch for item kr-ai-core
-- Fixes: CONFLICT_ITEM_KR-AI-CORE


-- Generic compatibility patch for kr-ai-core
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-ai-core"] then
    local item = data.raw.item["kr-ai-core"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-ai-core-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-ai-core-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-ASSEMBLING-MACHINE_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-assembling-machine
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-ASSEMBLING-MACHINE


-- Generic compatibility patch for kr-advanced-assembling-machine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-assembling-machine"] then
    local item = data.raw.item["kr-advanced-assembling-machine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-assembling-machine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-assembling-machine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-RARE-METALS_GENERIC
-- Description: Generic compatibility patch for item kr-rare-metals
-- Fixes: CONFLICT_ITEM_KR-RARE-METALS


-- Generic compatibility patch for kr-rare-metals
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-rare-metals"] then
    local item = data.raw.item["kr-rare-metals"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-rare-metals-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-rare-metals-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ELECTRONIC-COMPONENTS_GENERIC
-- Description: Generic compatibility patch for item kr-electronic-components
-- Fixes: CONFLICT_ITEM_KR-ELECTRONIC-COMPONENTS


-- Generic compatibility patch for kr-electronic-components
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-electronic-components"] then
    local item = data.raw.item["kr-electronic-components"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-electronic-components-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-electronic-components-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-CHEMICAL-PLANT_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-chemical-plant
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-CHEMICAL-PLANT


-- Generic compatibility patch for kr-advanced-chemical-plant
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-chemical-plant"] then
    local item = data.raw.item["kr-advanced-chemical-plant"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-chemical-plant-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-chemical-plant-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENERGY-CONTROL-UNIT_GENERIC
-- Description: Generic compatibility patch for item kr-energy-control-unit
-- Fixes: CONFLICT_ITEM_KR-ENERGY-CONTROL-UNIT


-- Generic compatibility patch for kr-energy-control-unit
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-energy-control-unit"] then
    local item = data.raw.item["kr-energy-control-unit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-energy-control-unit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-energy-control-unit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-FURNACE_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-furnace
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-FURNACE


-- Generic compatibility patch for kr-advanced-furnace
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-furnace"] then
    local item = data.raw.item["kr-advanced-furnace"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-furnace-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-furnace-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STEEL-BEAM_GENERIC
-- Description: Generic compatibility patch for item kr-steel-beam
-- Fixes: CONFLICT_ITEM_KR-STEEL-BEAM


-- Generic compatibility patch for kr-steel-beam
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-steel-beam"] then
    local item = data.raw.item["kr-steel-beam"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-steel-beam-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-steel-beam-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-LAB_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-lab
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-LAB


-- Generic compatibility patch for kr-advanced-lab
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-lab"] then
    local item = data.raw.item["kr-advanced-lab"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-lab-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-lab-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-EXPRESS-LOADER_GENERIC
-- Description: Generic compatibility patch for item kr-express-loader
-- Fixes: CONFLICT_ITEM_KR-EXPRESS-LOADER


-- Generic compatibility patch for kr-express-loader
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-express-loader"] then
    local item = data.raw.item["kr-express-loader"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-express-loader-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-express-loader-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-LOADER_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-loader
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-LOADER


-- Generic compatibility patch for kr-advanced-loader
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-loader"] then
    local item = data.raw.item["kr-advanced-loader"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-loader-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-loader-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-RADAR_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-radar
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-RADAR


-- Generic compatibility patch for kr-advanced-radar
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-radar"] then
    local item = data.raw.item["kr-advanced-radar"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-radar-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-radar-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSITE-CRYSTAL_GENERIC
-- Description: Generic compatibility patch for item kr-imersite-crystal
-- Fixes: CONFLICT_ITEM_KR-IMERSITE-CRYSTAL


-- Generic compatibility patch for kr-imersite-crystal
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersite-crystal"] then
    local item = data.raw.item["kr-imersite-crystal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersite-crystal-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersite-crystal-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-SOLAR-PANEL_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-solar-panel
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-SOLAR-PANEL


-- Generic compatibility patch for kr-advanced-solar-panel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-solar-panel"] then
    local item = data.raw.item["kr-advanced-solar-panel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-solar-panel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-solar-panel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STEEL-GEAR-WHEEL_GENERIC
-- Description: Generic compatibility patch for item kr-steel-gear-wheel
-- Fixes: CONFLICT_ITEM_KR-STEEL-GEAR-WHEEL


-- Generic compatibility patch for kr-steel-gear-wheel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-steel-gear-wheel"] then
    local item = data.raw.item["kr-steel-gear-wheel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-steel-gear-wheel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-steel-gear-wheel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-STEAM-TURBINE_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-steam-turbine
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-STEAM-TURBINE


-- Generic compatibility patch for kr-advanced-steam-turbine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-steam-turbine"] then
    local item = data.raw.item["kr-advanced-steam-turbine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-steam-turbine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-steam-turbine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-AIR-PURIFIER_GENERIC
-- Description: Generic compatibility patch for item kr-air-purifier
-- Fixes: CONFLICT_ITEM_KR-AIR-PURIFIER


-- Generic compatibility patch for kr-air-purifier
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-air-purifier"] then
    local item = data.raw.item["kr-air-purifier"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-air-purifier-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-air-purifier-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSIUM-PLATE_GENERIC
-- Description: Generic compatibility patch for item kr-imersium-plate
-- Fixes: CONFLICT_ITEM_KR-IMERSIUM-PLATE


-- Generic compatibility patch for kr-imersium-plate
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersium-plate"] then
    local item = data.raw.item["kr-imersium-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersium-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersium-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTIMATTER-REACTOR_GENERIC
-- Description: Generic compatibility patch for item kr-antimatter-reactor
-- Fixes: CONFLICT_ITEM_KR-ANTIMATTER-REACTOR


-- Generic compatibility patch for kr-antimatter-reactor
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-antimatter-reactor"] then
    local item = data.raw.item["kr-antimatter-reactor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-antimatter-reactor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-antimatter-reactor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ATMOSPHERIC-CONDENSER_GENERIC
-- Description: Generic compatibility patch for item kr-atmospheric-condenser
-- Fixes: CONFLICT_ITEM_KR-ATMOSPHERIC-CONDENSER


-- Generic compatibility patch for kr-atmospheric-condenser
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-atmospheric-condenser"] then
    local item = data.raw.item["kr-atmospheric-condenser"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-atmospheric-condenser-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-atmospheric-condenser-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSIUM-GEAR-WHEEL_GENERIC
-- Description: Generic compatibility patch for item kr-imersium-gear-wheel
-- Fixes: CONFLICT_ITEM_KR-IMERSIUM-GEAR-WHEEL


-- Generic compatibility patch for kr-imersium-gear-wheel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersium-gear-wheel"] then
    local item = data.raw.item["kr-imersium-gear-wheel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersium-gear-wheel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersium-gear-wheel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BIG-ROBOPORT_GENERIC
-- Description: Generic compatibility patch for item kr-big-roboport
-- Fixes: CONFLICT_ITEM_KR-BIG-ROBOPORT


-- Generic compatibility patch for kr-big-roboport
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-big-roboport"] then
    local item = data.raw.item["kr-big-roboport"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-big-roboport-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-big-roboport-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BIG-STORAGE-TANK_GENERIC
-- Description: Generic compatibility patch for item kr-big-storage-tank
-- Fixes: CONFLICT_ITEM_KR-BIG-STORAGE-TANK


-- Generic compatibility patch for kr-big-storage-tank
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-big-storage-tank"] then
    local item = data.raw.item["kr-big-storage-tank"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-big-storage-tank-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-big-storage-tank-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BIOMASS_GENERIC
-- Description: Generic compatibility patch for item kr-biomass
-- Fixes: CONFLICT_ITEM_KR-BIOMASS


-- Generic compatibility patch for kr-biomass
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-biomass"] then
    local item = data.raw.item["kr-biomass"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-biomass-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-biomass-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IRON-BEAM_GENERIC
-- Description: Generic compatibility patch for item kr-iron-beam
-- Fixes: CONFLICT_ITEM_KR-IRON-BEAM


-- Generic compatibility patch for kr-iron-beam
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-iron-beam"] then
    local item = data.raw.item["kr-iron-beam"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-iron-beam-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-iron-beam-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-GLASS_GENERIC
-- Description: Generic compatibility patch for item kr-glass
-- Fixes: CONFLICT_ITEM_KR-GLASS


-- Generic compatibility patch for kr-glass
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-glass"] then
    local item = data.raw.item["kr-glass"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-glass-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-glass-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BIO-LAB_GENERIC
-- Description: Generic compatibility patch for item kr-bio-lab
-- Fixes: CONFLICT_ITEM_KR-BIO-LAB


-- Generic compatibility patch for kr-bio-lab
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-bio-lab"] then
    local item = data.raw.item["kr-bio-lab"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-bio-lab-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-bio-lab-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BUFFER-STRONGBOX_GENERIC
-- Description: Generic compatibility patch for item kr-buffer-strongbox
-- Fixes: CONFLICT_ITEM_KR-BUFFER-STRONGBOX


-- Generic compatibility patch for kr-buffer-strongbox
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-buffer-strongbox"] then
    local item = data.raw.item["kr-buffer-strongbox"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-buffer-strongbox-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-buffer-strongbox-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BUFFER-WAREHOUSE_GENERIC
-- Description: Generic compatibility patch for item kr-buffer-warehouse
-- Fixes: CONFLICT_ITEM_KR-BUFFER-WAREHOUSE


-- Generic compatibility patch for kr-buffer-warehouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-buffer-warehouse"] then
    local item = data.raw.item["kr-buffer-warehouse"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-buffer-warehouse-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-buffer-warehouse-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-AUTOMATION-CORE_GENERIC
-- Description: Generic compatibility patch for item kr-automation-core
-- Fixes: CONFLICT_ITEM_KR-AUTOMATION-CORE


-- Generic compatibility patch for kr-automation-core
-- Fixes conflict between: Krastorio2-spaced-out, rubia, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-automation-core"] then
    local item = data.raw.item["kr-automation-core"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-automation-core-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-automation-core-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-CRUSHER_GENERIC
-- Description: Generic compatibility patch for item kr-crusher
-- Fixes: CONFLICT_ITEM_KR-CRUSHER


-- Generic compatibility patch for kr-crusher
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-crusher"] then
    local item = data.raw.item["kr-crusher"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-crusher-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-crusher-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ELECTRIC-MINING-DRILL-MK2_GENERIC
-- Description: Generic compatibility patch for item kr-electric-mining-drill-mk2
-- Fixes: CONFLICT_ITEM_KR-ELECTRIC-MINING-DRILL-MK2


-- Generic compatibility patch for kr-electric-mining-drill-mk2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-electric-mining-drill-mk2"] then
    local item = data.raw.item["kr-electric-mining-drill-mk2"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-electric-mining-drill-mk2-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-electric-mining-drill-mk2-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ELECTRIC-MINING-DRILL-MK3_GENERIC
-- Description: Generic compatibility patch for item kr-electric-mining-drill-mk3
-- Fixes: CONFLICT_ITEM_KR-ELECTRIC-MINING-DRILL-MK3


-- Generic compatibility patch for kr-electric-mining-drill-mk3
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-electric-mining-drill-mk3"] then
    local item = data.raw.item["kr-electric-mining-drill-mk3"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-electric-mining-drill-mk3-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-electric-mining-drill-mk3-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ELECTROLYSIS-PLANT_GENERIC
-- Description: Generic compatibility patch for item kr-electrolysis-plant
-- Fixes: CONFLICT_ITEM_KR-ELECTROLYSIS-PLANT


-- Generic compatibility patch for kr-electrolysis-plant
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-electrolysis-plant"] then
    local item = data.raw.item["kr-electrolysis-plant"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-electrolysis-plant-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-electrolysis-plant-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENERGY-STORAGE_GENERIC
-- Description: Generic compatibility patch for item kr-energy-storage
-- Fixes: CONFLICT_ITEM_KR-ENERGY-STORAGE


-- Generic compatibility patch for kr-energy-storage
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-energy-storage"] then
    local item = data.raw.item["kr-energy-storage"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-energy-storage-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-energy-storage-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FAST-LOADER_GENERIC
-- Description: Generic compatibility patch for item kr-fast-loader
-- Fixes: CONFLICT_ITEM_KR-FAST-LOADER


-- Generic compatibility patch for kr-fast-loader
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-fast-loader"] then
    local item = data.raw.item["kr-fast-loader"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-fast-loader-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-fast-loader-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-LOADER_GENERIC
-- Description: Generic compatibility patch for item kr-loader
-- Fixes: CONFLICT_ITEM_KR-LOADER


-- Generic compatibility patch for kr-loader
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-loader"] then
    local item = data.raw.item["kr-loader"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-loader-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-loader-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FILTRATION-PLANT_GENERIC
-- Description: Generic compatibility patch for item kr-filtration-plant
-- Fixes: CONFLICT_ITEM_KR-FILTRATION-PLANT


-- Generic compatibility patch for kr-filtration-plant
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-filtration-plant"] then
    local item = data.raw.item["kr-filtration-plant"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-filtration-plant-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-filtration-plant-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FLARE-STACK_GENERIC
-- Description: Generic compatibility patch for item kr-flare-stack
-- Fixes: CONFLICT_ITEM_KR-FLARE-STACK


-- Generic compatibility patch for kr-flare-stack
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-flare-stack"] then
    local item = data.raw.item["kr-flare-stack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-flare-stack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-flare-stack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FUEL-REFINERY_GENERIC
-- Description: Generic compatibility patch for item kr-fuel-refinery
-- Fixes: CONFLICT_ITEM_KR-FUEL-REFINERY


-- Generic compatibility patch for kr-fuel-refinery
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-fuel-refinery"] then
    local item = data.raw.item["kr-fuel-refinery"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-fuel-refinery-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-fuel-refinery-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FUSION-REACTOR_GENERIC
-- Description: Generic compatibility patch for item kr-fusion-reactor
-- Fixes: CONFLICT_ITEM_KR-FUSION-REACTOR


-- Generic compatibility patch for kr-fusion-reactor
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-fusion-reactor"] then
    local item = data.raw.item["kr-fusion-reactor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-fusion-reactor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-fusion-reactor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-GAS-POWER-STATION_GENERIC
-- Description: Generic compatibility patch for item kr-gas-power-station
-- Fixes: CONFLICT_ITEM_KR-GAS-POWER-STATION


-- Generic compatibility patch for kr-gas-power-station
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-gas-power-station"] then
    local item = data.raw.item["kr-gas-power-station"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-gas-power-station-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-gas-power-station-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-GREENHOUSE_GENERIC
-- Description: Generic compatibility patch for item kr-greenhouse
-- Fixes: CONFLICT_ITEM_KR-GREENHOUSE


-- Generic compatibility patch for kr-greenhouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-greenhouse"] then
    local item = data.raw.item["kr-greenhouse"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-greenhouse-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-greenhouse-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-HUGE-STORAGE-TANK_GENERIC
-- Description: Generic compatibility patch for item kr-huge-storage-tank
-- Fixes: CONFLICT_ITEM_KR-HUGE-STORAGE-TANK


-- Generic compatibility patch for kr-huge-storage-tank
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-huge-storage-tank"] then
    local item = data.raw.item["kr-huge-storage-tank"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-huge-storage-tank-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-huge-storage-tank-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-INTERGALACTIC-TRANSCEIVER_GENERIC
-- Description: Generic compatibility patch for item kr-intergalactic-transceiver
-- Fixes: CONFLICT_ITEM_KR-INTERGALACTIC-TRANSCEIVER


-- Generic compatibility patch for kr-intergalactic-transceiver
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-intergalactic-transceiver"] then
    local item = data.raw.item["kr-intergalactic-transceiver"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-intergalactic-transceiver-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-intergalactic-transceiver-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-LASER-ARTILLERY-TURRET_GENERIC
-- Description: Generic compatibility patch for item kr-laser-artillery-turret
-- Fixes: CONFLICT_ITEM_KR-LASER-ARTILLERY-TURRET


-- Generic compatibility patch for kr-laser-artillery-turret
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-laser-artillery-turret"] then
    local item = data.raw.item["kr-laser-artillery-turret"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-laser-artillery-turret-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-laser-artillery-turret-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-LOGO_GENERIC
-- Description: Generic compatibility patch for item kr-logo
-- Fixes: CONFLICT_ITEM_KR-LOGO


-- Generic compatibility patch for kr-logo
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-logo"] then
    local item = data.raw.item["kr-logo"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-logo-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-logo-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-MATTER-ASSOCIATOR_GENERIC
-- Description: Generic compatibility patch for item kr-matter-associator
-- Fixes: CONFLICT_ITEM_KR-MATTER-ASSOCIATOR


-- Generic compatibility patch for kr-matter-associator
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-matter-associator"] then
    local item = data.raw.item["kr-matter-associator"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-matter-associator-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-matter-associator-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-MATTER-PLANT_GENERIC
-- Description: Generic compatibility patch for item kr-matter-plant
-- Fixes: CONFLICT_ITEM_KR-MATTER-PLANT


-- Generic compatibility patch for kr-matter-plant
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-matter-plant"] then
    local item = data.raw.item["kr-matter-plant"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-matter-plant-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-matter-plant-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-MINERAL-WATER-PUMPJACK_GENERIC
-- Description: Generic compatibility patch for item kr-mineral-water-pumpjack
-- Fixes: CONFLICT_ITEM_KR-MINERAL-WATER-PUMPJACK


-- Generic compatibility patch for kr-mineral-water-pumpjack
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-mineral-water-pumpjack"] then
    local item = data.raw.item["kr-mineral-water-pumpjack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-mineral-water-pumpjack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-mineral-water-pumpjack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-PASSIVE-PROVIDER-STRONGBOX_GENERIC
-- Description: Generic compatibility patch for item kr-passive-provider-strongbox
-- Fixes: CONFLICT_ITEM_KR-PASSIVE-PROVIDER-STRONGBOX


-- Generic compatibility patch for kr-passive-provider-strongbox
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-passive-provider-strongbox"] then
    local item = data.raw.item["kr-passive-provider-strongbox"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-passive-provider-strongbox-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-passive-provider-strongbox-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-PASSIVE-PROVIDER-WAREHOUSE_GENERIC
-- Description: Generic compatibility patch for item kr-passive-provider-warehouse
-- Fixes: CONFLICT_ITEM_KR-PASSIVE-PROVIDER-WAREHOUSE


-- Generic compatibility patch for kr-passive-provider-warehouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-passive-provider-warehouse"] then
    local item = data.raw.item["kr-passive-provider-warehouse"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-passive-provider-warehouse-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-passive-provider-warehouse-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-TELEPORTATION-GPS-MODULE_GENERIC
-- Description: Generic compatibility patch for item kr-teleportation-gps-module
-- Fixes: CONFLICT_ITEM_KR-TELEPORTATION-GPS-MODULE


-- Generic compatibility patch for kr-teleportation-gps-module
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-teleportation-gps-module"] then
    local item = data.raw.item["kr-teleportation-gps-module"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-teleportation-gps-module-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-teleportation-gps-module-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-PLANETARY-TELEPORTER_GENERIC
-- Description: Generic compatibility patch for item kr-planetary-teleporter
-- Fixes: CONFLICT_ITEM_KR-PLANETARY-TELEPORTER


-- Generic compatibility patch for kr-planetary-teleporter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-planetary-teleporter"] then
    local item = data.raw.item["kr-planetary-teleporter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-planetary-teleporter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-planetary-teleporter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-QUANTUM-COMPUTER_GENERIC
-- Description: Generic compatibility patch for item kr-quantum-computer
-- Fixes: CONFLICT_ITEM_KR-QUANTUM-COMPUTER


-- Generic compatibility patch for kr-quantum-computer
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-quantum-computer"] then
    local item = data.raw.item["kr-quantum-computer"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-quantum-computer-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-quantum-computer-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-QUARRY-DRILL_GENERIC
-- Description: Generic compatibility patch for item kr-quarry-drill
-- Fixes: CONFLICT_ITEM_KR-QUARRY-DRILL


-- Generic compatibility patch for kr-quarry-drill
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-quarry-drill"] then
    local item = data.raw.item["kr-quarry-drill"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-quarry-drill-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-quarry-drill-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-RAILGUN-TURRET_GENERIC
-- Description: Generic compatibility patch for item kr-railgun-turret
-- Fixes: CONFLICT_ITEM_KR-RAILGUN-TURRET


-- Generic compatibility patch for kr-railgun-turret
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-railgun-turret"] then
    local item = data.raw.item["kr-railgun-turret"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-railgun-turret-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-railgun-turret-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-REQUESTER-STRONGBOX_GENERIC
-- Description: Generic compatibility patch for item kr-requester-strongbox
-- Fixes: CONFLICT_ITEM_KR-REQUESTER-STRONGBOX


-- Generic compatibility patch for kr-requester-strongbox
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-requester-strongbox"] then
    local item = data.raw.item["kr-requester-strongbox"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-requester-strongbox-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-requester-strongbox-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-REQUESTER-WAREHOUSE_GENERIC
-- Description: Generic compatibility patch for item kr-requester-warehouse
-- Fixes: CONFLICT_ITEM_KR-REQUESTER-WAREHOUSE


-- Generic compatibility patch for kr-requester-warehouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-requester-warehouse"] then
    local item = data.raw.item["kr-requester-warehouse"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-requester-warehouse-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-requester-warehouse-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-RESEARCH-SERVER_GENERIC
-- Description: Generic compatibility patch for item kr-research-server
-- Fixes: CONFLICT_ITEM_KR-RESEARCH-SERVER


-- Generic compatibility patch for kr-research-server
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-research-server"] then
    local item = data.raw.item["kr-research-server"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-research-server-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-research-server-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ROCKET-TURRET_GENERIC
-- Description: Generic compatibility patch for item kr-rocket-turret
-- Fixes: CONFLICT_ITEM_KR-ROCKET-TURRET


-- Generic compatibility patch for kr-rocket-turret
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-rocket-turret"] then
    local item = data.raw.item["kr-rocket-turret"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-rocket-turret-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-rocket-turret-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SENTINEL_GENERIC
-- Description: Generic compatibility patch for item kr-sentinel
-- Fixes: CONFLICT_ITEM_KR-SENTINEL


-- Generic compatibility patch for kr-sentinel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-sentinel"] then
    local item = data.raw.item["kr-sentinel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-sentinel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-sentinel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SHELTER-PLUS_GENERIC
-- Description: Generic compatibility patch for item kr-shelter-plus
-- Fixes: CONFLICT_ITEM_KR-SHELTER-PLUS


-- Generic compatibility patch for kr-shelter-plus
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-shelter-plus"] then
    local item = data.raw.item["kr-shelter-plus"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-shelter-plus-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-shelter-plus-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SHELTER_GENERIC
-- Description: Generic compatibility patch for item kr-shelter
-- Fixes: CONFLICT_ITEM_KR-SHELTER


-- Generic compatibility patch for kr-shelter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-shelter"] then
    local item = data.raw.item["kr-shelter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-shelter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-shelter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BEACON_GENERIC
-- Description: Generic compatibility patch for item beacon
-- Fixes: CONFLICT_ITEM_BEACON


-- Generic compatibility patch for beacon
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["beacon"] then
    local item = data.raw.item["beacon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "beacon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "beacon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SINGULARITY-BEACON_GENERIC
-- Description: Generic compatibility patch for item kr-singularity-beacon
-- Fixes: CONFLICT_ITEM_KR-SINGULARITY-BEACON


-- Generic compatibility patch for kr-singularity-beacon
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-singularity-beacon"] then
    local item = data.raw.item["kr-singularity-beacon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-singularity-beacon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-singularity-beacon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SINGULARITY-LAB_GENERIC
-- Description: Generic compatibility patch for item kr-singularity-lab
-- Fixes: CONFLICT_ITEM_KR-SINGULARITY-LAB


-- Generic compatibility patch for kr-singularity-lab
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-singularity-lab"] then
    local item = data.raw.item["kr-singularity-lab"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-singularity-lab-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-singularity-lab-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SMALL-ROBOPORT_GENERIC
-- Description: Generic compatibility patch for item kr-small-roboport
-- Fixes: CONFLICT_ITEM_KR-SMALL-ROBOPORT


-- Generic compatibility patch for kr-small-roboport
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-small-roboport"] then
    local item = data.raw.item["kr-small-roboport"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-small-roboport-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-small-roboport-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STABILIZER-CHARGING-STATION_GENERIC
-- Description: Generic compatibility patch for item kr-stabilizer-charging-station
-- Fixes: CONFLICT_ITEM_KR-STABILIZER-CHARGING-STATION


-- Generic compatibility patch for kr-stabilizer-charging-station
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-stabilizer-charging-station"] then
    local item = data.raw.item["kr-stabilizer-charging-station"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-stabilizer-charging-station-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-stabilizer-charging-station-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STEEL-PIPE-TO-GROUND_GENERIC
-- Description: Generic compatibility patch for item kr-steel-pipe-to-ground
-- Fixes: CONFLICT_ITEM_KR-STEEL-PIPE-TO-GROUND


-- Generic compatibility patch for kr-steel-pipe-to-ground
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-steel-pipe-to-ground"] then
    local item = data.raw.item["kr-steel-pipe-to-ground"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-steel-pipe-to-ground-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-steel-pipe-to-ground-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STEEL-PUMP_GENERIC
-- Description: Generic compatibility patch for item kr-steel-pump
-- Fixes: CONFLICT_ITEM_KR-STEEL-PUMP


-- Generic compatibility patch for kr-steel-pump
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-steel-pump"] then
    local item = data.raw.item["kr-steel-pump"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-steel-pump-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-steel-pump-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STORAGE-STRONGBOX_GENERIC
-- Description: Generic compatibility patch for item kr-storage-strongbox
-- Fixes: CONFLICT_ITEM_KR-STORAGE-STRONGBOX


-- Generic compatibility patch for kr-storage-strongbox
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-storage-strongbox"] then
    local item = data.raw.item["kr-storage-strongbox"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-storage-strongbox-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-storage-strongbox-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-STORAGE-WAREHOUSE_GENERIC
-- Description: Generic compatibility patch for item kr-storage-warehouse
-- Fixes: CONFLICT_ITEM_KR-STORAGE-WAREHOUSE


-- Generic compatibility patch for kr-storage-warehouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-storage-warehouse"] then
    local item = data.raw.item["kr-storage-warehouse"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-storage-warehouse-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-storage-warehouse-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-INSERTER-PARTS_GENERIC
-- Description: Generic compatibility patch for item kr-inserter-parts
-- Fixes: CONFLICT_ITEM_KR-INSERTER-PARTS


-- Generic compatibility patch for kr-inserter-parts
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-inserter-parts"] then
    local item = data.raw.item["kr-inserter-parts"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-inserter-parts-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-inserter-parts-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_STACK-INSERTER_GENERIC
-- Description: Generic compatibility patch for item stack-inserter
-- Fixes: CONFLICT_ITEM_STACK-INSERTER


-- Generic compatibility patch for stack-inserter
-- Fixes conflict between: Krastorio2-spaced-out, long_stack_inserter
-- Severity: MEDIUM
-- Type: item


if data.raw.item["stack-inserter"] then
    local item = data.raw.item["stack-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "stack-inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "stack-inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-INSERTER_GENERIC
-- Description: Generic compatibility patch for item kr-superior-inserter
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-INSERTER


-- Generic compatibility patch for kr-superior-inserter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-inserter"] then
    local item = data.raw.item["kr-superior-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-TRANSPORT-BELT_GENERIC
-- Description: Generic compatibility patch for item kr-superior-transport-belt
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-TRANSPORT-BELT


-- Generic compatibility patch for kr-superior-transport-belt
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-transport-belt"] then
    local item = data.raw.item["kr-superior-transport-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-transport-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-transport-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-LOADER_GENERIC
-- Description: Generic compatibility patch for item kr-superior-loader
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-LOADER


-- Generic compatibility patch for kr-superior-loader
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-loader"] then
    local item = data.raw.item["kr-superior-loader"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-loader-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-loader-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-LONG-INSERTER_GENERIC
-- Description: Generic compatibility patch for item kr-superior-long-inserter
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-LONG-INSERTER


-- Generic compatibility patch for kr-superior-long-inserter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-long-inserter"] then
    local item = data.raw.item["kr-superior-long-inserter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-long-inserter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-long-inserter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-SPLITTER_GENERIC
-- Description: Generic compatibility patch for item kr-superior-splitter
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-SPLITTER


-- Generic compatibility patch for kr-superior-splitter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-splitter"] then
    local item = data.raw.item["kr-superior-splitter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-splitter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-splitter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-SUBSTATION_GENERIC
-- Description: Generic compatibility patch for item kr-superior-substation
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-SUBSTATION


-- Generic compatibility patch for kr-superior-substation
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-substation"] then
    local item = data.raw.item["kr-superior-substation"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-substation-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-substation-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-UNDERGROUND-BELT_GENERIC
-- Description: Generic compatibility patch for item kr-superior-underground-belt
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-UNDERGROUND-BELT


-- Generic compatibility patch for kr-superior-underground-belt
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-underground-belt"] then
    local item = data.raw.item["kr-superior-underground-belt"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-underground-belt-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-underground-belt-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-TESLA-COIL_GENERIC
-- Description: Generic compatibility patch for item kr-tesla-coil
-- Fixes: CONFLICT_ITEM_KR-TESLA-COIL


-- Generic compatibility patch for kr-tesla-coil
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-tesla-coil"] then
    local item = data.raw.item["kr-tesla-coil"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-tesla-coil-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-tesla-coil-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-WIND-TURBINE_GENERIC
-- Description: Generic compatibility patch for item kr-wind-turbine
-- Fixes: CONFLICT_ITEM_KR-WIND-TURBINE


-- Generic compatibility patch for kr-wind-turbine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-wind-turbine"] then
    local item = data.raw.item["kr-wind-turbine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-wind-turbine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-wind-turbine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADDITIONAL-ENGINE-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-additional-engine-equipment
-- Fixes: CONFLICT_ITEM_KR-ADDITIONAL-ENGINE-EQUIPMENT


-- Generic compatibility patch for kr-additional-engine-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-additional-engine-equipment"] then
    local item = data.raw.item["kr-additional-engine-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-additional-engine-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-additional-engine-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-ADDITIONAL-ENGINE-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-additional-engine-equipment
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-ADDITIONAL-ENGINE-EQUIPMENT


-- Generic compatibility patch for kr-advanced-additional-engine-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-additional-engine-equipment"] then
    local item = data.raw.item["kr-advanced-additional-engine-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-additional-engine-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-additional-engine-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-EXOSKELETON-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-exoskeleton-equipment
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-EXOSKELETON-EQUIPMENT


-- Generic compatibility patch for kr-advanced-exoskeleton-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-exoskeleton-equipment"] then
    local item = data.raw.item["kr-advanced-exoskeleton-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-exoskeleton-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-exoskeleton-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTIMATTER-REACTOR-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-antimatter-reactor-equipment
-- Fixes: CONFLICT_ITEM_KR-ANTIMATTER-REACTOR-EQUIPMENT


-- Generic compatibility patch for kr-antimatter-reactor-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-antimatter-reactor-equipment"] then
    local item = data.raw.item["kr-antimatter-reactor-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-antimatter-reactor-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-antimatter-reactor-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BIG-SOLAR-PANEL-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-big-solar-panel-equipment
-- Fixes: CONFLICT_ITEM_KR-BIG-SOLAR-PANEL-EQUIPMENT


-- Generic compatibility patch for kr-big-solar-panel-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-big-solar-panel-equipment"] then
    local item = data.raw.item["kr-big-solar-panel-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-big-solar-panel-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-big-solar-panel-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-SOLAR-PANEL-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-superior-solar-panel-equipment
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-SOLAR-PANEL-EQUIPMENT


-- Generic compatibility patch for kr-superior-solar-panel-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-solar-panel-equipment"] then
    local item = data.raw.item["kr-superior-solar-panel-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-solar-panel-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-solar-panel-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BIG-SUPERIOR-SOLAR-PANEL-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-big-superior-solar-panel-equipment
-- Fixes: CONFLICT_ITEM_KR-BIG-SUPERIOR-SOLAR-PANEL-EQUIPMENT


-- Generic compatibility patch for kr-big-superior-solar-panel-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-big-superior-solar-panel-equipment"] then
    local item = data.raw.item["kr-big-superior-solar-panel-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-big-superior-solar-panel-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-big-superior-solar-panel-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENERGY-ABSORBER-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-energy-absorber-equipment
-- Fixes: CONFLICT_ITEM_KR-ENERGY-ABSORBER-EQUIPMENT


-- Generic compatibility patch for kr-energy-absorber-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-energy-absorber-equipment"] then
    local item = data.raw.item["kr-energy-absorber-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-energy-absorber-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-energy-absorber-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-LITHIUM-SULFUR-BATTERY_GENERIC
-- Description: Generic compatibility patch for item kr-lithium-sulfur-battery
-- Fixes: CONFLICT_ITEM_KR-LITHIUM-SULFUR-BATTERY


-- Generic compatibility patch for kr-lithium-sulfur-battery
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-lithium-sulfur-battery"] then
    local item = data.raw.item["kr-lithium-sulfur-battery"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-lithium-sulfur-battery-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-lithium-sulfur-battery-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENERGY-SHIELD-MK3-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-energy-shield-mk3-equipment
-- Fixes: CONFLICT_ITEM_KR-ENERGY-SHIELD-MK3-EQUIPMENT


-- Generic compatibility patch for kr-energy-shield-mk3-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-energy-shield-mk3-equipment"] then
    local item = data.raw.item["kr-energy-shield-mk3-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-energy-shield-mk3-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-energy-shield-mk3-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENERGY-SHIELD-MK4-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-energy-shield-mk4-equipment
-- Fixes: CONFLICT_ITEM_KR-ENERGY-SHIELD-MK4-EQUIPMENT


-- Generic compatibility patch for kr-energy-shield-mk4-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-energy-shield-mk4-equipment"] then
    local item = data.raw.item["kr-energy-shield-mk4-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-energy-shield-mk4-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-energy-shield-mk4-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FUSION-REACTOR-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-fusion-reactor-equipment
-- Fixes: CONFLICT_ITEM_KR-FUSION-REACTOR-EQUIPMENT


-- Generic compatibility patch for kr-fusion-reactor-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-fusion-reactor-equipment"] then
    local item = data.raw.item["kr-fusion-reactor-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-fusion-reactor-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-fusion-reactor-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-PERSONAL-LASER-DEFENSE-MK2-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-personal-laser-defense-mk2-equipment
-- Fixes: CONFLICT_ITEM_KR-PERSONAL-LASER-DEFENSE-MK2-EQUIPMENT


-- Generic compatibility patch for kr-personal-laser-defense-mk2-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-personal-laser-defense-mk2-equipment"] then
    local item = data.raw.item["kr-personal-laser-defense-mk2-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-personal-laser-defense-mk2-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-personal-laser-defense-mk2-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-PERSONAL-LASER-DEFENSE-MK3-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-personal-laser-defense-mk3-equipment
-- Fixes: CONFLICT_ITEM_KR-PERSONAL-LASER-DEFENSE-MK3-EQUIPMENT


-- Generic compatibility patch for kr-personal-laser-defense-mk3-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-personal-laser-defense-mk3-equipment"] then
    local item = data.raw.item["kr-personal-laser-defense-mk3-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-personal-laser-defense-mk3-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-personal-laser-defense-mk3-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-PERSONAL-LASER-DEFENSE-MK4-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-personal-laser-defense-mk4-equipment
-- Fixes: CONFLICT_ITEM_KR-PERSONAL-LASER-DEFENSE-MK4-EQUIPMENT


-- Generic compatibility patch for kr-personal-laser-defense-mk4-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-personal-laser-defense-mk4-equipment"] then
    local item = data.raw.item["kr-personal-laser-defense-mk4-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-personal-laser-defense-mk4-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-personal-laser-defense-mk4-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SMALL-PORTABLE-GENERATOR-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-small-portable-generator-equipment
-- Fixes: CONFLICT_ITEM_KR-SMALL-PORTABLE-GENERATOR-EQUIPMENT


-- Generic compatibility patch for kr-small-portable-generator-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-small-portable-generator-equipment"] then
    local item = data.raw.item["kr-small-portable-generator-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-small-portable-generator-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-small-portable-generator-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-PORTABLE-GENERATOR-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-portable-generator-equipment
-- Fixes: CONFLICT_ITEM_KR-PORTABLE-GENERATOR-EQUIPMENT


-- Generic compatibility patch for kr-portable-generator-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-portable-generator-equipment"] then
    local item = data.raw.item["kr-portable-generator-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-portable-generator-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-portable-generator-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-EXOSKELETON-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-superior-exoskeleton-equipment
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-EXOSKELETON-EQUIPMENT


-- Generic compatibility patch for kr-superior-exoskeleton-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-exoskeleton-equipment"] then
    local item = data.raw.item["kr-superior-exoskeleton-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-exoskeleton-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-exoskeleton-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SUPERIOR-NIGHT-VISION-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-superior-night-vision-equipment
-- Fixes: CONFLICT_ITEM_KR-SUPERIOR-NIGHT-VISION-EQUIPMENT


-- Generic compatibility patch for kr-superior-night-vision-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-superior-night-vision-equipment"] then
    local item = data.raw.item["kr-superior-night-vision-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-superior-night-vision-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-superior-night-vision-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_PERSONAL-ROBOPORT-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item personal-roboport-equipment
-- Fixes: CONFLICT_ITEM_PERSONAL-ROBOPORT-EQUIPMENT


-- Generic compatibility patch for personal-roboport-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["personal-roboport-equipment"] then
    local item = data.raw.item["personal-roboport-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "personal-roboport-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "personal-roboport-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-VEHICLE-ROBOPORT-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item kr-vehicle-roboport-equipment
-- Fixes: CONFLICT_ITEM_KR-VEHICLE-ROBOPORT-EQUIPMENT


-- Generic compatibility patch for kr-vehicle-roboport-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-vehicle-roboport-equipment"] then
    local item = data.raw.item["kr-vehicle-roboport-equipment"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-vehicle-roboport-equipment-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-vehicle-roboport-equipment-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FERTILIZER_GENERIC
-- Description: Generic compatibility patch for item kr-fertilizer
-- Fixes: CONFLICT_ITEM_KR-FERTILIZER


-- Generic compatibility patch for kr-fertilizer
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-fertilizer"] then
    local item = data.raw.item["kr-fertilizer"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-fertilizer-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-fertilizer-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-NOTE-1_GENERIC
-- Description: Generic compatibility patch for item kr-note-1
-- Fixes: CONFLICT_ITEM_KR-NOTE-1


-- Generic compatibility patch for kr-note-1
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-note-1"] then
    local item = data.raw.item["kr-note-1"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-note-1-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-note-1-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FUEL_GENERIC
-- Description: Generic compatibility patch for item kr-fuel
-- Fixes: CONFLICT_ITEM_KR-FUEL


-- Generic compatibility patch for kr-fuel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-fuel"] then
    local item = data.raw.item["kr-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-fuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-fuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BIOFUEL_GENERIC
-- Description: Generic compatibility patch for item kr-biofuel
-- Fixes: CONFLICT_ITEM_KR-BIOFUEL


-- Generic compatibility patch for kr-biofuel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-biofuel"] then
    local item = data.raw.item["kr-biofuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-biofuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-biofuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-FUEL_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-fuel
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-FUEL


-- Generic compatibility patch for kr-advanced-fuel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-fuel"] then
    local item = data.raw.item["kr-advanced-fuel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-fuel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-fuel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-POLLUTION-FILTER_GENERIC
-- Description: Generic compatibility patch for item kr-pollution-filter
-- Fixes: CONFLICT_ITEM_KR-POLLUTION-FILTER


-- Generic compatibility patch for kr-pollution-filter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-pollution-filter"] then
    local item = data.raw.item["kr-pollution-filter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-pollution-filter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-pollution-filter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-USED-POLLUTION-FILTER_GENERIC
-- Description: Generic compatibility patch for item kr-used-pollution-filter
-- Fixes: CONFLICT_ITEM_KR-USED-POLLUTION-FILTER


-- Generic compatibility patch for kr-used-pollution-filter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-used-pollution-filter"] then
    local item = data.raw.item["kr-used-pollution-filter"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-used-pollution-filter-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-used-pollution-filter-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-EMPTY-DT-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item kr-empty-dt-fuel-cell
-- Fixes: CONFLICT_ITEM_KR-EMPTY-DT-FUEL-CELL


-- Generic compatibility patch for kr-empty-dt-fuel-cell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-empty-dt-fuel-cell"] then
    local item = data.raw.item["kr-empty-dt-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-empty-dt-fuel-cell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-empty-dt-fuel-cell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-MATTER-STABILIZER_GENERIC
-- Description: Generic compatibility patch for item kr-matter-stabilizer
-- Fixes: CONFLICT_ITEM_KR-MATTER-STABILIZER


-- Generic compatibility patch for kr-matter-stabilizer
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-matter-stabilizer"] then
    local item = data.raw.item["kr-matter-stabilizer"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-matter-stabilizer-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-matter-stabilizer-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-MATTER-CUBE_GENERIC
-- Description: Generic compatibility patch for item kr-matter-cube
-- Fixes: CONFLICT_ITEM_KR-MATTER-CUBE


-- Generic compatibility patch for kr-matter-cube
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-matter-cube"] then
    local item = data.raw.item["kr-matter-cube"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-matter-cube-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-matter-cube-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-EMPTY-ANTIMATTER-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item kr-empty-antimatter-fuel-cell
-- Fixes: CONFLICT_ITEM_KR-EMPTY-ANTIMATTER-FUEL-CELL


-- Generic compatibility patch for kr-empty-antimatter-fuel-cell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-empty-antimatter-fuel-cell"] then
    local item = data.raw.item["kr-empty-antimatter-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-empty-antimatter-fuel-cell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-empty-antimatter-fuel-cell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BLANK-TECH-CARD_GENERIC
-- Description: Generic compatibility patch for item kr-blank-tech-card
-- Fixes: CONFLICT_ITEM_KR-BLANK-TECH-CARD


-- Generic compatibility patch for kr-blank-tech-card
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-blank-tech-card"] then
    local item = data.raw.item["kr-blank-tech-card"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-blank-tech-card-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-blank-tech-card-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BITER-RESEARCH-DATA_GENERIC
-- Description: Generic compatibility patch for item kr-biter-research-data
-- Fixes: CONFLICT_ITEM_KR-BITER-RESEARCH-DATA


-- Generic compatibility patch for kr-biter-research-data
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-biter-research-data"] then
    local item = data.raw.item["kr-biter-research-data"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-biter-research-data-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-biter-research-data-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-MATTER-RESEARCH-DATA_GENERIC
-- Description: Generic compatibility patch for item kr-matter-research-data
-- Fixes: CONFLICT_ITEM_KR-MATTER-RESEARCH-DATA


-- Generic compatibility patch for kr-matter-research-data
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-matter-research-data"] then
    local item = data.raw.item["kr-matter-research-data"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-matter-research-data-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-matter-research-data-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SPACE-RESEARCH-DATA_GENERIC
-- Description: Generic compatibility patch for item kr-space-research-data
-- Fixes: CONFLICT_ITEM_KR-SPACE-RESEARCH-DATA


-- Generic compatibility patch for kr-space-research-data
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-space-research-data"] then
    local item = data.raw.item["kr-space-research-data"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-space-research-data-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-space-research-data-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-LITHIUM_GENERIC
-- Description: Generic compatibility patch for item kr-lithium
-- Fixes: CONFLICT_ITEM_KR-LITHIUM


-- Generic compatibility patch for kr-lithium
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-lithium"] then
    local item = data.raw.item["kr-lithium"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-lithium-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-lithium-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSITE-POWDER_GENERIC
-- Description: Generic compatibility patch for item kr-imersite-powder
-- Fixes: CONFLICT_ITEM_KR-IMERSITE-POWDER


-- Generic compatibility patch for kr-imersite-powder
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersite-powder"] then
    local item = data.raw.item["kr-imersite-powder"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersite-powder-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersite-powder-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BITER-VIRUS_GENERIC
-- Description: Generic compatibility patch for item kr-biter-virus
-- Fixes: CONFLICT_ITEM_KR-BITER-VIRUS


-- Generic compatibility patch for kr-biter-virus
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-biter-virus"] then
    local item = data.raw.item["kr-biter-virus"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-biter-virus-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-biter-virus-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-TRITIUM_GENERIC
-- Description: Generic compatibility patch for item kr-tritium
-- Fixes: CONFLICT_ITEM_KR-TRITIUM


-- Generic compatibility patch for kr-tritium
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-tritium"] then
    local item = data.raw.item["kr-tritium"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-tritium-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-tritium-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-DT-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item kr-dt-fuel-cell
-- Fixes: CONFLICT_ITEM_KR-DT-FUEL-CELL


-- Generic compatibility patch for kr-dt-fuel-cell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-dt-fuel-cell"] then
    local item = data.raw.item["kr-dt-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-dt-fuel-cell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-dt-fuel-cell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENRICHED-COPPER_GENERIC
-- Description: Generic compatibility patch for item kr-enriched-copper
-- Fixes: CONFLICT_ITEM_KR-ENRICHED-COPPER


-- Generic compatibility patch for kr-enriched-copper
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-enriched-copper"] then
    local item = data.raw.item["kr-enriched-copper"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-enriched-copper-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-enriched-copper-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENRICHED-IRON_GENERIC
-- Description: Generic compatibility patch for item kr-enriched-iron
-- Fixes: CONFLICT_ITEM_KR-ENRICHED-IRON


-- Generic compatibility patch for kr-enriched-iron
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-enriched-iron"] then
    local item = data.raw.item["kr-enriched-iron"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-enriched-iron-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-enriched-iron-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-RARE-METAL-ORE_GENERIC
-- Description: Generic compatibility patch for item kr-rare-metal-ore
-- Fixes: CONFLICT_ITEM_KR-RARE-METAL-ORE


-- Generic compatibility patch for kr-rare-metal-ore
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-rare-metal-ore"] then
    local item = data.raw.item["kr-rare-metal-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-rare-metal-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-rare-metal-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ENRICHED-RARE-METALS_GENERIC
-- Description: Generic compatibility patch for item kr-enriched-rare-metals
-- Fixes: CONFLICT_ITEM_KR-ENRICHED-RARE-METALS


-- Generic compatibility patch for kr-enriched-rare-metals
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-enriched-rare-metals"] then
    local item = data.raw.item["kr-enriched-rare-metals"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-enriched-rare-metals-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-enriched-rare-metals-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-LITHIUM-CHLORIDE_GENERIC
-- Description: Generic compatibility patch for item kr-lithium-chloride
-- Fixes: CONFLICT_ITEM_KR-LITHIUM-CHLORIDE


-- Generic compatibility patch for kr-lithium-chloride
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-lithium-chloride"] then
    local item = data.raw.item["kr-lithium-chloride"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-lithium-chloride-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-lithium-chloride-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SAND_GENERIC
-- Description: Generic compatibility patch for item kr-sand
-- Fixes: CONFLICT_ITEM_KR-SAND


-- Generic compatibility patch for kr-sand
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-sand"] then
    local item = data.raw.item["kr-sand"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-sand-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-sand-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-CHARGED-ANTIMATTER-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item kr-charged-antimatter-fuel-cell
-- Fixes: CONFLICT_ITEM_KR-CHARGED-ANTIMATTER-FUEL-CELL


-- Generic compatibility patch for kr-charged-antimatter-fuel-cell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-charged-antimatter-fuel-cell"] then
    local item = data.raw.item["kr-charged-antimatter-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-charged-antimatter-fuel-cell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-charged-antimatter-fuel-cell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTIMATTER-ARTILLERY-SHELL_GENERIC
-- Description: Generic compatibility patch for item kr-antimatter-artillery-shell
-- Fixes: CONFLICT_ITEM_KR-ANTIMATTER-ARTILLERY-SHELL


-- Generic compatibility patch for kr-antimatter-artillery-shell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-antimatter-artillery-shell"] then
    local item = data.raw.item["kr-antimatter-artillery-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-antimatter-artillery-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-antimatter-artillery-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BASIC-RAILGUN-SHELL_GENERIC
-- Description: Generic compatibility patch for item kr-basic-railgun-shell
-- Fixes: CONFLICT_ITEM_KR-BASIC-RAILGUN-SHELL


-- Generic compatibility patch for kr-basic-railgun-shell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-basic-railgun-shell"] then
    local item = data.raw.item["kr-basic-railgun-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-basic-railgun-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-basic-railgun-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTIMATTER-RAILGUN-SHELL_GENERIC
-- Description: Generic compatibility patch for item kr-antimatter-railgun-shell
-- Fixes: CONFLICT_ITEM_KR-ANTIMATTER-RAILGUN-SHELL


-- Generic compatibility patch for kr-antimatter-railgun-shell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-antimatter-railgun-shell"] then
    local item = data.raw.item["kr-antimatter-railgun-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-antimatter-railgun-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-antimatter-railgun-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-HEAVY-ROCKET_GENERIC
-- Description: Generic compatibility patch for item kr-heavy-rocket
-- Fixes: CONFLICT_ITEM_KR-HEAVY-ROCKET


-- Generic compatibility patch for kr-heavy-rocket
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-heavy-rocket"] then
    local item = data.raw.item["kr-heavy-rocket"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-heavy-rocket-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-heavy-rocket-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTIMATTER-ROCKET_GENERIC
-- Description: Generic compatibility patch for item kr-antimatter-rocket
-- Fixes: CONFLICT_ITEM_KR-ANTIMATTER-ROCKET


-- Generic compatibility patch for kr-antimatter-rocket
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-antimatter-rocket"] then
    local item = data.raw.item["kr-antimatter-rocket"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-antimatter-rocket-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-antimatter-rocket-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-EXPLOSIVE-TURRET-ROCKET_GENERIC
-- Description: Generic compatibility patch for item kr-explosive-turret-rocket
-- Fixes: CONFLICT_ITEM_KR-EXPLOSIVE-TURRET-ROCKET


-- Generic compatibility patch for kr-explosive-turret-rocket
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-explosive-turret-rocket"] then
    local item = data.raw.item["kr-explosive-turret-rocket"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-explosive-turret-rocket-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-explosive-turret-rocket-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTIMATTER-TURRET-ROCKET_GENERIC
-- Description: Generic compatibility patch for item kr-antimatter-turret-rocket
-- Fixes: CONFLICT_ITEM_KR-ANTIMATTER-TURRET-ROCKET


-- Generic compatibility patch for kr-antimatter-turret-rocket
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-antimatter-turret-rocket"] then
    local item = data.raw.item["kr-antimatter-turret-rocket"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-antimatter-turret-rocket-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-antimatter-turret-rocket-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-COKE_GENERIC
-- Description: Generic compatibility patch for item kr-coke
-- Fixes: CONFLICT_ITEM_KR-COKE


-- Generic compatibility patch for kr-coke
-- Fixes conflict between: Krastorio2-spaced-out, rubia, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-coke"] then
    local item = data.raw.item["kr-coke"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-coke-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-coke-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-EXPLOSIVE-RAILGUN-SHELL_GENERIC
-- Description: Generic compatibility patch for item kr-explosive-railgun-shell
-- Fixes: CONFLICT_ITEM_KR-EXPLOSIVE-RAILGUN-SHELL


-- Generic compatibility patch for kr-explosive-railgun-shell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-explosive-railgun-shell"] then
    local item = data.raw.item["kr-explosive-railgun-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-explosive-railgun-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-explosive-railgun-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-FIRST-AID-KIT_GENERIC
-- Description: Generic compatibility patch for item kr-first-aid-kit
-- Fixes: CONFLICT_ITEM_KR-FIRST-AID-KIT


-- Generic compatibility patch for kr-first-aid-kit
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-first-aid-kit"] then
    local item = data.raw.item["kr-first-aid-kit"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-first-aid-kit-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-first-aid-kit-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-HEAVY-ROCKET-LAUNCHER_GENERIC
-- Description: Generic compatibility patch for item kr-heavy-rocket-launcher
-- Fixes: CONFLICT_ITEM_KR-HEAVY-ROCKET-LAUNCHER


-- Generic compatibility patch for kr-heavy-rocket-launcher
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-heavy-rocket-launcher"] then
    local item = data.raw.item["kr-heavy-rocket-launcher"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-heavy-rocket-launcher-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-heavy-rocket-launcher-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSITE-ROUNDS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-imersite-rounds-magazine
-- Fixes: CONFLICT_ITEM_KR-IMERSITE-ROUNDS-MAGAZINE


-- Generic compatibility patch for kr-imersite-rounds-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersite-rounds-magazine"] then
    local item = data.raw.item["kr-imersite-rounds-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersite-rounds-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersite-rounds-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMPULSE-RIFLE_GENERIC
-- Description: Generic compatibility patch for item kr-impulse-rifle
-- Fixes: CONFLICT_ITEM_KR-IMPULSE-RIFLE


-- Generic compatibility patch for kr-impulse-rifle
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-impulse-rifle"] then
    local item = data.raw.item["kr-impulse-rifle"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-impulse-rifle-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-impulse-rifle-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMPULSE-RIFLE-AMMO_GENERIC
-- Description: Generic compatibility patch for item kr-impulse-rifle-ammo
-- Fixes: CONFLICT_ITEM_KR-IMPULSE-RIFLE-AMMO


-- Generic compatibility patch for kr-impulse-rifle-ammo
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-impulse-rifle-ammo"] then
    local item = data.raw.item["kr-impulse-rifle-ammo"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-impulse-rifle-ammo-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-impulse-rifle-ammo-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-NUCLEAR-ARTILLERY-SHELL_GENERIC
-- Description: Generic compatibility patch for item kr-nuclear-artillery-shell
-- Fixes: CONFLICT_ITEM_KR-NUCLEAR-ARTILLERY-SHELL


-- Generic compatibility patch for kr-nuclear-artillery-shell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-nuclear-artillery-shell"] then
    local item = data.raw.item["kr-nuclear-artillery-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-nuclear-artillery-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-nuclear-artillery-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-NUCLEAR-TURRET-ROCKET_GENERIC
-- Description: Generic compatibility patch for item kr-nuclear-turret-rocket
-- Fixes: CONFLICT_ITEM_KR-NUCLEAR-TURRET-ROCKET


-- Generic compatibility patch for kr-nuclear-turret-rocket
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-nuclear-turret-rocket"] then
    local item = data.raw.item["kr-nuclear-turret-rocket"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-nuclear-turret-rocket-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-nuclear-turret-rocket-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSITE_GENERIC
-- Description: Generic compatibility patch for item kr-imersite
-- Fixes: CONFLICT_ITEM_KR-IMERSITE


-- Generic compatibility patch for kr-imersite
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersite"] then
    local item = data.raw.item["kr-imersite"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersite-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersite-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-QUARTZ_GENERIC
-- Description: Generic compatibility patch for item kr-quartz
-- Fixes: CONFLICT_ITEM_KR-QUARTZ


-- Generic compatibility patch for kr-quartz
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-quartz"] then
    local item = data.raw.item["kr-quartz"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-quartz-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-quartz-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-CHARGED-MATTER-STABILIZER_GENERIC
-- Description: Generic compatibility patch for item kr-charged-matter-stabilizer
-- Fixes: CONFLICT_ITEM_KR-CHARGED-MATTER-STABILIZER


-- Generic compatibility patch for kr-charged-matter-stabilizer
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-charged-matter-stabilizer"] then
    local item = data.raw.item["kr-charged-matter-stabilizer"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-charged-matter-stabilizer-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-charged-matter-stabilizer-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-TECH-CARD_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-tech-card
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-TECH-CARD


-- Generic compatibility patch for kr-advanced-tech-card
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-tech-card"] then
    local item = data.raw.item["kr-advanced-tech-card"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-tech-card-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-tech-card-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-MATTER-TECH-CARD_GENERIC
-- Description: Generic compatibility patch for item kr-matter-tech-card
-- Fixes: CONFLICT_ITEM_KR-MATTER-TECH-CARD


-- Generic compatibility patch for kr-matter-tech-card
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-matter-tech-card"] then
    local item = data.raw.item["kr-matter-tech-card"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-matter-tech-card-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-matter-tech-card-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-SINGULARITY-TECH-CARD_GENERIC
-- Description: Generic compatibility patch for item kr-singularity-tech-card
-- Fixes: CONFLICT_ITEM_KR-SINGULARITY-TECH-CARD


-- Generic compatibility patch for kr-singularity-tech-card
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-singularity-tech-card"] then
    local item = data.raw.item["kr-singularity-tech-card"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-singularity-tech-card-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-singularity-tech-card-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BLACK-REINFORCED-PLATE_GENERIC
-- Description: Generic compatibility patch for item kr-black-reinforced-plate
-- Fixes: CONFLICT_ITEM_KR-BLACK-REINFORCED-PLATE


-- Generic compatibility patch for kr-black-reinforced-plate
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-black-reinforced-plate"] then
    local item = data.raw.item["kr-black-reinforced-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-black-reinforced-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-black-reinforced-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-BLACK-REINFORCED-PLATE-L_GENERIC
-- Description: Generic compatibility patch for item kr-black-reinforced-plate-l
-- Fixes: CONFLICT_ITEM_KR-BLACK-REINFORCED-PLATE-L


-- Generic compatibility patch for kr-black-reinforced-plate-l
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-black-reinforced-plate-l"] then
    local item = data.raw.item["kr-black-reinforced-plate-l"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-black-reinforced-plate-l-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-black-reinforced-plate-l-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-WHITE-REINFORCED-PLATE-L_GENERIC
-- Description: Generic compatibility patch for item kr-white-reinforced-plate-l
-- Fixes: CONFLICT_ITEM_KR-WHITE-REINFORCED-PLATE-L


-- Generic compatibility patch for kr-white-reinforced-plate-l
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-white-reinforced-plate-l"] then
    local item = data.raw.item["kr-white-reinforced-plate-l"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-white-reinforced-plate-l-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-white-reinforced-plate-l-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-WHITE-REINFORCED-PLATE_GENERIC
-- Description: Generic compatibility patch for item kr-white-reinforced-plate
-- Fixes: CONFLICT_ITEM_KR-WHITE-REINFORCED-PLATE


-- Generic compatibility patch for kr-white-reinforced-plate
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-white-reinforced-plate"] then
    local item = data.raw.item["kr-white-reinforced-plate"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-white-reinforced-plate-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-white-reinforced-plate-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-rifle-magazine"] then
    local item = data.raw.item["kr-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ARMOR-PIERCING-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-armor-piercing-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-ARMOR-PIERCING-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-armor-piercing-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-armor-piercing-rifle-magazine"] then
    local item = data.raw.item["kr-armor-piercing-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-armor-piercing-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-armor-piercing-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-URANIUM-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-uranium-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-URANIUM-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-uranium-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-uranium-rifle-magazine"] then
    local item = data.raw.item["kr-uranium-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-uranium-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-uranium-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSITE-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-imersite-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-IMERSITE-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-imersite-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersite-rifle-magazine"] then
    local item = data.raw.item["kr-imersite-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersite-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersite-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTI-MATERIEL-RIFLE_GENERIC
-- Description: Generic compatibility patch for item kr-anti-materiel-rifle
-- Fixes: CONFLICT_ITEM_KR-ANTI-MATERIEL-RIFLE


-- Generic compatibility patch for kr-anti-materiel-rifle
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-anti-materiel-rifle"] then
    local item = data.raw.item["kr-anti-materiel-rifle"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-anti-materiel-rifle-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-anti-materiel-rifle-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ANTI-MATERIEL-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-anti-materiel-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-ANTI-MATERIEL-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-anti-materiel-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-anti-materiel-rifle-magazine"] then
    local item = data.raw.item["kr-anti-materiel-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-anti-materiel-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-anti-materiel-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ARMOR-PIERCING-ANTI-MATERIEL-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-armor-piercing-anti-materiel-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-ARMOR-PIERCING-ANTI-MATERIEL-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-armor-piercing-anti-materiel-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-armor-piercing-anti-materiel-rifle-magazine"] then
    local item = data.raw.item["kr-armor-piercing-anti-materiel-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-armor-piercing-anti-materiel-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-armor-piercing-anti-materiel-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-URANIUM-ANTI-MATERIEL-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-uranium-anti-materiel-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-URANIUM-ANTI-MATERIEL-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-uranium-anti-materiel-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-uranium-anti-materiel-rifle-magazine"] then
    local item = data.raw.item["kr-uranium-anti-materiel-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-uranium-anti-materiel-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-uranium-anti-materiel-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-IMERSITE-ANTI-MATERIEL-RIFLE-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item kr-imersite-anti-materiel-rifle-magazine
-- Fixes: CONFLICT_ITEM_KR-IMERSITE-ANTI-MATERIEL-RIFLE-MAGAZINE


-- Generic compatibility patch for kr-imersite-anti-materiel-rifle-magazine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-imersite-anti-materiel-rifle-magazine"] then
    local item = data.raw.item["kr-imersite-anti-materiel-rifle-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-imersite-anti-materiel-rifle-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-imersite-anti-materiel-rifle-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-ADVANCED-TANK_GENERIC
-- Description: Generic compatibility patch for item kr-advanced-tank
-- Fixes: CONFLICT_ITEM_KR-ADVANCED-TANK


-- Generic compatibility patch for kr-advanced-tank
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-advanced-tank"] then
    local item = data.raw.item["kr-advanced-tank"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-advanced-tank-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-advanced-tank-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_KR-NUCLEAR-LOCOMOTIVE_GENERIC
-- Description: Generic compatibility patch for item kr-nuclear-locomotive
-- Fixes: CONFLICT_ITEM_KR-NUCLEAR-LOCOMOTIVE


-- Generic compatibility patch for kr-nuclear-locomotive
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: MEDIUM
-- Type: item


if data.raw.item["kr-nuclear-locomotive"] then
    local item = data.raw.item["kr-nuclear-locomotive"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "kr-nuclear-locomotive-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "kr-nuclear-locomotive-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOOD-DARTS-MAGAZINE_GENERIC
-- Description: Generic compatibility patch for item wood-darts-magazine
-- Fixes: CONFLICT_ITEM_WOOD-DARTS-MAGAZINE


-- Generic compatibility patch for wood-darts-magazine
-- Fixes conflict between: wood-military, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["wood-darts-magazine"] then
    local item = data.raw.item["wood-darts-magazine"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "wood-darts-magazine-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "wood-darts-magazine-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WOOD-ARMOR_GENERIC
-- Description: Generic compatibility patch for item wood-armor
-- Fixes: CONFLICT_ITEM_WOOD-ARMOR


-- Generic compatibility patch for wood-armor
-- Fixes conflict between: wood-military, lignumis
-- Severity: MEDIUM
-- Type: item


if data.raw.item["wood-armor"] then
    local item = data.raw.item["wood-armor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "wood-armor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "wood-armor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIG-MINING-DRILL_GENERIC
-- Description: Generic compatibility patch for item big-mining-drill
-- Fixes: CONFLICT_ITEM_BIG-MINING-DRILL


-- Generic compatibility patch for big-mining-drill
-- Fixes conflict between: lilys-cubeine, OmegaDrill
-- Severity: MEDIUM
-- Type: item


if data.raw.item["big-mining-drill"] then
    local item = data.raw.item["big-mining-drill"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "big-mining-drill-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "big-mining-drill-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CANNON-SHELL_GENERIC
-- Description: Generic compatibility patch for item cannon-shell
-- Fixes: CONFLICT_ITEM_CANNON-SHELL


-- Generic compatibility patch for cannon-shell
-- Fixes conflict between: lilys-cubeine, PlutoniumEnergy
-- Severity: MEDIUM
-- Type: item


if data.raw.item["cannon-shell"] then
    local item = data.raw.item["cannon-shell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "cannon-shell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "cannon-shell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_SPACE-PLATFORM-FOUNDATION_GENERIC
-- Description: Generic compatibility patch for item space-platform-foundation
-- Fixes: CONFLICT_ITEM_SPACE-PLATFORM-FOUNDATION


-- Generic compatibility patch for space-platform-foundation
-- Fixes conflict between: secretas, Moshine, metal-and-stars
-- Severity: MEDIUM
-- Type: item


if data.raw.item["space-platform-foundation"] then
    local item = data.raw.item["space-platform-foundation"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "space-platform-foundation-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "space-platform-foundation-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_NEODYMIUM_GENERIC
-- Description: Generic compatibility patch for item neodymium
-- Fixes: CONFLICT_ITEM_NEODYMIUM


-- Generic compatibility patch for neodymium
-- Fixes conflict between: Moshine, Moshine-assets
-- Severity: MEDIUM
-- Type: item


if data.raw.item["neodymium"] then
    local item = data.raw.item["neodymium"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "neodymium-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "neodymium-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DISPLAY-PANEL_GENERIC
-- Description: Generic compatibility patch for item display-panel
-- Fixes: CONFLICT_ITEM_DISPLAY-PANEL


-- Generic compatibility patch for display-panel
-- Fixes conflict between: Moshine, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["display-panel"] then
    local item = data.raw.item["display-panel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "display-panel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "display-panel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CONSTANT-COMBINATOR_GENERIC
-- Description: Generic compatibility patch for item constant-combinator
-- Fixes: CONFLICT_ITEM_CONSTANT-COMBINATOR


-- Generic compatibility patch for constant-combinator
-- Fixes conflict between: secretas, PavementDriveAssistContinued, Moshine, RenaiTransportation
-- Severity: MEDIUM
-- Type: item


if data.raw.item["constant-combinator"] then
    local item = data.raw.item["constant-combinator"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "constant-combinator-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "constant-combinator-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_DEPLETED-URANIUM-FUEL-CELL_GENERIC
-- Description: Generic compatibility patch for item depleted-uranium-fuel-cell
-- Fixes: CONFLICT_ITEM_DEPLETED-URANIUM-FUEL-CELL


-- Generic compatibility patch for depleted-uranium-fuel-cell
-- Fixes conflict between: StopgapNukes, PlutoniumEnergy, secretas
-- Severity: MEDIUM
-- Type: item


if data.raw.item["depleted-uranium-fuel-cell"] then
    local item = data.raw.item["depleted-uranium-fuel-cell"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "depleted-uranium-fuel-cell-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "depleted-uranium-fuel-cell-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JR-BORAX_GENERIC
-- Description: Generic compatibility patch for item jr-borax
-- Fixes: CONFLICT_ITEM_JR-BORAX


-- Generic compatibility patch for jr-borax
-- Fixes conflict between: quirkycat_boron, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jr-borax"] then
    local item = data.raw.item["jr-borax"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jr-borax-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jr-borax-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JR-BORON_GENERIC
-- Description: Generic compatibility patch for item jr-boron
-- Fixes: CONFLICT_ITEM_JR-BORON


-- Generic compatibility patch for jr-boron
-- Fixes conflict between: quirkycat_boron, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jr-boron"] then
    local item = data.raw.item["jr-boron"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jr-boron-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jr-boron-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JR-BORON-ROD_GENERIC
-- Description: Generic compatibility patch for item jr-boron-rod
-- Fixes: CONFLICT_ITEM_JR-BORON-ROD


-- Generic compatibility patch for jr-boron-rod
-- Fixes conflict between: quirkycat_boron, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jr-boron-rod"] then
    local item = data.raw.item["jr-boron-rod"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jr-boron-rod-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jr-boron-rod-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BOROSILICATE-GLASS_GENERIC
-- Description: Generic compatibility patch for item borosilicate-glass
-- Fixes: CONFLICT_ITEM_BOROSILICATE-GLASS


-- Generic compatibility patch for borosilicate-glass
-- Fixes conflict between: quirkycat_glass, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["borosilicate-glass"] then
    local item = data.raw.item["borosilicate-glass"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "borosilicate-glass-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "borosilicate-glass-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_FIBREGLASS_GENERIC
-- Description: Generic compatibility patch for item fibreglass
-- Fixes: CONFLICT_ITEM_FIBREGLASS


-- Generic compatibility patch for fibreglass
-- Fixes conflict between: quirkycat_glass, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["fibreglass"] then
    local item = data.raw.item["fibreglass"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "fibreglass-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "fibreglass-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_JR-MINERALS_GENERIC
-- Description: Generic compatibility patch for item jr-minerals
-- Fixes: CONFLICT_ITEM_JR-MINERALS


-- Generic compatibility patch for jr-minerals
-- Fixes conflict between: quirkycat_glass, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["jr-minerals"] then
    local item = data.raw.item["jr-minerals"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "jr-minerals-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "jr-minerals-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CLAY_GENERIC
-- Description: Generic compatibility patch for item clay
-- Fixes: CONFLICT_ITEM_CLAY


-- Generic compatibility patch for clay
-- Fixes conflict between: quirkycat_glass, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["clay"] then
    local item = data.raw.item["clay"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "clay-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "clay-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CHARCOAL_GENERIC
-- Description: Generic compatibility patch for item charcoal
-- Fixes: CONFLICT_ITEM_CHARCOAL


-- Generic compatibility patch for charcoal
-- Fixes conflict between: quirkycat_machines, wood-industry, quirkycat_base
-- Severity: MEDIUM
-- Type: item


if data.raw.item["charcoal"] then
    local item = data.raw.item["charcoal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "charcoal-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "charcoal-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_IRON-BACTERIA_GENERIC
-- Description: Generic compatibility patch for item iron-bacteria
-- Fixes: CONFLICT_ITEM_IRON-BACTERIA


-- Generic compatibility patch for iron-bacteria
-- Fixes conflict between: VoidProcessing, rubia
-- Severity: MEDIUM
-- Type: item


if data.raw.item["iron-bacteria"] then
    local item = data.raw.item["iron-bacteria"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "iron-bacteria-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "iron-bacteria-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_QUARTZ-ORE_GENERIC
-- Description: Generic compatibility patch for item quartz-ore
-- Fixes: CONFLICT_ITEM_QUARTZ-ORE


-- Generic compatibility patch for quartz-ore
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["quartz-ore"] then
    local item = data.raw.item["quartz-ore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "quartz-ore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "quartz-ore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_QUARTZ-CRYSTAL_GENERIC
-- Description: Generic compatibility patch for item quartz-crystal
-- Fixes: CONFLICT_ITEM_QUARTZ-CRYSTAL


-- Generic compatibility patch for quartz-crystal
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["quartz-crystal"] then
    local item = data.raw.item["quartz-crystal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "quartz-crystal-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "quartz-crystal-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LUCIFERIN_GENERIC
-- Description: Generic compatibility patch for item luciferin
-- Fixes: CONFLICT_ITEM_LUCIFERIN


-- Generic compatibility patch for luciferin
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["luciferin"] then
    local item = data.raw.item["luciferin"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "luciferin-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "luciferin-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOLUMINESCENT-CRYSTAL_GENERIC
-- Description: Generic compatibility patch for item bioluminescent-crystal
-- Fixes: CONFLICT_ITEM_BIOLUMINESCENT-CRYSTAL


-- Generic compatibility patch for bioluminescent-crystal
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bioluminescent-crystal"] then
    local item = data.raw.item["bioluminescent-crystal"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bioluminescent-crystal-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bioluminescent-crystal-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LUCIFUNNEL_GENERIC
-- Description: Generic compatibility patch for item lucifunnel
-- Fixes: CONFLICT_ITEM_LUCIFUNNEL


-- Generic compatibility patch for lucifunnel
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lucifunnel"] then
    local item = data.raw.item["lucifunnel"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lucifunnel-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lucifunnel-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_LUCIFUNNEL-SEED_GENERIC
-- Description: Generic compatibility patch for item lucifunnel-seed
-- Fixes: CONFLICT_ITEM_LUCIFUNNEL-SEED


-- Generic compatibility patch for lucifunnel-seed
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["lucifunnel-seed"] then
    local item = data.raw.item["lucifunnel-seed"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "lucifunnel-seed-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "lucifunnel-seed-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TENECAP_GENERIC
-- Description: Generic compatibility patch for item tenecap
-- Fixes: CONFLICT_ITEM_TENECAP


-- Generic compatibility patch for tenecap
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tenecap"] then
    local item = data.raw.item["tenecap"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tenecap-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tenecap-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_TENECAP-SPORE_GENERIC
-- Description: Generic compatibility patch for item tenecap-spore
-- Fixes: CONFLICT_ITEM_TENECAP-SPORE


-- Generic compatibility patch for tenecap-spore
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["tenecap-spore"] then
    local item = data.raw.item["tenecap-spore"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "tenecap-spore-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "tenecap-spore-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CHITIN_GENERIC
-- Description: Generic compatibility patch for item chitin
-- Fixes: CONFLICT_ITEM_CHITIN


-- Generic compatibility patch for chitin
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["chitin"] then
    local item = data.raw.item["chitin"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "chitin-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "chitin-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOLUMINESCENT-AGRICULTURAL-TOWER_GENERIC
-- Description: Generic compatibility patch for item bioluminescent-agricultural-tower
-- Fixes: CONFLICT_ITEM_BIOLUMINESCENT-AGRICULTURAL-TOWER


-- Generic compatibility patch for bioluminescent-agricultural-tower
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bioluminescent-agricultural-tower"] then
    local item = data.raw.item["bioluminescent-agricultural-tower"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bioluminescent-agricultural-tower-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bioluminescent-agricultural-tower-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_CHITOSAN_GENERIC
-- Description: Generic compatibility patch for item chitosan
-- Fixes: CONFLICT_ITEM_CHITOSAN


-- Generic compatibility patch for chitosan
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["chitosan"] then
    local item = data.raw.item["chitosan"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "chitosan-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "chitosan-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOLUMINESCENT-BIOCHAMBER_GENERIC
-- Description: Generic compatibility patch for item bioluminescent-biochamber
-- Fixes: CONFLICT_ITEM_BIOLUMINESCENT-BIOCHAMBER


-- Generic compatibility patch for bioluminescent-biochamber
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bioluminescent-biochamber"] then
    local item = data.raw.item["bioluminescent-biochamber"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bioluminescent-biochamber-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bioluminescent-biochamber-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOLUMINESCENT-SCIENCE-PACK_GENERIC
-- Description: Generic compatibility patch for item bioluminescent-science-pack
-- Fixes: CONFLICT_ITEM_BIOLUMINESCENT-SCIENCE-PACK


-- Generic compatibility patch for bioluminescent-science-pack
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bioluminescent-science-pack"] then
    local item = data.raw.item["bioluminescent-science-pack"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bioluminescent-science-pack-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bioluminescent-science-pack-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOINFUSOR_GENERIC
-- Description: Generic compatibility patch for item bioinfusor
-- Fixes: CONFLICT_ITEM_BIOINFUSOR


-- Generic compatibility patch for bioinfusor
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["bioinfusor"] then
    local item = data.raw.item["bioinfusor"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "bioinfusor-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "bioinfusor-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_BIOBEACON_GENERIC
-- Description: Generic compatibility patch for item biobeacon
-- Fixes: CONFLICT_ITEM_BIOBEACON


-- Generic compatibility patch for biobeacon
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: MEDIUM
-- Type: item


if data.raw.item["biobeacon"] then
    local item = data.raw.item["biobeacon"]
    
    -- Ensure item compatibility across mods
    -- Create alternative versions if needed
    
    -- Alternative 1: Basic version
    data:extend({{
        type = "item",
        name = "biobeacon-basic",
        icon = item.icon or "__base__/graphics/icons/iron-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = item.stack_size or 100,
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-basic"
    }})
    
    -- Alternative 2: Advanced version
    data:extend({{
        type = "item",
        name = "biobeacon-advanced",
        icon = item.icon or "__base__/graphics/icons/steel-plate.png",
        icon_size = item.icon_size or 64,
        stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
        subgroup = item.subgroup or "intermediate-product",
        order = (item.order or "a") .. "-advanced"
    }})
end


-- Patch: PATCH_WATER_GENERIC
-- Description: Generic compatibility patch for fluid water
-- Fixes: CONFLICT_FLUID_WATER


-- Generic compatibility patch for water
-- Fixes conflict between: castra, Spaghetorio, Krastorio2, Cerys-Moon-of-Fulgora, secretas, bobplates, corrundum, bobrevamp, wood-industry, WaterExtractor, Cold_biters, Krastorio2-spaced-out, cerys-lunaponics, lignumis, bztitanium, planet-muluna, quirkycat_boron, bzzirconium, crushing-industry, cubium, terrapalus, astroponics, bztin, rubia, bzcarbon, biochemistry, bzlead, bobgreenhouse, metal-and-stars, vulcanus-sulfuric-bacteria, bzsilicon, bobelectronics, quirkycat_glass, aai-industry, Moshine-assets, Paracelsin, StopgapNukes, dea-dia-system
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["water"] then
    local prototype = data.raw["fluid"]["water"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.water")
end


-- Patch: PATCH_CRUDE-OIL_GENERIC
-- Description: Generic compatibility patch for fluid crude-oil
-- Fixes: CONFLICT_FLUID_CRUDE-OIL


-- Generic compatibility patch for crude-oil
-- Fixes conflict between: astroponics, bobrevamp, boblogistics, bobelectronics, castra, aai-industry, planet-muluna, bobplates, janus, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["crude-oil"] then
    local prototype = data.raw["fluid"]["crude-oil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.crude-oil")
end


-- Patch: PATCH_HEAVY-OIL_GENERIC
-- Description: Generic compatibility patch for fluid heavy-oil
-- Fixes: CONFLICT_FLUID_HEAVY-OIL


-- Generic compatibility patch for heavy-oil
-- Fixes conflict between: bobrevamp, terrapalus, wood-industry, boblogistics, bobelectronics, castra, Krastorio2-spaced-out, aai-industry, Krastorio2, lilys-cubeine, planet-muluna, bobwarfare, biochemistry, secretas, bobplates, corrundum, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["heavy-oil"] then
    local prototype = data.raw["fluid"]["heavy-oil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.heavy-oil")
end


-- Patch: PATCH_LIGHT-OIL_GENERIC
-- Description: Generic compatibility patch for fluid light-oil
-- Fixes: CONFLICT_FLUID_LIGHT-OIL


-- Generic compatibility patch for light-oil
-- Fixes conflict between: castra, Krastorio2, Cerys-Moon-of-Fulgora, bobplates, corrundum, bobrevamp, wood-industry, boblogistics, Cold_biters, Krastorio2-spaced-out, planet-muluna, cubium, rubia, lilys-cubeine, bobwarfare, biochemistry, metal-and-stars, bobelectronics, aai-industry
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["light-oil"] then
    local prototype = data.raw["fluid"]["light-oil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.light-oil")
end


-- Patch: PATCH_PETROLEUM-GAS_GENERIC
-- Description: Generic compatibility patch for fluid petroleum-gas
-- Fixes: CONFLICT_FLUID_PETROLEUM-GAS


-- Generic compatibility patch for petroleum-gas
-- Fixes conflict between: castra, Krastorio2, bobplates, corrundum, bobrevamp, wood-industry, boblogistics, Cold_biters, Krastorio2-spaced-out, planet-muluna, cubium, bztin, lilys-cubeine, bzcarbon, bobgreenhouse, bobelectronics, aai-industry, Moshine-assets, VoidProcessing, StopgapNukes
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["petroleum-gas"] then
    local prototype = data.raw["fluid"]["petroleum-gas"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.petroleum-gas")
end


-- Patch: PATCH_VIRTUAL-SIGNAL-UTILITY_GENERIC
-- Description: Generic compatibility patch for item-subgroup virtual-signal-utility
-- Fixes: CONFLICT_ITEM-SUBGROUP_VIRTUAL-SIGNAL-UTILITY


-- Generic compatibility patch for virtual-signal-utility
-- Fixes conflict between: informatron, aai-signals
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["virtual-signal-utility"] then
    local prototype = data.raw["item-subgroup"]["virtual-signal-utility"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.virtual-signal-utility")
end


-- Patch: PATCH_SIGNAL-WAYPOINT_GENERIC
-- Description: Generic compatibility patch for virtual-signal signal-waypoint
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_SIGNAL-WAYPOINT


-- Generic compatibility patch for signal-waypoint
-- Fixes conflict between: SpidertronPatrols, aai-signals
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["signal-waypoint"] then
    local prototype = data.raw["virtual-signal"]["signal-waypoint"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.signal-waypoint")
end


-- Patch: PATCH_FLAMETHROWER-AMMO_GENERIC
-- Description: Generic compatibility patch for ammo flamethrower-ammo
-- Fixes: CONFLICT_AMMO_FLAMETHROWER-AMMO


-- Generic compatibility patch for flamethrower-ammo
-- Fixes conflict between: aai-vehicles-flame-tumbler, aai-vehicles-flame-tank
-- Severity: LOW
-- Type: ammo


if data.raw["ammo"] and data.raw["ammo"]["flamethrower-ammo"] then
    local prototype = data.raw["ammo"]["flamethrower-ammo"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo.flamethrower-ammo")
end


-- Patch: PATCH_MEDIUM-SCORCHMARK-TINTABLE_GENERIC
-- Description: Generic compatibility patch for create-entity medium-scorchmark-tintable
-- Fixes: CONFLICT_CREATE-ENTITY_MEDIUM-SCORCHMARK-TINTABLE


-- Generic compatibility patch for medium-scorchmark-tintable
-- Fixes conflict between: aai-vehicles-ironclad, Moshine, StopgapNukes
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["medium-scorchmark-tintable"] then
    local prototype = data.raw["create-entity"]["medium-scorchmark-tintable"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.medium-scorchmark-tintable")
end


-- Patch: PATCH_EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity explosion
-- Fixes: CONFLICT_CREATE-ENTITY_EXPLOSION


-- Generic compatibility patch for explosion
-- Fixes conflict between: RPGsystem, More_Ammo, wood-military, Krastorio2-spaced-out, bobvehicleequipment, Krastorio2, bobwarfare, aai-vehicles-ironclad, RampantFixed, Nuclear_Artillery_QF, bzzirconium, RampantArsenalFork, cubium
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["explosion"] then
    local prototype = data.raw["create-entity"]["explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.explosion")
end


-- Patch: PATCH_ADVANCED-CENTRIFUGING-OR-CRAFTING_GENERIC
-- Description: Generic compatibility patch for recipe-category advanced-centrifuging-or-crafting
-- Fixes: CONFLICT_RECIPE-CATEGORY_ADVANCED-CENTRIFUGING-OR-CRAFTING


-- Generic compatibility patch for advanced-centrifuging-or-crafting
-- Fixes conflict between: atan-nuclear-science, Age-of-Production
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["advanced-centrifuging-or-crafting"] then
    local prototype = data.raw["recipe-category"]["advanced-centrifuging-or-crafting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.advanced-centrifuging-or-crafting")
end


-- Patch: PATCH_BIG-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity big-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_BIG-EXPLOSION


-- Generic compatibility patch for big-explosion
-- Fixes conflict between: RPGsystem, Krastorio2-spaced-out, Krastorio2, Aircraft-space-age, StopgapNukes
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["big-explosion"] then
    local prototype = data.raw["create-entity"]["big-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.big-explosion")
end


-- Patch: PATCH_EXPLOSION-GUNSHOT_GENERIC
-- Description: Generic compatibility patch for create-explosion explosion-gunshot
-- Fixes: CONFLICT_CREATE-EXPLOSION_EXPLOSION-GUNSHOT


-- Generic compatibility patch for explosion-gunshot
-- Fixes conflict between: vtk-cannon-turret, grappling-gun, More_Ammo, Krastorio2-spaced-out, PlutoniumEnergy, Krastorio2, lignumis, Aircraft-space-age, bobwarfare, alien-module, StopgapNukes, bzzirconium, metal-and-stars
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["explosion-gunshot"] then
    local prototype = data.raw["create-explosion"]["explosion-gunshot"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.explosion-gunshot")
end


-- Patch: PATCH_LUBRICANT_GENERIC
-- Description: Generic compatibility patch for fluid lubricant
-- Fixes: CONFLICT_FLUID_LUBRICANT


-- Generic compatibility patch for lubricant
-- Fixes conflict between: tenebris, tenebris-prime, Cold_biters, castra, promethium-quality, rubia, Cerys-Moon-of-Fulgora, Aircraft-space-age, lilys-cubeine, secretas, Hovercrafts, bobplates, dea-dia-system, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["lubricant"] then
    local prototype = data.raw["fluid"]["lubricant"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.lubricant")
end


-- Patch: PATCH_VEHICLE_GENERIC
-- Description: Generic compatibility patch for collision-layer vehicle
-- Fixes: CONFLICT_COLLISION-LAYER_VEHICLE


-- Generic compatibility patch for vehicle
-- Fixes conflict between: alien-biomes, combat-mechanics-overhaul
-- Severity: LOW
-- Type: collision-layer


if data.raw["collision-layer"] and data.raw["collision-layer"]["vehicle"] then
    local prototype = data.raw["collision-layer"]["vehicle"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "collision-layer.vehicle")
end


-- Patch: PATCH_EXPLOSION-HIT_GENERIC
-- Description: Generic compatibility patch for create-entity explosion-hit
-- Fixes: CONFLICT_CREATE-ENTITY_EXPLOSION-HIT


-- Generic compatibility patch for explosion-hit
-- Fixes conflict between: Krastorio2-spaced-out, PlutoniumEnergy, Krastorio2, Electric_flying_enemies, bobwarfare, alien-module, StopgapNukes, corrundum, bzzirconium
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["explosion-hit"] then
    local prototype = data.raw["create-entity"]["explosion-hit"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.explosion-hit")
end


-- Patch: PATCH_AMMONIA_GENERIC
-- Description: Generic compatibility patch for fluid ammonia
-- Fixes: CONFLICT_FLUID_AMMONIA


-- Generic compatibility patch for ammonia
-- Fixes conflict between: Krastorio2-spaced-out, Spaghetorio, cerys-lunaponics, promethium-quality, Cerys-Moon-of-Fulgora, bzcarbon, biochemistry, aquilo-seabloom-algaculture, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["ammonia"] then
    local prototype = data.raw["fluid"]["ammonia"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.ammonia")
end


-- Patch: PATCH_STEAM_GENERIC
-- Description: Generic compatibility patch for fluid steam
-- Fixes: CONFLICT_FLUID_STEAM


-- Generic compatibility patch for steam
-- Fixes conflict between: vulcanus-sulfuric-bacteria, wood-industry, Cold_biters, Moshine, Krastorio2-spaced-out, Krastorio2, Cerys-Moon-of-Fulgora, lignumis, Moshine-assets, secretas, aquilo-seabloom-algaculture, bobplates, corrundum, dea-dia-system, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["steam"] then
    local prototype = data.raw["fluid"]["steam"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.steam")
end


-- Patch: PATCH_FLUOROKETONE-HOT_GENERIC
-- Description: Generic compatibility patch for fluid fluoroketone-hot
-- Fixes: CONFLICT_FLUID_FLUOROKETONE-HOT


-- Generic compatibility patch for fluoroketone-hot
-- Fixes conflict between: corrundum, VoidProcessing, aquilo-seabloom-algaculture, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["fluoroketone-hot"] then
    local prototype = data.raw["fluid"]["fluoroketone-hot"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.fluoroketone-hot")
end


-- Patch: PATCH_FLUOROKETONE-COLD_GENERIC
-- Description: Generic compatibility patch for fluid fluoroketone-cold
-- Fixes: CONFLICT_FLUID_FLUOROKETONE-COLD


-- Generic compatibility patch for fluoroketone-cold
-- Fixes conflict between: Krastorio2-spaced-out, promethium-quality, aquilo-seabloom-algaculture, VoidProcessing, corrundum, cubium, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["fluoroketone-cold"] then
    local prototype = data.raw["fluid"]["fluoroketone-cold"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.fluoroketone-cold")
end


-- Patch: PATCH_LIQUID-FERTILIZER_GENERIC
-- Description: Generic compatibility patch for fluid liquid-fertilizer
-- Fixes: CONFLICT_FLUID_LIQUID-FERTILIZER


-- Generic compatibility patch for liquid-fertilizer
-- Fixes conflict between: astroponics, cerys-lunaponics, lilys-cubeine
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["liquid-fertilizer"] then
    local prototype = data.raw["fluid"]["liquid-fertilizer"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.liquid-fertilizer")
end


-- Patch: PATCH_BIOSLURRY_GENERIC
-- Description: Generic compatibility patch for fluid bioslurry
-- Fixes: CONFLICT_FLUID_BIOSLURRY


-- Generic compatibility patch for bioslurry
-- Fixes conflict between: astroponics, biochemistry, lilys-cubeine
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bioslurry"] then
    local prototype = data.raw["fluid"]["bioslurry"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bioslurry")
end


-- Patch: PATCH_SULFURIC-ACID_GENERIC
-- Description: Generic compatibility patch for fluid sulfuric-acid
-- Fixes: CONFLICT_FLUID_SULFURIC-ACID


-- Generic compatibility patch for sulfuric-acid
-- Fixes conflict between: More_Ammo, castra, Spaghetorio, PlutoniumEnergy, Krastorio2, Cerys-Moon-of-Fulgora, bobplates, corrundum, wood-industry, tenebris-prime, Cold_biters, Krastorio2-spaced-out, slp-dyson-sphere-reworked, bzzirconium, crushing-industry, cubium, astroponics, tenebris, bztin, bzcarbon, bobwarfare, biochemistry, bzlead, Moshine, vulcanus-sulfuric-bacteria, bzsilicon, se-space-trains, bobelectronics
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["sulfuric-acid"] then
    local prototype = data.raw["fluid"]["sulfuric-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.sulfuric-acid")
end


-- Patch: PATCH_ARTILLERY-CANNON-MUZZLE-FLASH_GENERIC
-- Description: Generic compatibility patch for create-explosion artillery-cannon-muzzle-flash
-- Fixes: CONFLICT_CREATE-EXPLOSION_ARTILLERY-CANNON-MUZZLE-FLASH


-- Generic compatibility patch for artillery-cannon-muzzle-flash
-- Fixes conflict between: atomic-artillery-reborn, wood-military, Krastorio2-spaced-out, PlutoniumEnergy, Krastorio2, bobwarfare, Nuclear_Artillery_QF, StopgapNukes
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["artillery-cannon-muzzle-flash"] then
    local prototype = data.raw["create-explosion"]["artillery-cannon-muzzle-flash"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.artillery-cannon-muzzle-flash")
end


-- Patch: PATCH_ELECTROLYTE_GENERIC
-- Description: Generic compatibility patch for fluid electrolyte
-- Fixes: CONFLICT_FLUID_ELECTROLYTE


-- Generic compatibility patch for electrolyte
-- Fixes conflict between: biochemistry, fulgora-coralmium-agriculture, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["electrolyte"] then
    local prototype = data.raw["fluid"]["electrolyte"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.electrolyte")
end


-- Patch: PATCH_LAVA_GENERIC
-- Description: Generic compatibility patch for fluid lava
-- Fixes: CONFLICT_FLUID_LAVA


-- Generic compatibility patch for lava
-- Fixes conflict between: vulcanus-sulfuric-bacteria, bzsilicon, Spaghetorio, biochemistry, bzlead, bzzirconium, crushing-industry, foundry-restructuring, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["lava"] then
    local prototype = data.raw["fluid"]["lava"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.lava")
end


-- Patch: PATCH_BOB-ELECTRONICS_GENERIC
-- Description: Generic compatibility patch for recipe-category bob-electronics
-- Fixes: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS


-- Generic compatibility patch for bob-electronics
-- Fixes conflict between: bobelectronics, bobassembly
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics"] then
    local prototype = data.raw["recipe-category"]["bob-electronics"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics")
end


-- Patch: PATCH_BOB-ELECTRONICS-MACHINE_GENERIC
-- Description: Generic compatibility patch for recipe-category bob-electronics-machine
-- Fixes: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS-MACHINE


-- Generic compatibility patch for bob-electronics-machine
-- Fixes conflict between: bobelectronics, bobassembly
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics-machine"] then
    local prototype = data.raw["recipe-category"]["bob-electronics-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics-machine")
end


-- Patch: PATCH_BOB-ELECTRONICS-WITH-FLUID_GENERIC
-- Description: Generic compatibility patch for recipe-category bob-electronics-with-fluid
-- Fixes: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS-WITH-FLUID


-- Generic compatibility patch for bob-electronics-with-fluid
-- Fixes conflict between: bobelectronics, bobassembly
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics-with-fluid"] then
    local prototype = data.raw["recipe-category"]["bob-electronics-with-fluid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics-with-fluid")
end


-- Patch: PATCH_BOB-ASSEMBLY-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-assembly-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ASSEMBLY-MACHINE


-- Generic compatibility patch for bob-assembly-machine
-- Fixes conflict between: bobassembly, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-assembly-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-assembly-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-assembly-machine")
end


-- Patch: PATCH_BOB-CHEMICAL-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-chemical-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-CHEMICAL-MACHINE


-- Generic compatibility patch for bob-chemical-machine
-- Fixes conflict between: bobassembly, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-chemical-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-chemical-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-chemical-machine")
end


-- Patch: PATCH_BOB-ELECTROLYSER-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-electrolyser-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ELECTROLYSER-MACHINE


-- Generic compatibility patch for bob-electrolyser-machine
-- Fixes conflict between: bobassembly, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electrolyser-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-electrolyser-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electrolyser-machine")
end


-- Patch: PATCH_BOB-REFINERY-MACHINE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-refinery-machine
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-REFINERY-MACHINE


-- Generic compatibility patch for bob-refinery-machine
-- Fixes conflict between: bobassembly, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-refinery-machine"] then
    local prototype = data.raw["item-subgroup"]["bob-refinery-machine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-refinery-machine")
end


-- Patch: PATCH_BOB-RESOURCE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-resource
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-RESOURCE


-- Generic compatibility patch for bob-resource
-- Fixes conflict between: bobelectronics, bobwarfare, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-resource"] then
    local prototype = data.raw["item-subgroup"]["bob-resource"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-resource")
end


-- Patch: PATCH_BOB-ELECTRONIC-COMPONENTS_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-electronic-components
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ELECTRONIC-COMPONENTS


-- Generic compatibility patch for bob-electronic-components
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electronic-components"] then
    local prototype = data.raw["item-subgroup"]["bob-electronic-components"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electronic-components")
end


-- Patch: PATCH_BOB-BOARDS_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-boards
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-BOARDS


-- Generic compatibility patch for bob-boards
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-boards"] then
    local prototype = data.raw["item-subgroup"]["bob-boards"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-boards")
end


-- Patch: PATCH_BOB-ELECTRONIC-BOARDS_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-electronic-boards
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ELECTRONIC-BOARDS


-- Generic compatibility patch for bob-electronic-boards
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electronic-boards"] then
    local prototype = data.raw["item-subgroup"]["bob-electronic-boards"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electronic-boards")
end


-- Patch: PATCH_BOB-FERRIC-CHLORIDE-SOLUTION_GENERIC
-- Description: Generic compatibility patch for fluid bob-ferric-chloride-solution
-- Fixes: CONFLICT_FLUID_BOB-FERRIC-CHLORIDE-SOLUTION


-- Generic compatibility patch for bob-ferric-chloride-solution
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-ferric-chloride-solution"] then
    local prototype = data.raw["fluid"]["bob-ferric-chloride-solution"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-ferric-chloride-solution")
end


-- Patch: PATCH_BOB-COMPUTER-AGE-1_GENERIC
-- Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-1
-- Fixes: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-1


-- Generic compatibility patch for bob-computer-age-1
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: LOW
-- Type: produce-per-hour-achievement


if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-1"] then
    local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-1"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-1")
end


-- Patch: PATCH_BOB-COMPUTER-AGE-2_GENERIC
-- Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-2
-- Fixes: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-2


-- Generic compatibility patch for bob-computer-age-2
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: LOW
-- Type: produce-per-hour-achievement


if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-2"] then
    local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-2")
end


-- Patch: PATCH_BOB-COMPUTER-AGE-3_GENERIC
-- Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-3
-- Fixes: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-3


-- Generic compatibility patch for bob-computer-age-3
-- Fixes conflict between: bobelectronics, bobplates
-- Severity: LOW
-- Type: produce-per-hour-achievement


if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-3"] then
    local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-3"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-3")
end


-- Patch: PATCH_BOB-PIERCE_GENERIC
-- Description: Generic compatibility patch for damage-type bob-pierce
-- Fixes: CONFLICT_DAMAGE-TYPE_BOB-PIERCE


-- Generic compatibility patch for bob-pierce
-- Fixes conflict between: bobenemies, bobwarfare
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["bob-pierce"] then
    local prototype = data.raw["damage-type"]["bob-pierce"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.bob-pierce")
end


-- Patch: PATCH_BOB-PLASMA_GENERIC
-- Description: Generic compatibility patch for damage-type bob-plasma
-- Fixes: CONFLICT_DAMAGE-TYPE_BOB-PLASMA


-- Generic compatibility patch for bob-plasma
-- Fixes conflict between: bobenemies, bobwarfare, bobvehicleequipment
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["bob-plasma"] then
    local prototype = data.raw["damage-type"]["bob-plasma"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.bob-plasma")
end


-- Patch: PATCH_POISON-CLOUD-VISUAL-DUMMY_GENERIC
-- Description: Generic compatibility patch for create-smoke poison-cloud-visual-dummy
-- Fixes: CONFLICT_CREATE-SMOKE_POISON-CLOUD-VISUAL-DUMMY


-- Generic compatibility patch for poison-cloud-visual-dummy
-- Fixes conflict between: bobenemies, bobwarfare
-- Severity: LOW
-- Type: create-smoke


if data.raw["create-smoke"] and data.raw["create-smoke"]["poison-cloud-visual-dummy"] then
    local prototype = data.raw["create-smoke"]["poison-cloud-visual-dummy"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-smoke.poison-cloud-visual-dummy")
end


-- Patch: PATCH_BOB-INSERTER-LONG_GENERIC
-- Description: Generic compatibility patch for custom-input bob-inserter-long
-- Fixes: CONFLICT_CUSTOM-INPUT_BOB-INSERTER-LONG


-- Generic compatibility patch for bob-inserter-long
-- Fixes conflict between: bobinserters, boblogistics
-- Severity: LOW
-- Type: custom-input


if data.raw["custom-input"] and data.raw["custom-input"]["bob-inserter-long"] then
    local prototype = data.raw["custom-input"]["bob-inserter-long"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "custom-input.bob-inserter-long")
end


-- Patch: PATCH_BOB-ROBOT-PARTS_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-robot-parts
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ROBOT-PARTS


-- Generic compatibility patch for bob-robot-parts
-- Fixes conflict between: bobwarfare, boblogistics
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-robot-parts"] then
    local prototype = data.raw["item-subgroup"]["bob-robot-parts"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-robot-parts")
end


-- Patch: PATCH_SIGNAL-X_GENERIC
-- Description: Generic compatibility patch for virtual signal-X
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-X


-- Generic compatibility patch for signal-X
-- Fixes conflict between: Krastorio2-spaced-out, Spaghetorio, boblogistics, Krastorio2
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-X"] then
    local prototype = data.raw["virtual"]["signal-X"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-X")
end


-- Patch: PATCH_SIGNAL-Y_GENERIC
-- Description: Generic compatibility patch for virtual signal-Y
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-Y


-- Generic compatibility patch for signal-Y
-- Fixes conflict between: Krastorio2-spaced-out, Spaghetorio, boblogistics, Krastorio2
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-Y"] then
    local prototype = data.raw["virtual"]["signal-Y"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-Y")
end


-- Patch: PATCH_SIGNAL-Z_GENERIC
-- Description: Generic compatibility patch for virtual signal-Z
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-Z


-- Generic compatibility patch for signal-Z
-- Fixes conflict between: Krastorio2-spaced-out, Spaghetorio, boblogistics, Krastorio2
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-Z"] then
    local prototype = data.raw["virtual"]["signal-Z"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-Z")
end


-- Patch: PATCH_SIGNAL-T_GENERIC
-- Description: Generic compatibility patch for virtual signal-T
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-T


-- Generic compatibility patch for signal-T
-- Fixes conflict between: boblogistics, Krastorio2-spaced-out, Spaghetorio, Krastorio2, RampantFixed
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-T"] then
    local prototype = data.raw["virtual"]["signal-T"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-T")
end


-- Patch: PATCH_BOB-ORES_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-ores
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-ORES


-- Generic compatibility patch for bob-ores
-- Fixes conflict between: bobores, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-ores"] then
    local prototype = data.raw["item-subgroup"]["bob-ores"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-ores")
end


-- Patch: PATCH_BOB-GEMS-ORE_GENERIC
-- Description: Generic compatibility patch for item-subgroup bob-gems-ore
-- Fixes: CONFLICT_ITEM-SUBGROUP_BOB-GEMS-ORE


-- Generic compatibility patch for bob-gems-ore
-- Fixes conflict between: bobores, bobplates
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-gems-ore"] then
    local prototype = data.raw["item-subgroup"]["bob-gems-ore"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-gems-ore")
end


-- Patch: PATCH_BOB-OXYGEN_GENERIC
-- Description: Generic compatibility patch for fluid bob-oxygen
-- Fixes: CONFLICT_FLUID_BOB-OXYGEN


-- Generic compatibility patch for bob-oxygen
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-oxygen"] then
    local prototype = data.raw["fluid"]["bob-oxygen"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-oxygen")
end


-- Patch: PATCH_BOB-ALIEN-ACID_GENERIC
-- Description: Generic compatibility patch for fluid bob-alien-acid
-- Fixes: CONFLICT_FLUID_BOB-ALIEN-ACID


-- Generic compatibility patch for bob-alien-acid
-- Fixes conflict between: bobvehicleequipment, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-alien-acid"] then
    local prototype = data.raw["fluid"]["bob-alien-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-alien-acid")
end


-- Patch: PATCH_BOB-NITRIC-ACID_GENERIC
-- Description: Generic compatibility patch for fluid bob-nitric-acid
-- Fixes: CONFLICT_FLUID_BOB-NITRIC-ACID


-- Generic compatibility patch for bob-nitric-acid
-- Fixes conflict between: bobwarfare, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-nitric-acid"] then
    local prototype = data.raw["fluid"]["bob-nitric-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-nitric-acid")
end


-- Patch: PATCH_BOB-HYDROGEN_GENERIC
-- Description: Generic compatibility patch for fluid bob-hydrogen
-- Fixes: CONFLICT_FLUID_BOB-HYDROGEN


-- Generic compatibility patch for bob-hydrogen
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-hydrogen"] then
    local prototype = data.raw["fluid"]["bob-hydrogen"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-hydrogen")
end


-- Patch: PATCH_BOB-NITROGEN_GENERIC
-- Description: Generic compatibility patch for fluid bob-nitrogen
-- Fixes: CONFLICT_FLUID_BOB-NITROGEN


-- Generic compatibility patch for bob-nitrogen
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-nitrogen"] then
    local prototype = data.raw["fluid"]["bob-nitrogen"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-nitrogen")
end


-- Patch: PATCH_BOB-CHLORINE_GENERIC
-- Description: Generic compatibility patch for fluid bob-chlorine
-- Fixes: CONFLICT_FLUID_BOB-CHLORINE


-- Generic compatibility patch for bob-chlorine
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-chlorine"] then
    local prototype = data.raw["fluid"]["bob-chlorine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-chlorine")
end


-- Patch: PATCH_BOB-NITROGEN-DIOXIDE_GENERIC
-- Description: Generic compatibility patch for fluid bob-nitrogen-dioxide
-- Fixes: CONFLICT_FLUID_BOB-NITROGEN-DIOXIDE


-- Generic compatibility patch for bob-nitrogen-dioxide
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-nitrogen-dioxide"] then
    local prototype = data.raw["fluid"]["bob-nitrogen-dioxide"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-nitrogen-dioxide")
end


-- Patch: PATCH_BOB-SULFUR-DIOXIDE_GENERIC
-- Description: Generic compatibility patch for fluid bob-sulfur-dioxide
-- Fixes: CONFLICT_FLUID_BOB-SULFUR-DIOXIDE


-- Generic compatibility patch for bob-sulfur-dioxide
-- Fixes conflict between: bobrevamp, bobplates
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["bob-sulfur-dioxide"] then
    local prototype = data.raw["fluid"]["bob-sulfur-dioxide"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-sulfur-dioxide")
end


-- Patch: PATCH_SIGNAL-A_GENERIC
-- Description: Generic compatibility patch for virtual signal-A
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-A


-- Generic compatibility patch for signal-A
-- Fixes conflict between: bobpower, Krastorio2-spaced-out, Spaghetorio, Krastorio2, snouz-big-accumulator, metal-and-stars
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-A"] then
    local prototype = data.raw["virtual"]["signal-A"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-A")
end


-- Patch: PATCH_BOB-PLASMA-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity bob-plasma-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_BOB-PLASMA-EXPLOSION


-- Generic compatibility patch for bob-plasma-explosion
-- Fixes conflict between: bobwarfare, bobvehicleequipment
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["bob-plasma-explosion"] then
    local prototype = data.raw["create-entity"]["bob-plasma-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.bob-plasma-explosion")
end


-- Patch: PATCH_SMALL-SCORCHMARK_GENERIC
-- Description: Generic compatibility patch for create-entity small-scorchmark
-- Fixes: CONFLICT_CREATE-ENTITY_SMALL-SCORCHMARK


-- Generic compatibility patch for small-scorchmark
-- Fixes conflict between: Krastorio2-spaced-out, PlutoniumEnergy, bobvehicleequipment, Krastorio2, bobwarfare, Nuclear_Artillery_QF, RampantArsenalFork
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["small-scorchmark"] then
    local prototype = data.raw["create-entity"]["small-scorchmark"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.small-scorchmark")
end


-- Patch: PATCH_POISON-CLOUD_GENERIC
-- Description: Generic compatibility patch for create-entity poison-cloud
-- Fixes: CONFLICT_CREATE-ENTITY_POISON-CLOUD


-- Generic compatibility patch for poison-cloud
-- Fixes conflict between: bobwarfare, RampantArsenalFork
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["poison-cloud"] then
    local prototype = data.raw["create-entity"]["poison-cloud"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.poison-cloud")
end


-- Patch: PATCH_FIRE-FLAME_GENERIC
-- Description: Generic compatibility patch for create-fire fire-flame
-- Fixes: CONFLICT_CREATE-FIRE_FIRE-FLAME


-- Generic compatibility patch for fire-flame
-- Fixes conflict between: RPGsystem, Kux-OrbitalIonCannon, bobwarfare
-- Severity: LOW
-- Type: create-fire


if data.raw["create-fire"] and data.raw["create-fire"]["fire-flame"] then
    local prototype = data.raw["create-fire"]["fire-flame"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-fire.fire-flame")
end


-- Patch: PATCH_FIRE-FLAME-ON-TREE_GENERIC
-- Description: Generic compatibility patch for create-fire fire-flame-on-tree
-- Fixes: CONFLICT_CREATE-FIRE_FIRE-FLAME-ON-TREE


-- Generic compatibility patch for fire-flame-on-tree
-- Fixes conflict between: Kux-OrbitalIonCannon, bobwarfare, More_Ammo
-- Severity: LOW
-- Type: create-fire


if data.raw["create-fire"] and data.raw["create-fire"]["fire-flame-on-tree"] then
    local prototype = data.raw["create-fire"]["fire-flame-on-tree"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-fire.fire-flame-on-tree")
end


-- Patch: PATCH_BIG-ARTILLERY-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity big-artillery-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_BIG-ARTILLERY-EXPLOSION


-- Generic compatibility patch for big-artillery-explosion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2, bobwarfare, Nuclear_Artillery_QF, RampantArsenalFork
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["big-artillery-explosion"] then
    local prototype = data.raw["create-entity"]["big-artillery-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.big-artillery-explosion")
end


-- Patch: PATCH_NUKE-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity nuke-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_NUKE-EXPLOSION


-- Generic compatibility patch for nuke-explosion
-- Fixes conflict between: Krastorio2-spaced-out, bobwarfare, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["nuke-explosion"] then
    local prototype = data.raw["create-entity"]["nuke-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.nuke-explosion")
end


-- Patch: PATCH_SIGNAL-G_GENERIC
-- Description: Generic compatibility patch for virtual signal-G
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-G


-- Generic compatibility patch for signal-G
-- Fixes conflict between: castra, bobwarfare, rubia
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-G"] then
    local prototype = data.raw["virtual"]["signal-G"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-G")
end


-- Patch: PATCH_KR-HYDROGEN-CHLORIDE_GENERIC
-- Description: Generic compatibility patch for fluid kr-hydrogen-chloride
-- Fixes: CONFLICT_FLUID_KR-HYDROGEN-CHLORIDE


-- Generic compatibility patch for kr-hydrogen-chloride
-- Fixes conflict between: bzsilicon, Krastorio2-spaced-out, Krastorio2, bztitanium, bzcarbon
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-hydrogen-chloride"] then
    local prototype = data.raw["fluid"]["kr-hydrogen-chloride"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-hydrogen-chloride")
end


-- Patch: PATCH_KR-DIRTY-WATER_GENERIC
-- Description: Generic compatibility patch for fluid kr-dirty-water
-- Fixes: CONFLICT_FLUID_KR-DIRTY-WATER


-- Generic compatibility patch for kr-dirty-water
-- Fixes conflict between: Krastorio2-spaced-out, bztin, Krastorio2, bztitanium, bzcarbon, bzlead, bzzirconium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-dirty-water"] then
    local prototype = data.raw["fluid"]["kr-dirty-water"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-dirty-water")
end


-- Patch: PATCH_KR-HEAVY-WATER_GENERIC
-- Description: Generic compatibility patch for fluid kr-heavy-water
-- Fixes: CONFLICT_FLUID_KR-HEAVY-WATER


-- Generic compatibility patch for kr-heavy-water
-- Fixes conflict between: bzcarbon, Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-heavy-water"] then
    local prototype = data.raw["fluid"]["kr-heavy-water"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-heavy-water")
end


-- Patch: PATCH_KR-NITROGEN_GENERIC
-- Description: Generic compatibility patch for fluid kr-nitrogen
-- Fixes: CONFLICT_FLUID_KR-NITROGEN


-- Generic compatibility patch for kr-nitrogen
-- Fixes conflict between: bzcarbon, Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-nitrogen"] then
    local prototype = data.raw["fluid"]["kr-nitrogen"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-nitrogen")
end


-- Patch: PATCH_OXYGEN_GENERIC
-- Description: Generic compatibility patch for surface-property oxygen
-- Fixes: CONFLICT_SURFACE-PROPERTY_OXYGEN


-- Generic compatibility patch for oxygen
-- Fixes conflict between: PlanetsLib, bzcarbon
-- Severity: LOW
-- Type: surface-property


if data.raw["surface-property"] and data.raw["surface-property"]["oxygen"] then
    local prototype = data.raw["surface-property"]["oxygen"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "surface-property.oxygen")
end


-- Patch: PATCH_SE-PARTICLE-STREAM_GENERIC
-- Description: Generic compatibility patch for fluid se-particle-stream
-- Fixes: CONFLICT_FLUID_SE-PARTICLE-STREAM


-- Generic compatibility patch for se-particle-stream
-- Fixes conflict between: bzsilicon, bztin, bztitanium, bzcarbon, bzlead, bzzirconium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["se-particle-stream"] then
    local prototype = data.raw["fluid"]["se-particle-stream"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.se-particle-stream")
end


-- Patch: PATCH_SE-SPACE-COOLANT-SUPERCOOLED_GENERIC
-- Description: Generic compatibility patch for fluid se-space-coolant-supercooled
-- Fixes: CONFLICT_FLUID_SE-SPACE-COOLANT-SUPERCOOLED


-- Generic compatibility patch for se-space-coolant-supercooled
-- Fixes conflict between: bzsilicon, bztin, bztitanium, bzcarbon, bzlead, bzzirconium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["se-space-coolant-supercooled"] then
    local prototype = data.raw["fluid"]["se-space-coolant-supercooled"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.se-space-coolant-supercooled")
end


-- Patch: PATCH_SE-SPACE-COOLANT-HOT_GENERIC
-- Description: Generic compatibility patch for fluid se-space-coolant-hot
-- Fixes: CONFLICT_FLUID_SE-SPACE-COOLANT-HOT


-- Generic compatibility patch for se-space-coolant-hot
-- Fixes conflict between: bzsilicon, bztin, bztitanium, bzcarbon, bzlead, bzzirconium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["se-space-coolant-hot"] then
    local prototype = data.raw["fluid"]["se-space-coolant-hot"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.se-space-coolant-hot")
end


-- Patch: PATCH_STRANGE-MATTER_GENERIC
-- Description: Generic compatibility patch for fluid strange-matter
-- Fixes: CONFLICT_FLUID_STRANGE-MATTER


-- Generic compatibility patch for strange-matter
-- Fixes conflict between: bzsilicon, bztin, bztitanium, bzcarbon, bzlead, bzzirconium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["strange-matter"] then
    local prototype = data.raw["fluid"]["strange-matter"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.strange-matter")
end


-- Patch: PATCH_SE-PYROFLUX_GENERIC
-- Description: Generic compatibility patch for fluid se-pyroflux
-- Fixes: CONFLICT_FLUID_SE-PYROFLUX


-- Generic compatibility patch for se-pyroflux
-- Fixes conflict between: bzsilicon, bztin, bztitanium, bzlead, bzzirconium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["se-pyroflux"] then
    local prototype = data.raw["fluid"]["se-pyroflux"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.se-pyroflux")
end


-- Patch: PATCH_CABLE_GENERIC
-- Description: Generic compatibility patch for item-subgroup cable
-- Fixes: CONFLICT_ITEM-SUBGROUP_CABLE


-- Generic compatibility patch for cable
-- Fixes conflict between: bzsilicon, bztin
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["cable"] then
    local prototype = data.raw["item-subgroup"]["cable"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.cable")
end


-- Patch: PATCH_MOLTEN-COPPER_GENERIC
-- Description: Generic compatibility patch for fluid molten-copper
-- Fixes: CONFLICT_FLUID_MOLTEN-COPPER


-- Generic compatibility patch for molten-copper
-- Fixes conflict between: Krastorio2-spaced-out, Spaghetorio, bztin, Moshine-assets, cubium, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-copper"] then
    local prototype = data.raw["fluid"]["molten-copper"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-copper")
end


-- Patch: PATCH_HYDROGEN-SULFIDE_GENERIC
-- Description: Generic compatibility patch for fluid hydrogen-sulfide
-- Fixes: CONFLICT_FLUID_HYDROGEN-SULFIDE


-- Generic compatibility patch for hydrogen-sulfide
-- Fixes conflict between: corrundum, castra, StopgapNukes
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["hydrogen-sulfide"] then
    local prototype = data.raw["fluid"]["hydrogen-sulfide"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.hydrogen-sulfide")
end


-- Patch: PATCH_MOLTEN-IRON_GENERIC
-- Description: Generic compatibility patch for fluid molten-iron
-- Fixes: CONFLICT_FLUID_MOLTEN-IRON


-- Generic compatibility patch for molten-iron
-- Fixes conflict between: castra, Krastorio2-spaced-out, Spaghetorio, Moshine-assets, Paracelsin, common-prototypes, crushing-industry, foundry-restructuring, Moshine, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-iron"] then
    local prototype = data.raw["fluid"]["molten-iron"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-iron")
end


-- Patch: PATCH_HOLMIUM-SOLUTION_GENERIC
-- Description: Generic compatibility patch for fluid holmium-solution
-- Fixes: CONFLICT_FLUID_HOLMIUM-SOLUTION


-- Generic compatibility patch for holmium-solution
-- Fixes conflict between: Cerys-Moon-of-Fulgora, castra, fulgora-coralmium-agriculture, rubia
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["holmium-solution"] then
    local prototype = data.raw["fluid"]["holmium-solution"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.holmium-solution")
end


-- Patch: PATCH_METHANE_GENERIC
-- Description: Generic compatibility patch for fluid methane
-- Fixes: CONFLICT_FLUID_METHANE


-- Generic compatibility patch for methane
-- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["methane"] then
    local prototype = data.raw["fluid"]["methane"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.methane")
end


-- Patch: PATCH_NITRIC-ACID_GENERIC
-- Description: Generic compatibility patch for fluid nitric-acid
-- Fixes: CONFLICT_FLUID_NITRIC-ACID


-- Generic compatibility patch for nitric-acid
-- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["nitric-acid"] then
    local prototype = data.raw["fluid"]["nitric-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.nitric-acid")
end


-- Patch: PATCH_COLD_GENERIC
-- Description: Generic compatibility patch for damage-type cold
-- Fixes: CONFLICT_DAMAGE-TYPE_COLD


-- Generic compatibility patch for cold
-- Fixes conflict between: Cold_biters, enemyracemanager
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["cold"] then
    local prototype = data.raw["damage-type"]["cold"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.cold")
end


-- Patch: PATCH_FLYING_GENERIC
-- Description: Generic compatibility patch for collision-layer flying
-- Fixes: CONFLICT_COLLISION-LAYER_FLYING


-- Generic compatibility patch for flying
-- Fixes conflict between: enemyracemanager, combat-mechanics-overhaul
-- Severity: LOW
-- Type: collision-layer


if data.raw["collision-layer"] and data.raw["collision-layer"]["flying"] then
    local prototype = data.raw["collision-layer"]["flying"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "collision-layer.flying")
end


-- Patch: PATCH_FLYING_GENERIC
-- Description: Generic compatibility patch for trigger-target-type flying
-- Fixes: CONFLICT_TRIGGER-TARGET-TYPE_FLYING


-- Generic compatibility patch for flying
-- Fixes conflict between: enemyracemanager, combat-mechanics-overhaul
-- Severity: LOW
-- Type: trigger-target-type


if data.raw["trigger-target-type"] and data.raw["trigger-target-type"]["flying"] then
    local prototype = data.raw["trigger-target-type"]["flying"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "trigger-target-type.flying")
end


-- Patch: PATCH_SPACE-NANITES_GENERIC
-- Description: Generic compatibility patch for item-subgroup space-nanites
-- Fixes: CONFLICT_ITEM-SUBGROUP_SPACE-NANITES


-- Generic compatibility patch for space-nanites
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["space-nanites"] then
    local prototype = data.raw["item-subgroup"]["space-nanites"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.space-nanites")
end


-- Patch: PATCH_SHIPYARD-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup shipyard-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_SHIPYARD-PROCESSES


-- Generic compatibility patch for shipyard-processes
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["shipyard-processes"] then
    local prototype = data.raw["item-subgroup"]["shipyard-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.shipyard-processes")
end


-- Patch: PATCH_NIX-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup nix-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_NIX-PROCESSES


-- Generic compatibility patch for nix-processes
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["nix-processes"] then
    local prototype = data.raw["item-subgroup"]["nix-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.nix-processes")
end


-- Patch: PATCH_RINGWORLD-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup ringworld-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_RINGWORLD-PROCESSES


-- Generic compatibility patch for ringworld-processes
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["ringworld-processes"] then
    local prototype = data.raw["item-subgroup"]["ringworld-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.ringworld-processes")
end


-- Patch: PATCH_MIRANDUS-PROCESSES_GENERIC
-- Description: Generic compatibility patch for item-subgroup mirandus-processes
-- Fixes: CONFLICT_ITEM-SUBGROUP_MIRANDUS-PROCESSES


-- Generic compatibility patch for mirandus-processes
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["mirandus-processes"] then
    local prototype = data.raw["item-subgroup"]["mirandus-processes"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.mirandus-processes")
end


-- Patch: PATCH_QUANTUM-PROCESSING_GENERIC
-- Description: Generic compatibility patch for item-subgroup quantum-processing
-- Fixes: CONFLICT_ITEM-SUBGROUP_QUANTUM-PROCESSING


-- Generic compatibility patch for quantum-processing
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["quantum-processing"] then
    local prototype = data.raw["item-subgroup"]["quantum-processing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.quantum-processing")
end


-- Patch: PATCH_QUANTUM-CONVERSION_GENERIC
-- Description: Generic compatibility patch for item-subgroup quantum-conversion
-- Fixes: CONFLICT_ITEM-SUBGROUP_QUANTUM-CONVERSION


-- Generic compatibility patch for quantum-conversion
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["quantum-conversion"] then
    local prototype = data.raw["item-subgroup"]["quantum-conversion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.quantum-conversion")
end


-- Patch: PATCH_LIQUID-FUEL_GENERIC
-- Description: Generic compatibility patch for item-subgroup liquid-fuel
-- Fixes: CONFLICT_ITEM-SUBGROUP_LIQUID-FUEL


-- Generic compatibility patch for liquid-fuel
-- Fixes conflict between: common-prototypes, metal-and-stars
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["liquid-fuel"] then
    local prototype = data.raw["item-subgroup"]["liquid-fuel"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.liquid-fuel")
end


-- Patch: PATCH_MOLTEN-GOLD_GENERIC
-- Description: Generic compatibility patch for fluid molten-gold
-- Fixes: CONFLICT_FLUID_MOLTEN-GOLD


-- Generic compatibility patch for molten-gold
-- Fixes conflict between: common-prototypes, lignumis
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-gold"] then
    local prototype = data.raw["fluid"]["molten-gold"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-gold")
end


-- Patch: PATCH_MOLTEN-GLASS_GENERIC
-- Description: Generic compatibility patch for fluid molten-glass
-- Fixes: CONFLICT_FLUID_MOLTEN-GLASS


-- Generic compatibility patch for molten-glass
-- Fixes conflict between: crushing-industry, common-prototypes
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["molten-glass"] then
    local prototype = data.raw["fluid"]["molten-glass"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-glass")
end


-- Patch: PATCH_DREAM-CONCENTRATE_GENERIC
-- Description: Generic compatibility patch for fluid dream-concentrate
-- Fixes: CONFLICT_FLUID_DREAM-CONCENTRATE


-- Generic compatibility patch for dream-concentrate
-- Fixes conflict between: corrundum, cubium, secretas
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["dream-concentrate"] then
    local prototype = data.raw["fluid"]["dream-concentrate"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.dream-concentrate")
end


-- Patch: PATCH_THRUSTER-FUEL_GENERIC
-- Description: Generic compatibility patch for fluid thruster-fuel
-- Fixes: CONFLICT_FLUID_THRUSTER-FUEL


-- Generic compatibility patch for thruster-fuel
-- Fixes conflict between: corrundum, slp-dyson-sphere-reworked, VoidProcessing, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["thruster-fuel"] then
    local prototype = data.raw["fluid"]["thruster-fuel"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.thruster-fuel")
end


-- Patch: PATCH_THRUSTER-OXIDIZER_GENERIC
-- Description: Generic compatibility patch for fluid thruster-oxidizer
-- Fixes: CONFLICT_FLUID_THRUSTER-OXIDIZER


-- Generic compatibility patch for thruster-oxidizer
-- Fixes conflict between: corrundum, slp-dyson-sphere-reworked, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["thruster-oxidizer"] then
    local prototype = data.raw["fluid"]["thruster-oxidizer"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.thruster-oxidizer")
end


-- Patch: PATCH_BASIC-CRUSHING_GENERIC
-- Description: Generic compatibility patch for recipe-category basic-crushing
-- Fixes: CONFLICT_RECIPE-CATEGORY_BASIC-CRUSHING


-- Generic compatibility patch for basic-crushing
-- Fixes conflict between: crushing-industry, quirkycat_base
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["basic-crushing"] then
    local prototype = data.raw["recipe-category"]["basic-crushing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.basic-crushing")
end


-- Patch: PATCH_BASIC-CRUSHING-OR-CRAFTING_GENERIC
-- Description: Generic compatibility patch for recipe-category basic-crushing-or-crafting
-- Fixes: CONFLICT_RECIPE-CATEGORY_BASIC-CRUSHING-OR-CRAFTING


-- Generic compatibility patch for basic-crushing-or-crafting
-- Fixes conflict between: wood-industry, crushing-industry
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["basic-crushing-or-crafting"] then
    local prototype = data.raw["recipe-category"]["basic-crushing-or-crafting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.basic-crushing-or-crafting")
end


-- Patch: PATCH_SMALL-SCORCHMARK-TINTABLE_GENERIC
-- Description: Generic compatibility patch for create-entity small-scorchmark-tintable
-- Fixes: CONFLICT_CREATE-ENTITY_SMALL-SCORCHMARK-TINTABLE


-- Generic compatibility patch for small-scorchmark-tintable
-- Fixes conflict between: wood-military, cubium, RenaiTransportation
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["small-scorchmark-tintable"] then
    local prototype = data.raw["create-entity"]["small-scorchmark-tintable"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.small-scorchmark-tintable")
end


-- Patch: PATCH_ULTRADENSE-LAVA_GENERIC
-- Description: Generic compatibility patch for fluid ultradense-lava
-- Fixes: CONFLICT_FLUID_ULTRADENSE-LAVA


-- Generic compatibility patch for ultradense-lava
-- Fixes conflict between: lilys-cubeine, cubium
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["ultradense-lava"] then
    local prototype = data.raw["fluid"]["ultradense-lava"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.ultradense-lava")
end


-- Patch: PATCH_TREE-PLANT_GENERIC
-- Description: Generic compatibility patch for plant tree-plant
-- Fixes: CONFLICT_PLANT_TREE-PLANT


-- Generic compatibility patch for tree-plant
-- Fixes conflict between: early-agriculture, lignumis
-- Severity: LOW
-- Type: plant


if data.raw["plant"] and data.raw["plant"]["tree-plant"] then
    local prototype = data.raw["plant"]["tree-plant"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "plant.tree-plant")
end


-- Patch: PATCH_HEALING_GENERIC
-- Description: Generic compatibility patch for damage-type healing
-- Fixes: CONFLICT_DAMAGE-TYPE_HEALING


-- Generic compatibility patch for healing
-- Fixes conflict between: enemyracemanager, RampantFixed, RampantArsenalFork
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["healing"] then
    local prototype = data.raw["damage-type"]["healing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.healing")
end


-- Patch: PATCH_PROTOSS--ARCHON-HIT-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-explosion protoss--archon-hit-explosion
-- Fixes: CONFLICT_CREATE-EXPLOSION_PROTOSS--ARCHON-HIT-EXPLOSION


-- Generic compatibility patch for protoss--archon-hit-explosion
-- Fixes conflict between: erm_toss, erm_toss_economy
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--archon-hit-explosion"] then
    local prototype = data.raw["create-explosion"]["protoss--archon-hit-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--archon-hit-explosion")
end


-- Patch: PATCH_PROTOSS--CORSAIR-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-explosion protoss--corsair-explosion
-- Fixes: CONFLICT_CREATE-EXPLOSION_PROTOSS--CORSAIR-EXPLOSION


-- Generic compatibility patch for protoss--corsair-explosion
-- Fixes conflict between: erm_toss, erm_toss_economy
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--corsair-explosion"] then
    local prototype = data.raw["create-explosion"]["protoss--corsair-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--corsair-explosion")
end


-- Patch: PATCH_PROTOSS--DISRUPT-80_GENERIC
-- Description: Generic compatibility patch for create-explosion protoss--disrupt-80
-- Fixes: CONFLICT_CREATE-EXPLOSION_PROTOSS--DISRUPT-80


-- Generic compatibility patch for protoss--disrupt-80
-- Fixes conflict between: erm_toss, erm_toss_economy
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--disrupt-80"] then
    local prototype = data.raw["create-explosion"]["protoss--disrupt-80"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--disrupt-80")
end


-- Patch: PATCH_MEDIUM-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-explosion medium-explosion
-- Fixes: CONFLICT_CREATE-EXPLOSION_MEDIUM-EXPLOSION


-- Generic compatibility patch for medium-explosion
-- Fixes conflict between: erm_zerg_economy, erm_zerg
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["medium-explosion"] then
    local prototype = data.raw["create-explosion"]["medium-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.medium-explosion")
end


-- Patch: PATCH_KR-NITRIC-ACID_GENERIC
-- Description: Generic compatibility patch for fluid kr-nitric-acid
-- Fixes: CONFLICT_FLUID_KR-NITRIC-ACID


-- Generic compatibility patch for kr-nitric-acid
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-nitric-acid"] then
    local prototype = data.raw["fluid"]["kr-nitric-acid"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-nitric-acid")
end


-- Patch: PATCH_SIGNAL-I_GENERIC
-- Description: Generic compatibility patch for virtual signal-I
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-I


-- Generic compatibility patch for signal-I
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-I"] then
    local prototype = data.raw["virtual"]["signal-I"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-I")
end


-- Patch: PATCH_KR-LASER-EXPLOSION-GUNSHOT_GENERIC
-- Description: Generic compatibility patch for create-explosion kr-laser-explosion-gunshot
-- Fixes: CONFLICT_CREATE-EXPLOSION_KR-LASER-EXPLOSION-GUNSHOT


-- Generic compatibility patch for kr-laser-explosion-gunshot
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["kr-laser-explosion-gunshot"] then
    local prototype = data.raw["create-explosion"]["kr-laser-explosion-gunshot"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.kr-laser-explosion-gunshot")
end


-- Patch: PATCH_SIGNAL-P_GENERIC
-- Description: Generic compatibility patch for virtual signal-P
-- Fixes: CONFLICT_VIRTUAL_SIGNAL-P


-- Generic compatibility patch for signal-P
-- Fixes conflict between: Krastorio2-spaced-out, Spaghetorio, Krastorio2
-- Severity: LOW
-- Type: virtual


if data.raw["virtual"] and data.raw["virtual"]["signal-P"] then
    local prototype = data.raw["virtual"]["signal-P"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-P")
end


-- Patch: PATCH_CHARACTER_GENERIC
-- Description: Generic compatibility patch for trigger-target-type character
-- Fixes: CONFLICT_TRIGGER-TARGET-TYPE_CHARACTER


-- Generic compatibility patch for character
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: trigger-target-type


if data.raw["trigger-target-type"] and data.raw["trigger-target-type"]["character"] then
    local prototype = data.raw["trigger-target-type"]["character"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "trigger-target-type.character")
end


-- Patch: PATCH_KR-TESLA-COIL-TRIGGER_GENERIC
-- Description: Generic compatibility patch for trigger-target-type kr-tesla-coil-trigger
-- Fixes: CONFLICT_TRIGGER-TARGET-TYPE_KR-TESLA-COIL-TRIGGER


-- Generic compatibility patch for kr-tesla-coil-trigger
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: trigger-target-type


if data.raw["trigger-target-type"] and data.raw["trigger-target-type"]["kr-tesla-coil-trigger"] then
    local prototype = data.raw["trigger-target-type"]["kr-tesla-coil-trigger"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "trigger-target-type.kr-tesla-coil-trigger")
end


-- Patch: PATCH_KR_TESLA_COIL_GENERIC
-- Description: Generic compatibility patch for collision-layer kr_tesla_coil
-- Fixes: CONFLICT_COLLISION-LAYER_KR_TESLA_COIL


-- Generic compatibility patch for kr_tesla_coil
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: collision-layer


if data.raw["collision-layer"] and data.raw["collision-layer"]["kr_tesla_coil"] then
    local prototype = data.raw["collision-layer"]["kr_tesla_coil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "collision-layer.kr_tesla_coil")
end


-- Patch: PATCH_KR-IMPULSE-RIFLE_GENERIC
-- Description: Generic compatibility patch for ammo-category kr-impulse-rifle
-- Fixes: CONFLICT_AMMO-CATEGORY_KR-IMPULSE-RIFLE


-- Generic compatibility patch for kr-impulse-rifle
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: ammo-category


if data.raw["ammo-category"] and data.raw["ammo-category"]["kr-impulse-rifle"] then
    local prototype = data.raw["ammo-category"]["kr-impulse-rifle"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo-category.kr-impulse-rifle")
end


-- Patch: PATCH_KR-HEAVY-ROCKET_GENERIC
-- Description: Generic compatibility patch for ammo-category kr-heavy-rocket
-- Fixes: CONFLICT_AMMO-CATEGORY_KR-HEAVY-ROCKET


-- Generic compatibility patch for kr-heavy-rocket
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: ammo-category


if data.raw["ammo-category"] and data.raw["ammo-category"]["kr-heavy-rocket"] then
    local prototype = data.raw["ammo-category"]["kr-heavy-rocket"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo-category.kr-heavy-rocket")
end


-- Patch: PATCH_KR-RAILGUN-SHELL_GENERIC
-- Description: Generic compatibility patch for ammo-category kr-railgun-shell
-- Fixes: CONFLICT_AMMO-CATEGORY_KR-RAILGUN-SHELL


-- Generic compatibility patch for kr-railgun-shell
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: ammo-category


if data.raw["ammo-category"] and data.raw["ammo-category"]["kr-railgun-shell"] then
    local prototype = data.raw["ammo-category"]["kr-railgun-shell"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo-category.kr-railgun-shell")
end


-- Patch: PATCH_KR-TURRET-MISSILE_GENERIC
-- Description: Generic compatibility patch for ammo-category kr-turret-missile
-- Fixes: CONFLICT_AMMO-CATEGORY_KR-TURRET-MISSILE


-- Generic compatibility patch for kr-turret-missile
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: ammo-category


if data.raw["ammo-category"] and data.raw["ammo-category"]["kr-turret-missile"] then
    local prototype = data.raw["ammo-category"]["kr-turret-missile"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo-category.kr-turret-missile")
end


-- Patch: PATCH_KR-PISTOL_GENERIC
-- Description: Generic compatibility patch for ammo-category kr-pistol
-- Fixes: CONFLICT_AMMO-CATEGORY_KR-PISTOL


-- Generic compatibility patch for kr-pistol
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: ammo-category


if data.raw["ammo-category"] and data.raw["ammo-category"]["kr-pistol"] then
    local prototype = data.raw["ammo-category"]["kr-pistol"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo-category.kr-pistol")
end


-- Patch: PATCH_KR-ANTI-MATERIEL-RIFLE-AMMO_GENERIC
-- Description: Generic compatibility patch for ammo-category kr-anti-materiel-rifle-ammo
-- Fixes: CONFLICT_AMMO-CATEGORY_KR-ANTI-MATERIEL-RIFLE-AMMO


-- Generic compatibility patch for kr-anti-materiel-rifle-ammo
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: ammo-category


if data.raw["ammo-category"] and data.raw["ammo-category"]["kr-anti-materiel-rifle-ammo"] then
    local prototype = data.raw["ammo-category"]["kr-anti-materiel-rifle-ammo"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo-category.kr-anti-materiel-rifle-ammo")
end


-- Patch: PATCH_KR-VEHICLE_GENERIC
-- Description: Generic compatibility patch for equipment-category kr-vehicle
-- Fixes: CONFLICT_EQUIPMENT-CATEGORY_KR-VEHICLE


-- Generic compatibility patch for kr-vehicle
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: equipment-category


if data.raw["equipment-category"] and data.raw["equipment-category"]["kr-vehicle"] then
    local prototype = data.raw["equipment-category"]["kr-vehicle"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "equipment-category.kr-vehicle")
end


-- Patch: PATCH_KR-VEHICLE-MOTOR_GENERIC
-- Description: Generic compatibility patch for equipment-category kr-vehicle-motor
-- Fixes: CONFLICT_EQUIPMENT-CATEGORY_KR-VEHICLE-MOTOR


-- Generic compatibility patch for kr-vehicle-motor
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: equipment-category


if data.raw["equipment-category"] and data.raw["equipment-category"]["kr-vehicle-motor"] then
    local prototype = data.raw["equipment-category"]["kr-vehicle-motor"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "equipment-category.kr-vehicle-motor")
end


-- Patch: PATCH_KR-VEHICLE-ROBOPORT_GENERIC
-- Description: Generic compatibility patch for equipment-category kr-vehicle-roboport
-- Fixes: CONFLICT_EQUIPMENT-CATEGORY_KR-VEHICLE-ROBOPORT


-- Generic compatibility patch for kr-vehicle-roboport
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: equipment-category


if data.raw["equipment-category"] and data.raw["equipment-category"]["kr-vehicle-roboport"] then
    local prototype = data.raw["equipment-category"]["kr-vehicle-roboport"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "equipment-category.kr-vehicle-roboport")
end


-- Patch: PATCH_KR-ANTIMATTER-FUEL_GENERIC
-- Description: Generic compatibility patch for fuel-category kr-antimatter-fuel
-- Fixes: CONFLICT_FUEL-CATEGORY_KR-ANTIMATTER-FUEL


-- Generic compatibility patch for kr-antimatter-fuel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fuel-category


if data.raw["fuel-category"] and data.raw["fuel-category"]["kr-antimatter-fuel"] then
    local prototype = data.raw["fuel-category"]["kr-antimatter-fuel"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fuel-category.kr-antimatter-fuel")
end


-- Patch: PATCH_KR-FUSION-FUEL_GENERIC
-- Description: Generic compatibility patch for fuel-category kr-fusion-fuel
-- Fixes: CONFLICT_FUEL-CATEGORY_KR-FUSION-FUEL


-- Generic compatibility patch for kr-fusion-fuel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fuel-category


if data.raw["fuel-category"] and data.raw["fuel-category"]["kr-fusion-fuel"] then
    local prototype = data.raw["fuel-category"]["kr-fusion-fuel"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fuel-category.kr-fusion-fuel")
end


-- Patch: PATCH_KR-VEHICLE-FUEL_GENERIC
-- Description: Generic compatibility patch for fuel-category kr-vehicle-fuel
-- Fixes: CONFLICT_FUEL-CATEGORY_KR-VEHICLE-FUEL


-- Generic compatibility patch for kr-vehicle-fuel
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fuel-category


if data.raw["fuel-category"] and data.raw["fuel-category"]["kr-vehicle-fuel"] then
    local prototype = data.raw["fuel-category"]["kr-vehicle-fuel"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fuel-category.kr-vehicle-fuel")
end


-- Patch: PATCH_KR-SMELTING-CRAFTING_GENERIC
-- Description: Generic compatibility patch for item-group kr-smelting-crafting
-- Fixes: CONFLICT_ITEM-GROUP_KR-SMELTING-CRAFTING


-- Generic compatibility patch for kr-smelting-crafting
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-group


if data.raw["item-group"] and data.raw["item-group"]["kr-smelting-crafting"] then
    local prototype = data.raw["item-group"]["kr-smelting-crafting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-group.kr-smelting-crafting")
end


-- Patch: PATCH_KR-CHARACTER-EQUIPMENT_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-character-equipment
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-CHARACTER-EQUIPMENT


-- Generic compatibility patch for kr-character-equipment
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-character-equipment"] then
    local prototype = data.raw["item-subgroup"]["kr-character-equipment"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-character-equipment")
end


-- Patch: PATCH_KR-CHEST_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-chest
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-CHEST


-- Generic compatibility patch for kr-chest
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-chest"] then
    local prototype = data.raw["item-subgroup"]["kr-chest"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-chest")
end


-- Patch: PATCH_KR-STRONGBOX_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-strongbox
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-STRONGBOX


-- Generic compatibility patch for kr-strongbox
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-strongbox"] then
    local prototype = data.raw["item-subgroup"]["kr-strongbox"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-strongbox")
end


-- Patch: PATCH_KR-WAREHOUSE_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-warehouse
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-WAREHOUSE


-- Generic compatibility patch for kr-warehouse
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-warehouse"] then
    local prototype = data.raw["item-subgroup"]["kr-warehouse"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-warehouse")
end


-- Patch: PATCH_KR-SPECIAL-SIGNALS_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-special-signals
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-SPECIAL-SIGNALS


-- Generic compatibility patch for kr-special-signals
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-special-signals"] then
    local prototype = data.raw["item-subgroup"]["kr-special-signals"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-special-signals")
end


-- Patch: PATCH_KR-SPECIAL-SIGNALS-2_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-special-signals-2
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-SPECIAL-SIGNALS-2


-- Generic compatibility patch for kr-special-signals-2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-special-signals-2"] then
    local prototype = data.raw["item-subgroup"]["kr-special-signals-2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-special-signals-2")
end


-- Patch: PATCH_KR-MATTER-CONVERSION_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-matter-conversion
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-MATTER-CONVERSION


-- Generic compatibility patch for kr-matter-conversion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-matter-conversion"] then
    local prototype = data.raw["item-subgroup"]["kr-matter-conversion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-matter-conversion")
end


-- Patch: PATCH_KR-MATTER-DECONVERSION_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-matter-deconversion
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-MATTER-DECONVERSION


-- Generic compatibility patch for kr-matter-deconversion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-matter-deconversion"] then
    local prototype = data.raw["item-subgroup"]["kr-matter-deconversion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-matter-deconversion")
end


-- Patch: PATCH_KR-RADAR_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-radar
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-RADAR


-- Generic compatibility patch for kr-radar
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-radar"] then
    local prototype = data.raw["item-subgroup"]["kr-radar"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-radar")
end


-- Patch: PATCH_KR-RAILGUN-TURRET_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-railgun-turret
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-RAILGUN-TURRET


-- Generic compatibility patch for kr-railgun-turret
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-railgun-turret"] then
    local prototype = data.raw["item-subgroup"]["kr-railgun-turret"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-railgun-turret")
end


-- Patch: PATCH_KR-ROCKET-TURRET_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-rocket-turret
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-ROCKET-TURRET


-- Generic compatibility patch for kr-rocket-turret
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-rocket-turret"] then
    local prototype = data.raw["item-subgroup"]["kr-rocket-turret"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-rocket-turret")
end


-- Patch: PATCH_KR-SMELTING-CRAFTING_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-smelting-crafting
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-SMELTING-CRAFTING


-- Generic compatibility patch for kr-smelting-crafting
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-smelting-crafting"] then
    local prototype = data.raw["item-subgroup"]["kr-smelting-crafting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-smelting-crafting")
end


-- Patch: PATCH_KR-VANILLA-TURRET_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-vanilla-turret
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-VANILLA-TURRET


-- Generic compatibility patch for kr-vanilla-turret
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-vanilla-turret"] then
    local prototype = data.raw["item-subgroup"]["kr-vanilla-turret"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-vanilla-turret")
end


-- Patch: PATCH_KR-VEHICLE-MOTOR_GENERIC
-- Description: Generic compatibility patch for item-subgroup kr-vehicle-motor
-- Fixes: CONFLICT_ITEM-SUBGROUP_KR-VEHICLE-MOTOR


-- Generic compatibility patch for kr-vehicle-motor
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["kr-vehicle-motor"] then
    local prototype = data.raw["item-subgroup"]["kr-vehicle-motor"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.kr-vehicle-motor")
end


-- Patch: PATCH_KR-ADVANCED-CHEMISTRY_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-advanced-chemistry
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-ADVANCED-CHEMISTRY


-- Generic compatibility patch for kr-advanced-chemistry
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-advanced-chemistry"] then
    local prototype = data.raw["recipe-category"]["kr-advanced-chemistry"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-advanced-chemistry")
end


-- Patch: PATCH_KR-ADVANCED-SMELTING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-advanced-smelting
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-ADVANCED-SMELTING


-- Generic compatibility patch for kr-advanced-smelting
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-advanced-smelting"] then
    local prototype = data.raw["recipe-category"]["kr-advanced-smelting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-advanced-smelting")
end


-- Patch: PATCH_KR-AIR-PURIFICATION_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-air-purification
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-AIR-PURIFICATION


-- Generic compatibility patch for kr-air-purification
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-air-purification"] then
    local prototype = data.raw["recipe-category"]["kr-air-purification"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-air-purification")
end


-- Patch: PATCH_KR-ATMOSPHERE-CONDENSATION_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-atmosphere-condensation
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-ATMOSPHERE-CONDENSATION


-- Generic compatibility patch for kr-atmosphere-condensation
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-atmosphere-condensation"] then
    local prototype = data.raw["recipe-category"]["kr-atmosphere-condensation"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-atmosphere-condensation")
end


-- Patch: PATCH_KR-BIOPROCESSING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-bioprocessing
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-BIOPROCESSING


-- Generic compatibility patch for kr-bioprocessing
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-bioprocessing"] then
    local prototype = data.raw["recipe-category"]["kr-bioprocessing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-bioprocessing")
end


-- Patch: PATCH_KR-CRUSHING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-crushing
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-CRUSHING


-- Generic compatibility patch for kr-crushing
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-crushing"] then
    local prototype = data.raw["recipe-category"]["kr-crushing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-crushing")
end


-- Patch: PATCH_KR-ELECTROLYSIS_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-electrolysis
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-ELECTROLYSIS


-- Generic compatibility patch for kr-electrolysis
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-electrolysis"] then
    local prototype = data.raw["recipe-category"]["kr-electrolysis"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-electrolysis")
end


-- Patch: PATCH_KR-FLUID-FILTRATION_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-fluid-filtration
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-FLUID-FILTRATION


-- Generic compatibility patch for kr-fluid-filtration
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-fluid-filtration"] then
    local prototype = data.raw["recipe-category"]["kr-fluid-filtration"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-fluid-filtration")
end


-- Patch: PATCH_KR-FUEL-BURNING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-fuel-burning
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-FUEL-BURNING


-- Generic compatibility patch for kr-fuel-burning
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-fuel-burning"] then
    local prototype = data.raw["recipe-category"]["kr-fuel-burning"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-fuel-burning")
end


-- Patch: PATCH_KR-FUEL-REFINERY_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-fuel-refinery
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-FUEL-REFINERY


-- Generic compatibility patch for kr-fuel-refinery
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-fuel-refinery"] then
    local prototype = data.raw["recipe-category"]["kr-fuel-refinery"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-fuel-refinery")
end


-- Patch: PATCH_KR-GROWING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-growing
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-GROWING


-- Generic compatibility patch for kr-growing
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-growing"] then
    local prototype = data.raw["recipe-category"]["kr-growing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-growing")
end


-- Patch: PATCH_KR-MATTER-CONVERSION_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-matter-conversion
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-MATTER-CONVERSION


-- Generic compatibility patch for kr-matter-conversion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-matter-conversion"] then
    local prototype = data.raw["recipe-category"]["kr-matter-conversion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-matter-conversion")
end


-- Patch: PATCH_KR-MATTER-DECONVERSION_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-matter-deconversion
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-MATTER-DECONVERSION


-- Generic compatibility patch for kr-matter-deconversion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-matter-deconversion"] then
    local prototype = data.raw["recipe-category"]["kr-matter-deconversion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-matter-deconversion")
end


-- Patch: PATCH_KR-NUCLEAR-FUSION_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-nuclear-fusion
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-NUCLEAR-FUSION


-- Generic compatibility patch for kr-nuclear-fusion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-nuclear-fusion"] then
    local prototype = data.raw["recipe-category"]["kr-nuclear-fusion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-nuclear-fusion")
end


-- Patch: PATCH_KR-RESEARCH-DATA_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-research-data
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-RESEARCH-DATA


-- Generic compatibility patch for kr-research-data
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-research-data"] then
    local prototype = data.raw["recipe-category"]["kr-research-data"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-research-data")
end


-- Patch: PATCH_KR-SMELTING-CRAFTING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-smelting-crafting
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-SMELTING-CRAFTING


-- Generic compatibility patch for kr-smelting-crafting
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-smelting-crafting"] then
    local prototype = data.raw["recipe-category"]["kr-smelting-crafting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-smelting-crafting")
end


-- Patch: PATCH_KR-STABILIZER-CHARGING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-stabilizer-charging
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-STABILIZER-CHARGING


-- Generic compatibility patch for kr-stabilizer-charging
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-stabilizer-charging"] then
    local prototype = data.raw["recipe-category"]["kr-stabilizer-charging"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-stabilizer-charging")
end


-- Patch: PATCH_KR-VOID-CRUSHING_GENERIC
-- Description: Generic compatibility patch for recipe-category kr-void-crushing
-- Fixes: CONFLICT_RECIPE-CATEGORY_KR-VOID-CRUSHING


-- Generic compatibility patch for kr-void-crushing
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["kr-void-crushing"] then
    local prototype = data.raw["recipe-category"]["kr-void-crushing"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.kr-void-crushing")
end


-- Patch: PATCH_KR-QUARRY_GENERIC
-- Description: Generic compatibility patch for resource-category kr-quarry
-- Fixes: CONFLICT_RESOURCE-CATEGORY_KR-QUARRY


-- Generic compatibility patch for kr-quarry
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: resource-category


if data.raw["resource-category"] and data.raw["resource-category"]["kr-quarry"] then
    local prototype = data.raw["resource-category"]["kr-quarry"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "resource-category.kr-quarry")
end


-- Patch: PATCH_KR-OIL_GENERIC
-- Description: Generic compatibility patch for resource-category kr-oil
-- Fixes: CONFLICT_RESOURCE-CATEGORY_KR-OIL


-- Generic compatibility patch for kr-oil
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: resource-category


if data.raw["resource-category"] and data.raw["resource-category"]["kr-oil"] then
    local prototype = data.raw["resource-category"]["kr-oil"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "resource-category.kr-oil")
end


-- Patch: PATCH_KR-CHANGE-ROBOPORT-STATE_GENERIC
-- Description: Generic compatibility patch for custom-input kr-change-roboport-state
-- Fixes: CONFLICT_CUSTOM-INPUT_KR-CHANGE-ROBOPORT-STATE


-- Generic compatibility patch for kr-change-roboport-state
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: custom-input


if data.raw["custom-input"] and data.raw["custom-input"]["kr-change-roboport-state"] then
    local prototype = data.raw["custom-input"]["kr-change-roboport-state"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "custom-input.kr-change-roboport-state")
end


-- Patch: PATCH_KR-LINKED-FOCUS-SEARCH_GENERIC
-- Description: Generic compatibility patch for custom-input kr-linked-focus-search
-- Fixes: CONFLICT_CUSTOM-INPUT_KR-LINKED-FOCUS-SEARCH


-- Generic compatibility patch for kr-linked-focus-search
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: custom-input


if data.raw["custom-input"] and data.raw["custom-input"]["kr-linked-focus-search"] then
    local prototype = data.raw["custom-input"]["kr-linked-focus-search"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "custom-input.kr-linked-focus-search")
end


-- Patch: PATCH_KR-JACKHAMMER_GENERIC
-- Description: Generic compatibility patch for custom-input kr-jackhammer
-- Fixes: CONFLICT_CUSTOM-INPUT_KR-JACKHAMMER


-- Generic compatibility patch for kr-jackhammer
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: custom-input


if data.raw["custom-input"] and data.raw["custom-input"]["kr-jackhammer"] then
    local prototype = data.raw["custom-input"]["kr-jackhammer"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "custom-input.kr-jackhammer")
end


-- Patch: PATCH_KR-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for damage-type kr-explosion
-- Fixes: CONFLICT_DAMAGE-TYPE_KR-EXPLOSION


-- Generic compatibility patch for kr-explosion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["kr-explosion"] then
    local prototype = data.raw["damage-type"]["kr-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.kr-explosion")
end


-- Patch: PATCH_KR-RADIOACTIVE_GENERIC
-- Description: Generic compatibility patch for damage-type kr-radioactive
-- Fixes: CONFLICT_DAMAGE-TYPE_KR-RADIOACTIVE


-- Generic compatibility patch for kr-radioactive
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: damage-type


if data.raw["damage-type"] and data.raw["damage-type"]["kr-radioactive"] then
    local prototype = data.raw["damage-type"]["kr-radioactive"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.kr-radioactive")
end


-- Patch: PATCH_KR-IMPULSE-RIFLE-BEAM_GENERIC
-- Description: Generic compatibility patch for create-explosion kr-impulse-rifle-beam
-- Fixes: CONFLICT_CREATE-EXPLOSION_KR-IMPULSE-RIFLE-BEAM


-- Generic compatibility patch for kr-impulse-rifle-beam
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["kr-impulse-rifle-beam"] then
    local prototype = data.raw["create-explosion"]["kr-impulse-rifle-beam"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.kr-impulse-rifle-beam")
end


-- Patch: PATCH_ARTILLERY-CANNON-MUZZLE-FLASH_GENERIC
-- Description: Generic compatibility patch for create-entity artillery-cannon-muzzle-flash
-- Fixes: CONFLICT_CREATE-ENTITY_ARTILLERY-CANNON-MUZZLE-FLASH


-- Generic compatibility patch for artillery-cannon-muzzle-flash
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["artillery-cannon-muzzle-flash"] then
    local prototype = data.raw["create-entity"]["artillery-cannon-muzzle-flash"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.artillery-cannon-muzzle-flash")
end


-- Patch: PATCH_WATER-SPLASH_GENERIC
-- Description: Generic compatibility patch for create-entity water-splash
-- Fixes: CONFLICT_CREATE-ENTITY_WATER-SPLASH


-- Generic compatibility patch for water-splash
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["water-splash"] then
    local prototype = data.raw["create-entity"]["water-splash"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.water-splash")
end


-- Patch: PATCH_KR-MATTER-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity kr-matter-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_KR-MATTER-EXPLOSION


-- Generic compatibility patch for kr-matter-explosion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-matter-explosion"] then
    local prototype = data.raw["create-entity"]["kr-matter-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-matter-explosion")
end


-- Patch: PATCH_HUGE-SCORCHMARK_GENERIC
-- Description: Generic compatibility patch for create-entity huge-scorchmark
-- Fixes: CONFLICT_CREATE-ENTITY_HUGE-SCORCHMARK


-- Generic compatibility patch for huge-scorchmark
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["huge-scorchmark"] then
    local prototype = data.raw["create-entity"]["huge-scorchmark"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.huge-scorchmark")
end


-- Patch: PATCH_KR-MATTER-FIRE-SMOKE_GENERIC
-- Description: Generic compatibility patch for create-explosion kr-matter-fire-smoke
-- Fixes: CONFLICT_CREATE-EXPLOSION_KR-MATTER-FIRE-SMOKE


-- Generic compatibility patch for kr-matter-fire-smoke
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["kr-matter-fire-smoke"] then
    local prototype = data.raw["create-explosion"]["kr-matter-fire-smoke"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.kr-matter-fire-smoke")
end


-- Patch: PATCH_KR-MATTER-SHOCKWAVE_GENERIC
-- Description: Generic compatibility patch for create-explosion kr-matter-shockwave
-- Fixes: CONFLICT_CREATE-EXPLOSION_KR-MATTER-SHOCKWAVE


-- Generic compatibility patch for kr-matter-shockwave
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-explosion


if data.raw["create-explosion"] and data.raw["create-explosion"]["kr-matter-shockwave"] then
    local prototype = data.raw["create-explosion"]["kr-matter-shockwave"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.kr-matter-shockwave")
end


-- Patch: PATCH_KR-BEACON-MATTER-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity kr-beacon-matter-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_KR-BEACON-MATTER-EXPLOSION


-- Generic compatibility patch for kr-beacon-matter-explosion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-beacon-matter-explosion"] then
    local prototype = data.raw["create-entity"]["kr-beacon-matter-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-beacon-matter-explosion")
end


-- Patch: PATCH_KR-SMALL-MATTER-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity kr-small-matter-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_KR-SMALL-MATTER-EXPLOSION


-- Generic compatibility patch for kr-small-matter-explosion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-small-matter-explosion"] then
    local prototype = data.raw["create-entity"]["kr-small-matter-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-small-matter-explosion")
end


-- Patch: PATCH_KR-LASER-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity kr-laser-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_KR-LASER-EXPLOSION


-- Generic compatibility patch for kr-laser-explosion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-laser-explosion"] then
    local prototype = data.raw["create-entity"]["kr-laser-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-laser-explosion")
end


-- Patch: PATCH_KR-RAIL-MATTER-EXPLOSION_GENERIC
-- Description: Generic compatibility patch for create-entity kr-rail-matter-explosion
-- Fixes: CONFLICT_CREATE-ENTITY_KR-RAIL-MATTER-EXPLOSION


-- Generic compatibility patch for kr-rail-matter-explosion
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-rail-matter-explosion"] then
    local prototype = data.raw["create-entity"]["kr-rail-matter-explosion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-rail-matter-explosion")
end


-- Patch: PATCH_KR-POOP-CLOUD_GENERIC
-- Description: Generic compatibility patch for create-smoke kr-poop-cloud
-- Fixes: CONFLICT_CREATE-SMOKE_KR-POOP-CLOUD


-- Generic compatibility patch for kr-poop-cloud
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-smoke


if data.raw["create-smoke"] and data.raw["create-smoke"]["kr-poop-cloud"] then
    local prototype = data.raw["create-smoke"]["kr-poop-cloud"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-smoke.kr-poop-cloud")
end


-- Patch: PATCH_KR-VIRUS-CLOUD_GENERIC
-- Description: Generic compatibility patch for create-smoke kr-virus-cloud
-- Fixes: CONFLICT_CREATE-SMOKE_KR-VIRUS-CLOUD


-- Generic compatibility patch for kr-virus-cloud
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-smoke


if data.raw["create-smoke"] and data.raw["create-smoke"]["kr-virus-cloud"] then
    local prototype = data.raw["create-smoke"]["kr-virus-cloud"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-smoke.kr-virus-cloud")
end


-- Patch: PATCH_KR-HYDROGEN_GENERIC
-- Description: Generic compatibility patch for fluid kr-hydrogen
-- Fixes: CONFLICT_FLUID_KR-HYDROGEN


-- Generic compatibility patch for kr-hydrogen
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-hydrogen"] then
    local prototype = data.raw["fluid"]["kr-hydrogen"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-hydrogen")
end


-- Patch: PATCH_KR-OXYGEN_GENERIC
-- Description: Generic compatibility patch for fluid kr-oxygen
-- Fixes: CONFLICT_FLUID_KR-OXYGEN


-- Generic compatibility patch for kr-oxygen
-- Fixes conflict between: Krastorio2-spaced-out, rubia, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-oxygen"] then
    local prototype = data.raw["fluid"]["kr-oxygen"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-oxygen")
end


-- Patch: PATCH_KR-BIOMETHANOL_GENERIC
-- Description: Generic compatibility patch for fluid kr-biomethanol
-- Fixes: CONFLICT_FLUID_KR-BIOMETHANOL


-- Generic compatibility patch for kr-biomethanol
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-biomethanol"] then
    local prototype = data.raw["fluid"]["kr-biomethanol"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-biomethanol")
end


-- Patch: PATCH_KR-CHLORINE_GENERIC
-- Description: Generic compatibility patch for fluid kr-chlorine
-- Fixes: CONFLICT_FLUID_KR-CHLORINE


-- Generic compatibility patch for kr-chlorine
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-chlorine"] then
    local prototype = data.raw["fluid"]["kr-chlorine"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-chlorine")
end


-- Patch: PATCH_KR-MINERAL-WATER_GENERIC
-- Description: Generic compatibility patch for fluid kr-mineral-water
-- Fixes: CONFLICT_FLUID_KR-MINERAL-WATER


-- Generic compatibility patch for kr-mineral-water
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-mineral-water"] then
    local prototype = data.raw["fluid"]["kr-mineral-water"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-mineral-water")
end


-- Patch: PATCH_KR-MATTER_GENERIC
-- Description: Generic compatibility patch for fluid kr-matter
-- Fixes: CONFLICT_FLUID_KR-MATTER


-- Generic compatibility patch for kr-matter
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["kr-matter"] then
    local prototype = data.raw["fluid"]["kr-matter"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.kr-matter")
end


-- Patch: PATCH_KR-JACKHAMMER_GENERIC
-- Description: Generic compatibility patch for shortcut kr-jackhammer
-- Fixes: CONFLICT_SHORTCUT_KR-JACKHAMMER


-- Generic compatibility patch for kr-jackhammer
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: shortcut


if data.raw["shortcut"] and data.raw["shortcut"]["kr-jackhammer"] then
    local prototype = data.raw["shortcut"]["kr-jackhammer"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "shortcut.kr-jackhammer")
end


-- Patch: PATCH_KR-POOP-CLOUD-VISUAL-DUMMY_GENERIC
-- Description: Generic compatibility patch for create-smoke kr-poop-cloud-visual-dummy
-- Fixes: CONFLICT_CREATE-SMOKE_KR-POOP-CLOUD-VISUAL-DUMMY


-- Generic compatibility patch for kr-poop-cloud-visual-dummy
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-smoke


if data.raw["create-smoke"] and data.raw["create-smoke"]["kr-poop-cloud-visual-dummy"] then
    local prototype = data.raw["create-smoke"]["kr-poop-cloud-visual-dummy"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-smoke.kr-poop-cloud-visual-dummy")
end


-- Patch: PATCH_KR-VIRUS-CLOUD-VISUAL-DUMMY_GENERIC
-- Description: Generic compatibility patch for create-smoke kr-virus-cloud-visual-dummy
-- Fixes: CONFLICT_CREATE-SMOKE_KR-VIRUS-CLOUD-VISUAL-DUMMY


-- Generic compatibility patch for kr-virus-cloud-visual-dummy
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-smoke


if data.raw["create-smoke"] and data.raw["create-smoke"]["kr-virus-cloud-visual-dummy"] then
    local prototype = data.raw["create-smoke"]["kr-virus-cloud-visual-dummy"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-smoke.kr-virus-cloud-visual-dummy")
end


-- Patch: PATCH_KR-ABOUT-K2_GENERIC
-- Description: Generic compatibility patch for tips-and-tricks-item-category kr-about-k2
-- Fixes: CONFLICT_TIPS-AND-TRICKS-ITEM-CATEGORY_KR-ABOUT-K2


-- Generic compatibility patch for kr-about-k2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: tips-and-tricks-item-category


if data.raw["tips-and-tricks-item-category"] and data.raw["tips-and-tricks-item-category"]["kr-about-k2"] then
    local prototype = data.raw["tips-and-tricks-item-category"]["kr-about-k2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "tips-and-tricks-item-category.kr-about-k2")
end


-- Patch: PATCH_KR-ABOUT-K2_GENERIC
-- Description: Generic compatibility patch for tips-and-tricks-item kr-about-k2
-- Fixes: CONFLICT_TIPS-AND-TRICKS-ITEM_KR-ABOUT-K2


-- Generic compatibility patch for kr-about-k2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: tips-and-tricks-item


if data.raw["tips-and-tricks-item"] and data.raw["tips-and-tricks-item"]["kr-about-k2"] then
    local prototype = data.raw["tips-and-tricks-item"]["kr-about-k2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "tips-and-tricks-item.kr-about-k2")
end


-- Patch: PATCH_KR-RADIATION_GENERIC
-- Description: Generic compatibility patch for tips-and-tricks-item kr-radiation
-- Fixes: CONFLICT_TIPS-AND-TRICKS-ITEM_KR-RADIATION


-- Generic compatibility patch for kr-radiation
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: tips-and-tricks-item


if data.raw["tips-and-tricks-item"] and data.raw["tips-and-tricks-item"]["kr-radiation"] then
    local prototype = data.raw["tips-and-tricks-item"]["kr-radiation"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "tips-and-tricks-item.kr-radiation")
end


-- Patch: PATCH_KR-EXPLOSION-HIT-P_GENERIC
-- Description: Generic compatibility patch for create-entity kr-explosion-hit-p
-- Fixes: CONFLICT_CREATE-ENTITY_KR-EXPLOSION-HIT-P


-- Generic compatibility patch for kr-explosion-hit-p
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-explosion-hit-p"] then
    local prototype = data.raw["create-entity"]["kr-explosion-hit-p"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-explosion-hit-p")
end


-- Patch: PATCH_KR-EXPLOSION-HIT-U_GENERIC
-- Description: Generic compatibility patch for create-entity kr-explosion-hit-u
-- Fixes: CONFLICT_CREATE-ENTITY_KR-EXPLOSION-HIT-U


-- Generic compatibility patch for kr-explosion-hit-u
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-explosion-hit-u"] then
    local prototype = data.raw["create-entity"]["kr-explosion-hit-u"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-explosion-hit-u")
end


-- Patch: PATCH_KR-EXPLOSION-HIT-I_GENERIC
-- Description: Generic compatibility patch for create-entity kr-explosion-hit-i
-- Fixes: CONFLICT_CREATE-ENTITY_KR-EXPLOSION-HIT-I


-- Generic compatibility patch for kr-explosion-hit-i
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: create-entity


if data.raw["create-entity"] and data.raw["create-entity"]["kr-explosion-hit-i"] then
    local prototype = data.raw["create-entity"]["kr-explosion-hit-i"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.kr-explosion-hit-i")
end


-- Patch: PATCH_KR-ADVANCED-TANK_GENERIC
-- Description: Generic compatibility patch for item-with-entity-data kr-advanced-tank
-- Fixes: CONFLICT_ITEM-WITH-ENTITY-DATA_KR-ADVANCED-TANK


-- Generic compatibility patch for kr-advanced-tank
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-with-entity-data


if data.raw["item-with-entity-data"] and data.raw["item-with-entity-data"]["kr-advanced-tank"] then
    local prototype = data.raw["item-with-entity-data"]["kr-advanced-tank"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-with-entity-data.kr-advanced-tank")
end


-- Patch: PATCH_KR-NUCLEAR-LOCOMOTIVE_GENERIC
-- Description: Generic compatibility patch for item-with-entity-data kr-nuclear-locomotive
-- Fixes: CONFLICT_ITEM-WITH-ENTITY-DATA_KR-NUCLEAR-LOCOMOTIVE


-- Generic compatibility patch for kr-nuclear-locomotive
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: item-with-entity-data


if data.raw["item-with-entity-data"] and data.raw["item-with-entity-data"]["kr-nuclear-locomotive"] then
    local prototype = data.raw["item-with-entity-data"]["kr-nuclear-locomotive"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-with-entity-data.kr-nuclear-locomotive")
end


-- Patch: PATCH_KR-ATTENTION-1_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-attention-1
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-ATTENTION-1


-- Generic compatibility patch for kr-attention-1
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-attention-1"] then
    local prototype = data.raw["virtual-signal"]["kr-attention-1"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-attention-1")
end


-- Patch: PATCH_KR-ATTENTION-2_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-attention-2
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-ATTENTION-2


-- Generic compatibility patch for kr-attention-2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-attention-2"] then
    local prototype = data.raw["virtual-signal"]["kr-attention-2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-attention-2")
end


-- Patch: PATCH_KR-ATTENTION-3_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-attention-3
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-ATTENTION-3


-- Generic compatibility patch for kr-attention-3
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-attention-3"] then
    local prototype = data.raw["virtual-signal"]["kr-attention-3"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-attention-3")
end


-- Patch: PATCH_KR-BATTERY_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-battery
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-BATTERY


-- Generic compatibility patch for kr-battery
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-battery"] then
    local prototype = data.raw["virtual-signal"]["kr-battery"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-battery")
end


-- Patch: PATCH_KR-BATTERY-LOW_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-battery-low
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-BATTERY-LOW


-- Generic compatibility patch for kr-battery-low
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-battery-low"] then
    local prototype = data.raw["virtual-signal"]["kr-battery-low"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-battery-low")
end


-- Patch: PATCH_KR-BIOHAZARD_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-biohazard
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-BIOHAZARD


-- Generic compatibility patch for kr-biohazard
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-biohazard"] then
    local prototype = data.raw["virtual-signal"]["kr-biohazard"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-biohazard")
end


-- Patch: PATCH_KR-BUILD-HERE_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-build-here
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-BUILD-HERE


-- Generic compatibility patch for kr-build-here
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-build-here"] then
    local prototype = data.raw["virtual-signal"]["kr-build-here"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-build-here")
end


-- Patch: PATCH_KR-DONT-TOUCH_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-dont-touch
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-DONT-TOUCH


-- Generic compatibility patch for kr-dont-touch
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-dont-touch"] then
    local prototype = data.raw["virtual-signal"]["kr-dont-touch"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-dont-touch")
end


-- Patch: PATCH_KR-ENERGY-1_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-energy-1
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-ENERGY-1


-- Generic compatibility patch for kr-energy-1
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-energy-1"] then
    local prototype = data.raw["virtual-signal"]["kr-energy-1"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-energy-1")
end


-- Patch: PATCH_KR-ENERGY-2_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-energy-2
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-ENERGY-2


-- Generic compatibility patch for kr-energy-2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-energy-2"] then
    local prototype = data.raw["virtual-signal"]["kr-energy-2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-energy-2")
end


-- Patch: PATCH_KR-GEAR-B_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-gear-b
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-GEAR-B


-- Generic compatibility patch for kr-gear-b
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-gear-b"] then
    local prototype = data.raw["virtual-signal"]["kr-gear-b"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-gear-b")
end


-- Patch: PATCH_KR-GEAR-W_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-gear-w
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-GEAR-W


-- Generic compatibility patch for kr-gear-w
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-gear-w"] then
    local prototype = data.raw["virtual-signal"]["kr-gear-w"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-gear-w")
end


-- Patch: PATCH_KR-HEART_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-heart
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-HEART


-- Generic compatibility patch for kr-heart
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-heart"] then
    local prototype = data.raw["virtual-signal"]["kr-heart"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-heart")
end


-- Patch: PATCH_KR-KILL_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-kill
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-KILL


-- Generic compatibility patch for kr-kill
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-kill"] then
    local prototype = data.raw["virtual-signal"]["kr-kill"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-kill")
end


-- Patch: PATCH_KR-KRASTORIO_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-krastorio
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-KRASTORIO


-- Generic compatibility patch for kr-krastorio
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-krastorio"] then
    local prototype = data.raw["virtual-signal"]["kr-krastorio"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-krastorio")
end


-- Patch: PATCH_KR-NUCLEAR-1_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-nuclear-1
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-NUCLEAR-1


-- Generic compatibility patch for kr-nuclear-1
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-nuclear-1"] then
    local prototype = data.raw["virtual-signal"]["kr-nuclear-1"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-nuclear-1")
end


-- Patch: PATCH_KR-NUCLEAR-2_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-nuclear-2
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-NUCLEAR-2


-- Generic compatibility patch for kr-nuclear-2
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-nuclear-2"] then
    local prototype = data.raw["virtual-signal"]["kr-nuclear-2"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-nuclear-2")
end


-- Patch: PATCH_KR-POWER_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-power
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-POWER


-- Generic compatibility patch for kr-power
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-power"] then
    local prototype = data.raw["virtual-signal"]["kr-power"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-power")
end


-- Patch: PATCH_KR-POWER-OFF_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-power-off
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-POWER-OFF


-- Generic compatibility patch for kr-power-off
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-power-off"] then
    local prototype = data.raw["virtual-signal"]["kr-power-off"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-power-off")
end


-- Patch: PATCH_KR-POWER-ON_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-power-on
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-POWER-ON


-- Generic compatibility patch for kr-power-on
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-power-on"] then
    local prototype = data.raw["virtual-signal"]["kr-power-on"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-power-on")
end


-- Patch: PATCH_KR-QUESTION-MARK_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-question-mark
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-QUESTION-MARK


-- Generic compatibility patch for kr-question-mark
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-question-mark"] then
    local prototype = data.raw["virtual-signal"]["kr-question-mark"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-question-mark")
end


-- Patch: PATCH_KR-RECYCLING_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-recycling
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-RECYCLING


-- Generic compatibility patch for kr-recycling
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-recycling"] then
    local prototype = data.raw["virtual-signal"]["kr-recycling"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-recycling")
end


-- Patch: PATCH_KR-SCULL_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-scull
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-SCULL


-- Generic compatibility patch for kr-scull
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-scull"] then
    local prototype = data.raw["virtual-signal"]["kr-scull"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-scull")
end


-- Patch: PATCH_KR-SMILE_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-smile
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-SMILE


-- Generic compatibility patch for kr-smile
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-smile"] then
    local prototype = data.raw["virtual-signal"]["kr-smile"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-smile")
end


-- Patch: PATCH_KR-STAR-B_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-star-b
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-STAR-B


-- Generic compatibility patch for kr-star-b
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-star-b"] then
    local prototype = data.raw["virtual-signal"]["kr-star-b"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-star-b")
end


-- Patch: PATCH_KR-STAR-W_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-star-w
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-STAR-W


-- Generic compatibility patch for kr-star-w
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-star-w"] then
    local prototype = data.raw["virtual-signal"]["kr-star-w"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-star-w")
end


-- Patch: PATCH_KR-TIME_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-time
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-TIME


-- Generic compatibility patch for kr-time
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-time"] then
    local prototype = data.raw["virtual-signal"]["kr-time"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-time")
end


-- Patch: PATCH_KR-WTF_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-wtf
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-WTF


-- Generic compatibility patch for kr-wtf
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-wtf"] then
    local prototype = data.raw["virtual-signal"]["kr-wtf"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-wtf")
end


-- Patch: PATCH_KR-WIZARD_GENERIC
-- Description: Generic compatibility patch for virtual-signal kr-wizard
-- Fixes: CONFLICT_VIRTUAL-SIGNAL_KR-WIZARD


-- Generic compatibility patch for kr-wizard
-- Fixes conflict between: Krastorio2-spaced-out, Krastorio2
-- Severity: LOW
-- Type: virtual-signal


if data.raw["virtual-signal"] and data.raw["virtual-signal"]["kr-wizard"] then
    local prototype = data.raw["virtual-signal"]["kr-wizard"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.kr-wizard")
end


-- Patch: PATCH_HEAVY-WATER_GENERIC
-- Description: Generic compatibility patch for fluid heavy-water
-- Fixes: CONFLICT_FLUID_HEAVY-WATER


-- Generic compatibility patch for heavy-water
-- Fixes conflict between: StopgapNukes, metal-and-stars
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["heavy-water"] then
    local prototype = data.raw["fluid"]["heavy-water"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.heavy-water")
end


-- Patch: PATCH_RAW-DATA_GENERIC
-- Description: Generic compatibility patch for fluid raw-data
-- Fixes: CONFLICT_FLUID_RAW-DATA


-- Generic compatibility patch for raw-data
-- Fixes conflict between: Moshine, Moshine-assets
-- Severity: LOW
-- Type: fluid


if data.raw["fluid"] and data.raw["fluid"]["raw-data"] then
    local prototype = data.raw["fluid"]["raw-data"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.raw-data")
end


-- Patch: PATCH_PULVERISING_GENERIC
-- Description: Generic compatibility patch for recipe-category pulverising
-- Fixes: CONFLICT_RECIPE-CATEGORY_PULVERISING


-- Generic compatibility patch for pulverising
-- Fixes conflict between: quirkycat_machines, quirkycat_base
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["pulverising"] then
    local prototype = data.raw["recipe-category"]["pulverising"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.pulverising")
end


-- Patch: PATCH_JR-FOUNDRY-SMELTING_GENERIC
-- Description: Generic compatibility patch for recipe-category jr-foundry-smelting
-- Fixes: CONFLICT_RECIPE-CATEGORY_JR-FOUNDRY-SMELTING


-- Generic compatibility patch for jr-foundry-smelting
-- Fixes conflict between: quirkycat_machines, quirkycat_base
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["jr-foundry-smelting"] then
    local prototype = data.raw["recipe-category"]["jr-foundry-smelting"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.jr-foundry-smelting")
end


-- Patch: PATCH___BASE__/SOUND/CAR-ENGINE-STOP.OGG_GENERIC
-- Description: Generic compatibility patch for sound __base__/sound/car-engine-stop.ogg
-- Fixes: CONFLICT_SOUND___BASE__/SOUND/CAR-ENGINE-STOP.OGG


-- Generic compatibility patch for __base__/sound/car-engine-stop.ogg
-- Fixes conflict between: rubia, RenaiTransportation
-- Severity: LOW
-- Type: sound


if data.raw["sound"] and data.raw["sound"]["__base__/sound/car-engine-stop.ogg"] then
    local prototype = data.raw["sound"]["__base__/sound/car-engine-stop.ogg"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "sound.__base__/sound/car-engine-stop.ogg")
end


-- Patch: PATCH_TENEBRIS_PLANTS_GENERIC
-- Description: Generic compatibility patch for autoplace-control tenebris_plants
-- Fixes: CONFLICT_AUTOPLACE-CONTROL_TENEBRIS_PLANTS


-- Generic compatibility patch for tenebris_plants
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: LOW
-- Type: autoplace-control


if data.raw["autoplace-control"] and data.raw["autoplace-control"]["tenebris_plants"] then
    local prototype = data.raw["autoplace-control"]["tenebris_plants"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "autoplace-control.tenebris_plants")
end


-- Patch: PATCH_TENEBRIS_ENEMIES_GENERIC
-- Description: Generic compatibility patch for autoplace-control tenebris_enemies
-- Fixes: CONFLICT_AUTOPLACE-CONTROL_TENEBRIS_ENEMIES


-- Generic compatibility patch for tenebris_enemies
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: LOW
-- Type: autoplace-control


if data.raw["autoplace-control"] and data.raw["autoplace-control"]["tenebris_enemies"] then
    local prototype = data.raw["autoplace-control"]["tenebris_enemies"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "autoplace-control.tenebris_enemies")
end


-- Patch: PATCH_BIOLUMINESCENT-_GENERIC
-- Description: Generic compatibility patch for item-subgroup bioluminescent-
-- Fixes: CONFLICT_ITEM-SUBGROUP_BIOLUMINESCENT-


-- Generic compatibility patch for bioluminescent-
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: LOW
-- Type: item-subgroup


if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bioluminescent-"] then
    local prototype = data.raw["item-subgroup"]["bioluminescent-"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bioluminescent-")
end


-- Patch: PATCH_BIOLUMINESCENT_GENERIC
-- Description: Generic compatibility patch for fuel-category bioluminescent
-- Fixes: CONFLICT_FUEL-CATEGORY_BIOLUMINESCENT


-- Generic compatibility patch for bioluminescent
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: LOW
-- Type: fuel-category


if data.raw["fuel-category"] and data.raw["fuel-category"]["bioluminescent"] then
    local prototype = data.raw["fuel-category"]["bioluminescent"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fuel-category.bioluminescent")
end


-- Patch: PATCH_BIOLUMINESCENT_GENERIC
-- Description: Generic compatibility patch for item-group bioluminescent
-- Fixes: CONFLICT_ITEM-GROUP_BIOLUMINESCENT


-- Generic compatibility patch for bioluminescent
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: LOW
-- Type: item-group


if data.raw["item-group"] and data.raw["item-group"]["bioluminescent"] then
    local prototype = data.raw["item-group"]["bioluminescent"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-group.bioluminescent")
end


-- Patch: PATCH_FULGORA-TENEBRIS_GENERIC
-- Description: Generic compatibility patch for space-connection fulgora-tenebris
-- Fixes: CONFLICT_SPACE-CONNECTION_FULGORA-TENEBRIS


-- Generic compatibility patch for fulgora-tenebris
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: LOW
-- Type: space-connection


if data.raw["space-connection"] and data.raw["space-connection"]["fulgora-tenebris"] then
    local prototype = data.raw["space-connection"]["fulgora-tenebris"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "space-connection.fulgora-tenebris")
end


-- Patch: PATCH_BIOINFUSION_GENERIC
-- Description: Generic compatibility patch for recipe-category bioinfusion
-- Fixes: CONFLICT_RECIPE-CATEGORY_BIOINFUSION


-- Generic compatibility patch for bioinfusion
-- Fixes conflict between: tenebris, tenebris-prime
-- Severity: LOW
-- Type: recipe-category


if data.raw["recipe-category"] and data.raw["recipe-category"]["bioinfusion"] then
    local prototype = data.raw["recipe-category"]["bioinfusion"]
    
    -- Generic compatibility fixes
    -- Ensure prototype remains functional across mod combinations
    
    -- Log the conflict resolution
    log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bioinfusion")
end

