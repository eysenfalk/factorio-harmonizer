🎯 FACTORIO MOD HARMONIZER - CONFLICT ANALYSIS REPORT
======================================================================
Analysis Date: 2025-06-14T17:45:42.047309
Analyzed Mods: lignumis, aai-industry, Hovercrafts, snouz-big-accumulator, common-prototypes, advanced-centrifuge, terrapalus, helmod, DoubleWagons, cubium, bobgreenhouse, FluidMustFlow, YARM, bobenemies, Age-of-Production, snouz_better_substation, LtnManager, PavementDriveAssistContinued, NightvisionToggles, dea-dia-system, SpidertronPatrols, new-diagonal-inserter, calculator-ui, minimalist-rails, Tapeline, OmegaDrill, lilys-cubeine, Automatic_Train_Painter, castra, tenebris-prime, vulcanus-sulfuric-bacteria, crushing-industry-productivity-research, RateCalculator, GUI_Unifyer, RampantFixed, Shortcuts-ick, aai-vehicles-ironclad, Cold_biters, alien-module, bobores, boblogistics, ChangeInserterDropLane, crushing-industry, Planet-Hopper, aai-vehicles-laser-tank, ballistic_missile, atomic-artillery-reborn, vtk-cannon-turret, Kux-OrbitalIonCannon, promethium-quality, Moshine-assets, maraxsis, WaterExtractor, PlutoniumEnergy, cerys-lunaponics, Igrys, FilterChests, aai-signal-transmission, Factorio-Tiberium, secretas, Robocharger-Updated, quirkycat_boron, Noxys_Trees, Paracelsin, Aircraft-space-age, bobmodules, FNEI, Krastorio2-spaced-out, Toxic_biters, erm_toss_economy, Explosive_biters, nixie-tubes, UltimateResearchQueue2, VoidProcessing, erm_zerg_economy, CursorEnhancements, erm_zerg, se-space-trains, Fluid-level-indicator, grappling-gun, lex-aircraft, aquilo-seabloom-algaculture, quirkycat_base, Flare Stack, OilOutpostPlanner, Todo-List, orbital-transfer, deadlock-beltboxes-loaders, aai-vehicles-flame-tumbler, reverse-factory, fulgora-coralmium-agriculture, any-planet-start, bobvehicleequipment, wood-industry, pollution-as-surface-property, EditorExtensions, aai-vehicles-chaingunner, informatron, Warehousing, Placeables, More_Ammo, HelicopterRevival, gleba-reborn, equipment-gantry, bobpower, Electric Furnaces, More_Repair_Packs, Wood-Walls, lane-splitters, bobplates, foundry-restructuring, jetpack, PlanetsLib, bobmining, lilys-injector, VehicleSnap, astroponics, WipMod_TA-miners, metal-and-stars, long_stack_inserter, janus, MouseOverConstruction, slp-dyson-sphere-reworked, aai-programmable-vehicles, inventory-mover, aai-containers, aai-vehicles-hauler, aai-vehicles-warden, bobinserters, bobelectronics, shield-projector, aai-signals, bobassembly, UtilizationMonitorBlargh, ModuleInserterSimplified, EarlyvatedRails, Moshine, bobequipment, enemyracemanager, corrundum, Cerys-Moon-of-Fulgora, erm_toss, planet-muluna, infinite-quality-tiers, aai-vehicles-flame-tank, TimeTools, wood-military, alloy-smelting, snouz-big-solar-panel, RPGsystem, BlueprintTools, Electric_flying_enemies, atan-nuclear-science, space-spidertron, quirkycat_machines, planet-arrakis, Flow Control, StopgapNukes

📊 SUMMARY
------------------------------
Total Prototypes Analyzed: 2837
Conflicted Prototypes: 318
Critical Issues: 0
High Priority Issues: 43
Medium Priority Issues: 236
Low Priority Issues: 86

🍳 RECIPE CONFLICTS (Sorted by Priority)
=============================================
1. 🔶 Missing Dependencies: sp-spiderling
   Severity: HIGH
   Affected: recipe.sp-spiderling
   Conflicting Mods: SpidertronPatrols → SpidertronPatrols → SpidertronPatrols
   Problem: Recipe sp-spiderling has missing dependencies: nullius-large-chest-2, nullius-sensor-2, nullius-large-chest-2, nullius-sensor-2
   Root Cause: Required dependencies not found: nullius-large-chest-2, nullius-sensor-2, nullius-large-chest-2, nullius-sensor-2
   📋 Recipe Details:
     Current Recipe: nullius-large-chest-2 x2 + nullius-sensor-2 + nullius-large-chest-2 x2 + nullius-sensor-2 → sp-spiderling
     Modified by: SpidertronPatrols, SpidertronPatrols, SpidertronPatrols
   Suggested Solutions:
     • Add missing dependencies: nullius-large-chest-2, nullius-sensor-2, nullius-large-chest-2, nullius-sensor-2

2. 🔶 Missing Dependencies: nullius-mecha-remote
   Severity: HIGH
   Affected: recipe.nullius-mecha-remote
   Conflicting Mods: SpidertronPatrols
   Problem: Recipe nullius-mecha-remote has missing dependencies: nullius-processor-1, nullius-scout-remote, nullius-processor-1, nullius-scout-remote
   Root Cause: Required dependencies not found: nullius-processor-1, nullius-scout-remote, nullius-processor-1, nullius-scout-remote
   📋 Recipe Details:
     Current Recipe: nullius-processor-1 x2 + nullius-scout-remote + nullius-processor-1 x2 + nullius-scout-remote → nullius-mecha-remote
     Modified by: SpidertronPatrols
   Suggested Solutions:
     • Add missing dependencies: nullius-processor-1, nullius-scout-remote, nullius-processor-1, nullius-scout-remote

3. 🔶 Recipe Variant: burner-inserter
   Severity: HIGH
   Affected: recipe.burner-inserter
   Conflicting Mods: lignumis
   Problem: Recipe 'burner-inserter' has different variants between base game and mod 'lignumis'
   Root Cause: Mod 'lignumis' replaces base game recipe with different ingredients
   📋 Recipe Details:
     Current Recipe: wooden-gear-wheel + lumber + wooden-gear-wheel + lumber → burner-inserter
     Modified by: lignumis, lignumis
   Suggested Solutions:
     • Create alternative recipes for both base game and mod variants
     • Add conditional recipe based on available items
     • Preserve both recipe variants for player choice

4. 📋 Recipe Variant: fc-filter-steel-chest
   Severity: MEDIUM
   Affected: recipe.fc-filter-steel-chest
   Conflicting Mods: FilterChests
   Problem: Recipe 'fc-filter-steel-chest' has different variants between base game and mod 'FilterChests'
   Root Cause: Mod 'FilterChests' replaces base game recipe with different ingredients
   📋 Recipe Details:
     Modified by: FilterChests
   Suggested Solutions:
     • Create alternative recipes for both base game and mod variants
     • Add conditional recipe based on available items
     • Preserve both recipe variants for player choice

5. 📋 Recipe Variant: wooden-wall
   Severity: MEDIUM
   Affected: recipe.wooden-wall
   Conflicting Mods: lignumis
   Problem: Recipe 'wooden-wall' has different variants between base game and mod 'lignumis'
   Root Cause: Mod 'lignumis' replaces base game recipe with different ingredients
   📋 Recipe Details:
     Modified by: lignumis, lignumis, lignumis
   Suggested Solutions:
     • Create alternative recipes for both base game and mod variants
     • Add conditional recipe based on available items
     • Preserve both recipe variants for player choice

6. 📋 Recipe Variant: sp-spiderling
   Severity: MEDIUM
   Affected: recipe.sp-spiderling
   Conflicting Mods: SpidertronPatrols
   Problem: Recipe 'sp-spiderling' has different variants between base game and mod 'SpidertronPatrols'
   Root Cause: Mod 'SpidertronPatrols' replaces base game recipe with different ingredients
   📋 Recipe Details:
     Current Recipe: nullius-large-chest-2 x2 + nullius-sensor-2 + nullius-large-chest-2 x2 + nullius-sensor-2 → sp-spiderling
     Modified by: SpidertronPatrols, SpidertronPatrols, SpidertronPatrols
   Suggested Solutions:
     • Create alternative recipes for both base game and mod variants
     • Add conditional recipe based on available items
     • Preserve both recipe variants for player choice

7. 📋 Recipe Variant: nullius-mecha-remote
   Severity: MEDIUM
   Affected: recipe.nullius-mecha-remote
   Conflicting Mods: SpidertronPatrols
   Problem: Recipe 'nullius-mecha-remote' has different variants between base game and mod 'SpidertronPatrols'
   Root Cause: Mod 'SpidertronPatrols' replaces base game recipe with different ingredients
   📋 Recipe Details:
     Current Recipe: nullius-processor-1 x2 + nullius-scout-remote + nullius-processor-1 x2 + nullius-scout-remote → nullius-mecha-remote
     Modified by: SpidertronPatrols
   Suggested Solutions:
     • Create alternative recipes for both base game and mod variants
     • Add conditional recipe based on available items
     • Preserve both recipe variants for player choice

🔬 RESEARCH CONFLICTS (Sorted by Priority)
=============================================
1. 🔶 Missing Dependencies: electronics
   Severity: HIGH
   Affected: technology.electronics
   Conflicting Mods: Age-of-Production → lignumis → lignumis
   Problem: Technology electronics has missing dependencies: {,  , ", c, o, p, p, e, r, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Root Cause: Required dependencies not found: {,  , ", c, o, p, p, e, r, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", c, o, p, p, e, r, -, p, r, o, c, e, s, s, i, n, g, ",  , }

2. 🔶 Missing Dependencies: ore-crushing-productivity-1
   Severity: HIGH
   Affected: technology.ore-crushing-productivity-1
   Conflicting Mods: crushing-industry-productivity-research → crushing-industry-productivity-research
   Problem: Technology ore-crushing-productivity-1 has missing dependencies: {,  , ", b, a, s, i, c, -, o, r, e, -, c, r, u, s, h, i, n, g, ", ,,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ",  , }
   Root Cause: Required dependencies not found: {,  , ", b, a, s, i, c, -, o, r, e, -, c, r, u, s, h, i, n, g, ", ,,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", b, a, s, i, c, -, o, r, e, -, c, r, u, s, h, i, n, g, ", ,,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ",  , }

3. 🔶 Missing Dependencies: ore-crushing-productivity-2
   Severity: HIGH
   Affected: technology.ore-crushing-productivity-2
   Conflicting Mods: crushing-industry-productivity-research → crushing-industry-productivity-research
   Problem: Technology ore-crushing-productivity-2 has missing dependencies: {,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ", ,,  , ", o, r, e, -, c, r, u, s, h, i, n, g, ",  , }
   Root Cause: Required dependencies not found: {,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ", ,,  , ", o, r, e, -, c, r, u, s, h, i, n, g, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ", ,,  , ", o, r, e, -, c, r, u, s, h, i, n, g, ",  , }

4. 🔶 Missing Dependencies: ore-crushing-productivity-3
   Severity: HIGH
   Affected: technology.ore-crushing-productivity-3
   Conflicting Mods: crushing-industry-productivity-research → crushing-industry-productivity-research
   Problem: Technology ore-crushing-productivity-3 has missing dependencies: {,  , ", o, r, e, -, c, r, u, s, h, i, n, g, -, p, r, o, d, u, c, t, i, v, i, t, y, -, 2, ", ,,  , ", p, r, o, d, u, c, t, i, o, n, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", o, r, e, -, c, r, u, s, h, i, n, g, -, p, r, o, d, u, c, t, i, v, i, t, y, -, 2, ", ,,  , ", p, r, o, d, u, c, t, i, o, n, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", o, r, e, -, c, r, u, s, h, i, n, g, -, p, r, o, d, u, c, t, i, v, i, t, y, -, 2, ", ,,  , ", p, r, o, d, u, c, t, i, o, n, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

5. 🔶 Missing Dependencies: elevated-rail
   Severity: HIGH
   Affected: technology.elevated-rail
   Conflicting Mods: EarlyvatedRails → EarlyvatedRails
   Problem: Technology elevated-rail has missing dependencies: {,  , ", r, a, i, l, w, a, y, ", ,,  , ", c, o, n, c, r, e, t, e, ",  , }
   Root Cause: Required dependencies not found: {,  , ", r, a, i, l, w, a, y, ", ,,  , ", c, o, n, c, r, e, t, e, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", r, a, i, l, w, a, y, ", ,,  , ", c, o, n, c, r, e, t, e, ",  , }

6. 🔶 Missing Dependencies: tree-seeding
   Severity: HIGH
   Affected: technology.tree-seeding
   Conflicting Mods: gleba-reborn → gleba-reborn → gleba-reborn → lignumis → lignumis
   Problem: Technology tree-seeding has missing dependencies: {,  , ", w, o, o, d, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", w, o, o, d, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", w, o, o, d, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

7. 🔶 Missing Dependencies: steam-power
   Severity: HIGH
   Affected: technology.steam-power
   Conflicting Mods: lignumis → lignumis
   Problem: Technology steam-power has missing dependencies: {,  , ", i, r, o, n, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Root Cause: Required dependencies not found: {,  , ", i, r, o, n, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", i, r, o, n, -, p, r, o, c, e, s, s, i, n, g, ",  , }

8. 🔶 Missing Dependencies: landfill
   Severity: HIGH
   Affected: technology.landfill
   Conflicting Mods: lignumis → lignumis
   Problem: Technology landfill has missing dependencies: {,  , ", b, u, r, n, e, r, -, a, u, t, o, m, a, t, i, o, n, ",  , }
   Root Cause: Required dependencies not found: {,  , ", b, u, r, n, e, r, -, a, u, t, o, m, a, t, i, o, n, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", b, u, r, n, e, r, -, a, u, t, o, m, a, t, i, o, n, ",  , }

9. 🔶 Missing Dependencies: worker-robots-speed-1
   Severity: HIGH
   Affected: technology.worker-robots-speed-1
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-1 has missing dependencies: {,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ", ,,  , ", b, a, s, i, c, -, c, o, n, s, t, r, u, c, t, i, o, n, -, r, o, b, o, t, i, c, s, -, g, o, l, d, ",  , }
   Root Cause: Required dependencies not found: {,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ", ,,  , ", b, a, s, i, c, -, c, o, n, s, t, r, u, c, t, i, o, n, -, r, o, b, o, t, i, c, s, -, g, o, l, d, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ", ,,  , ", b, a, s, i, c, -, c, o, n, s, t, r, u, c, t, i, o, n, -, r, o, b, o, t, i, c, s, -, g, o, l, d, ",  , }

10. 🔶 Missing Dependencies: worker-robots-speed-2
   Severity: HIGH
   Affected: technology.worker-robots-speed-2
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-2 has missing dependencies: {, 
,  ,  ,  ,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 1, ", ,, 
,  ,  ,  ,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ", 
, }
   Root Cause: Required dependencies not found: {, 
,  ,  ,  ,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 1, ", ,, 
,  ,  ,  ,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ", 
, }
   Suggested Solutions:
     • Add missing dependencies: {, 
,  ,  ,  ,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 1, ", ,, 
,  ,  ,  ,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ", 
, }

11. 🔶 Missing Dependencies: worker-robots-speed-3
   Severity: HIGH
   Affected: technology.worker-robots-speed-3
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-3 has missing dependencies: {,  , ", r, o, b, o, t, i, c, s, ", ,,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", r, o, b, o, t, i, c, s, ", ,,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", r, o, b, o, t, i, c, s, ", ,,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

12. 🔶 Missing Dependencies: worker-robots-speed-4
   Severity: HIGH
   Affected: technology.worker-robots-speed-4
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-4 has missing dependencies: {,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 3, ", ,,  , ", u, t, i, l, i, t, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 3, ", ,,  , ", u, t, i, l, i, t, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 3, ", ,,  , ", u, t, i, l, i, t, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

13. 🔶 Missing Dependencies: physical-projectile-damage-1
   Severity: HIGH
   Affected: technology.physical-projectile-damage-1
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-1 has missing dependencies: {,  , ", b, a, s, i, c, -, g, u, n, -, t, u, r, r, e, t, ",  , }
   Root Cause: Required dependencies not found: {,  , ", b, a, s, i, c, -, g, u, n, -, t, u, r, r, e, t, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", b, a, s, i, c, -, g, u, n, -, t, u, r, r, e, t, ",  , }

14. 🔶 Missing Dependencies: physical-projectile-damage-2
   Severity: HIGH
   Affected: technology.physical-projectile-damage-2
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-2 has missing dependencies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

15. 🔶 Missing Dependencies: weapon-shooting-speed-2
   Severity: HIGH
   Affected: technology.weapon-shooting-speed-2
   Conflicting Mods: lignumis → lignumis
   Problem: Technology weapon-shooting-speed-2 has missing dependencies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

16. 🔶 Missing Dependencies: physical-projectile-damage-3
   Severity: HIGH
   Affected: technology.physical-projectile-damage-3
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-3 has missing dependencies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

17. 🔶 Missing Dependencies: weapon-shooting-speed-3
   Severity: HIGH
   Affected: technology.weapon-shooting-speed-3
   Conflicting Mods: lignumis → lignumis
   Problem: Technology weapon-shooting-speed-3 has missing dependencies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

18. 🔶 Missing Dependencies: physical-projectile-damage-4
   Severity: HIGH
   Affected: technology.physical-projectile-damage-4
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-4 has missing dependencies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

19. 🔶 Missing Dependencies: weapon-shooting-speed-4
   Severity: HIGH
   Affected: technology.weapon-shooting-speed-4
   Conflicting Mods: lignumis → lignumis
   Problem: Technology weapon-shooting-speed-4 has missing dependencies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Required dependencies not found: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing dependencies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

20. 🔶 Broken Research Chain: electronics
   Severity: HIGH
   Affected: technology.electronics
   Conflicting Mods: Age-of-Production → lignumis → lignumis
   Problem: Technology electronics is unreachable due to missing prerequisites: {,  , ", c, o, p, p, e, r, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", c, o, p, p, e, r, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", c, o, p, p, e, r, -, p, r, o, c, e, s, s, i, n, g, ",  , }

21. 🔶 Broken Research Chain: ore-crushing-productivity-1
   Severity: HIGH
   Affected: technology.ore-crushing-productivity-1
   Conflicting Mods: crushing-industry-productivity-research → crushing-industry-productivity-research
   Problem: Technology ore-crushing-productivity-1 is unreachable due to missing prerequisites: {,  , ", b, a, s, i, c, -, o, r, e, -, c, r, u, s, h, i, n, g, ", ,,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", b, a, s, i, c, -, o, r, e, -, c, r, u, s, h, i, n, g, ", ,,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", b, a, s, i, c, -, o, r, e, -, c, r, u, s, h, i, n, g, ", ,,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ",  , }

22. 🔶 Broken Research Chain: ore-crushing-productivity-2
   Severity: HIGH
   Affected: technology.ore-crushing-productivity-2
   Conflicting Mods: crushing-industry-productivity-research → crushing-industry-productivity-research
   Problem: Technology ore-crushing-productivity-2 is unreachable due to missing prerequisites: {,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ", ,,  , ", o, r, e, -, c, r, u, s, h, i, n, g, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ", ,,  , ", o, r, e, -, c, r, u, s, h, i, n, g, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ", ,,  , ", o, r, e, -, c, r, u, s, h, i, n, g, ",  , }

23. 🔶 Broken Research Chain: ore-crushing-productivity-3
   Severity: HIGH
   Affected: technology.ore-crushing-productivity-3
   Conflicting Mods: crushing-industry-productivity-research → crushing-industry-productivity-research
   Problem: Technology ore-crushing-productivity-3 is unreachable due to missing prerequisites: {,  , ", o, r, e, -, c, r, u, s, h, i, n, g, -, p, r, o, d, u, c, t, i, v, i, t, y, -, 2, ", ,,  , ", p, r, o, d, u, c, t, i, o, n, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", o, r, e, -, c, r, u, s, h, i, n, g, -, p, r, o, d, u, c, t, i, v, i, t, y, -, 2, ", ,,  , ", p, r, o, d, u, c, t, i, o, n, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", o, r, e, -, c, r, u, s, h, i, n, g, -, p, r, o, d, u, c, t, i, v, i, t, y, -, 2, ", ,,  , ", p, r, o, d, u, c, t, i, o, n, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

24. 🔶 Broken Research Chain: elevated-rail
   Severity: HIGH
   Affected: technology.elevated-rail
   Conflicting Mods: EarlyvatedRails → EarlyvatedRails
   Problem: Technology elevated-rail is unreachable due to missing prerequisites: {,  , ", r, a, i, l, w, a, y, ", ,,  , ", c, o, n, c, r, e, t, e, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", r, a, i, l, w, a, y, ", ,,  , ", c, o, n, c, r, e, t, e, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", r, a, i, l, w, a, y, ", ,,  , ", c, o, n, c, r, e, t, e, ",  , }

25. 🔶 Broken Research Chain: tree-seeding
   Severity: HIGH
   Affected: technology.tree-seeding
   Conflicting Mods: gleba-reborn → gleba-reborn → gleba-reborn → lignumis → lignumis
   Problem: Technology tree-seeding is unreachable due to missing prerequisites: {,  , ", w, o, o, d, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", w, o, o, d, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", w, o, o, d, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

26. 🔶 Broken Research Chain: steam-power
   Severity: HIGH
   Affected: technology.steam-power
   Conflicting Mods: lignumis → lignumis
   Problem: Technology steam-power is unreachable due to missing prerequisites: {,  , ", i, r, o, n, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", i, r, o, n, -, p, r, o, c, e, s, s, i, n, g, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", i, r, o, n, -, p, r, o, c, e, s, s, i, n, g, ",  , }

27. 🔶 Broken Research Chain: landfill
   Severity: HIGH
   Affected: technology.landfill
   Conflicting Mods: lignumis → lignumis
   Problem: Technology landfill is unreachable due to missing prerequisites: {,  , ", b, u, r, n, e, r, -, a, u, t, o, m, a, t, i, o, n, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", b, u, r, n, e, r, -, a, u, t, o, m, a, t, i, o, n, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", b, u, r, n, e, r, -, a, u, t, o, m, a, t, i, o, n, ",  , }

28. 🔶 Broken Research Chain: worker-robots-speed-1
   Severity: HIGH
   Affected: technology.worker-robots-speed-1
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-1 is unreachable due to missing prerequisites: {,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ", ,,  , ", b, a, s, i, c, -, c, o, n, s, t, r, u, c, t, i, o, n, -, r, o, b, o, t, i, c, s, -, g, o, l, d, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ", ,,  , ", b, a, s, i, c, -, c, o, n, s, t, r, u, c, t, i, o, n, -, r, o, b, o, t, i, c, s, -, g, o, l, d, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", p, r, o, v, i, s, i, o, n, a, l, -, r, o, c, k, e, t, r, y, ", ,,  , ", b, a, s, i, c, -, c, o, n, s, t, r, u, c, t, i, o, n, -, r, o, b, o, t, i, c, s, -, g, o, l, d, ",  , }

29. 🔶 Broken Research Chain: worker-robots-speed-2
   Severity: HIGH
   Affected: technology.worker-robots-speed-2
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-2 is unreachable due to missing prerequisites: {, 
,  ,  ,  ,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 1, ", ,, 
,  ,  ,  ,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ", 
, }
   Root Cause: Missing prerequisite technologies: {, 
,  ,  ,  ,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 1, ", ,, 
,  ,  ,  ,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ", 
, }
   Suggested Solutions:
     • Add missing prerequisite technologies: {, 
,  ,  ,  ,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 1, ", ,, 
,  ,  ,  ,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ", 
, }

30. 🔶 Broken Research Chain: worker-robots-speed-3
   Severity: HIGH
   Affected: technology.worker-robots-speed-3
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-3 is unreachable due to missing prerequisites: {,  , ", r, o, b, o, t, i, c, s, ", ,,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", r, o, b, o, t, i, c, s, ", ,,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", r, o, b, o, t, i, c, s, ", ,,  , ", c, h, e, m, i, c, a, l, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

31. 🔶 Broken Research Chain: worker-robots-speed-4
   Severity: HIGH
   Affected: technology.worker-robots-speed-4
   Conflicting Mods: lignumis → lignumis
   Problem: Technology worker-robots-speed-4 is unreachable due to missing prerequisites: {,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 3, ", ,,  , ", u, t, i, l, i, t, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 3, ", ,,  , ", u, t, i, l, i, t, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", w, o, r, k, e, r, -, r, o, b, o, t, s, -, s, p, e, e, d, -, 3, ", ,,  , ", u, t, i, l, i, t, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

32. 🔶 Broken Research Chain: physical-projectile-damage-1
   Severity: HIGH
   Affected: technology.physical-projectile-damage-1
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-1 is unreachable due to missing prerequisites: {,  , ", b, a, s, i, c, -, g, u, n, -, t, u, r, r, e, t, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", b, a, s, i, c, -, g, u, n, -, t, u, r, r, e, t, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", b, a, s, i, c, -, g, u, n, -, t, u, r, r, e, t, ",  , }

33. 🔶 Broken Research Chain: physical-projectile-damage-2
   Severity: HIGH
   Affected: technology.physical-projectile-damage-2
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-2 is unreachable due to missing prerequisites: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

34. 🔶 Broken Research Chain: weapon-shooting-speed-2
   Severity: HIGH
   Affected: technology.weapon-shooting-speed-2
   Conflicting Mods: lignumis → lignumis
   Problem: Technology weapon-shooting-speed-2 is unreachable due to missing prerequisites: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 1, ", ,,  , ", s, t, e, a, m, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

35. 🔶 Broken Research Chain: physical-projectile-damage-3
   Severity: HIGH
   Affected: technology.physical-projectile-damage-3
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-3 is unreachable due to missing prerequisites: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

36. 🔶 Broken Research Chain: weapon-shooting-speed-3
   Severity: HIGH
   Affected: technology.weapon-shooting-speed-3
   Conflicting Mods: lignumis → lignumis
   Problem: Technology weapon-shooting-speed-3 is unreachable due to missing prerequisites: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", m, i, l, i, t, a, r, y, -, 2, ", ,,  , ", l, o, g, i, s, t, i, c, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

37. 🔶 Broken Research Chain: physical-projectile-damage-4
   Severity: HIGH
   Affected: technology.physical-projectile-damage-4
   Conflicting Mods: lignumis → lignumis
   Problem: Technology physical-projectile-damage-4 is unreachable due to missing prerequisites: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", p, h, y, s, i, c, a, l, -, p, r, o, j, e, c, t, i, l, e, -, d, a, m, a, g, e, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

38. 🔶 Broken Research Chain: weapon-shooting-speed-4
   Severity: HIGH
   Affected: technology.weapon-shooting-speed-4
   Conflicting Mods: lignumis → lignumis
   Problem: Technology weapon-shooting-speed-4 is unreachable due to missing prerequisites: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Root Cause: Missing prerequisite technologies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }
   Suggested Solutions:
     • Add missing prerequisite technologies: {,  , ", w, e, a, p, o, n, -, s, h, o, o, t, i, n, g, -, s, p, e, e, d, -, 3, ", ,,  , ", m, i, l, i, t, a, r, y, -, s, c, i, e, n, c, e, -, p, a, c, k, ",  , }

39. 🔶 Mod Technology Conflict: electronics
   Severity: HIGH
   Affected: technology.electronics
   Conflicting Mods: Age-of-Production → lignumis
   Problem: Technology 'electronics' modified by multiple mods
   Root Cause: Multiple mods (Age-of-Production, lignumis) modify the same technology
   Suggested Solutions:
     • Review technology prerequisites
     • Create compatibility patch for technology tree
     • Use conditional technology modifications

40. 🔶 Mod Technology Conflict: tree-seeding
   Severity: HIGH
   Affected: technology.tree-seeding
   Conflicting Mods: lignumis → gleba-reborn
   Problem: Technology 'tree-seeding' modified by multiple mods
   Root Cause: Multiple mods (lignumis, gleba-reborn) modify the same technology
   Suggested Solutions:
     • Review technology prerequisites
     • Create compatibility patch for technology tree
     • Use conditional technology modifications

41. 📋 Technology Conflict: electronics
   Severity: MEDIUM
   Affected: technology.electronics
   Conflicting Mods: Age-of-Production → lignumis
   Problem: Technology 'electronics' modified by multiple mods
   Root Cause: Multiple mods modify the same technology
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

42. 📋 Technology Conflict: tree-seeding
   Severity: MEDIUM
   Affected: technology.tree-seeding
   Conflicting Mods: lignumis → gleba-reborn
   Problem: Technology 'tree-seeding' modified by multiple mods
   Root Cause: Multiple mods modify the same technology
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

⚙️ OTHER CONFLICTS (Sorted by Priority)
========================================
1. 📋 Item Conflict: electric-mining-drill
   Severity: MEDIUM
   Affected: item.electric-mining-drill
   Conflicting Mods: bobmining → Krastorio2-spaced-out → OmegaDrill → aai-industry
   Problem: Item 'electric-mining-drill' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

2. 📋 Item Conflict: steel-plate
   Severity: MEDIUM
   Affected: item.steel-plate
   Conflicting Mods: slp-dyson-sphere-reworked → aai-industry → VoidProcessing → Hovercrafts → aai-vehicles-ironclad → Cold_biters → alien-module → boblogistics → crushing-industry → se-space-trains → Planet-Hopper → shield-projector → Fluid-level-indicator → grappling-gun → lex-aircraft → aquilo-seabloom-algaculture → cubium → Flare Stack → bobassembly → aai-vehicles-laser-tank → ballistic_missile → FluidMustFlow → bobenemies → vtk-cannon-turret → aai-vehicles-flame-tumbler → bobequipment → snouz_better_substation → corrundum → bobvehicleequipment → Cerys-Moon-of-Fulgora → Warehousing → dea-dia-system → More_Ammo → HelicopterRevival → PlutoniumEnergy → aai-vehicles-flame-tank → alloy-smelting → aai-signal-transmission → bobpower → metal-and-stars → minimalist-rails → secretas → Robocharger-Updated → More_Repair_Packs → OmegaDrill → atan-nuclear-science → bobplates → foundry-restructuring → lilys-cubeine → quirkycat_machines → Aircraft-space-age → castra → tenebris-prime → bobmining → bobmodules → StopgapNukes → Krastorio2-spaced-out
   Problem: Item 'steel-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

3. 📋 Item Conflict: electric-engine-unit
   Severity: MEDIUM
   Affected: item.electric-engine-unit
   Conflicting Mods: aai-industry → RampantFixed → Hovercrafts → boblogistics → crushing-industry → lex-aircraft → cubium → ballistic_missile → orbital-transfer → corrundum → Kux-OrbitalIonCannon → bobvehicleequipment → dea-dia-system → aai-signal-transmission → secretas → OmegaDrill → bobplates → Aircraft-space-age → castra → Krastorio2-spaced-out
   Problem: Item 'electric-engine-unit' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

4. 📋 Item Conflict: processing-unit
   Severity: MEDIUM
   Affected: item.processing-unit
   Conflicting Mods: slp-dyson-sphere-reworked → aai-industry → RampantFixed → Hovercrafts → boblogistics → crushing-industry → se-space-trains → bobelectronics → shield-projector → lex-aircraft → cubium → bobassembly → ballistic_missile → orbital-transfer → atomic-artillery-reborn → Moshine → bobequipment → enemyracemanager → fulgora-coralmium-agriculture → corrundum → Kux-OrbitalIonCannon → bobvehicleequipment → Cerys-Moon-of-Fulgora → HelicopterRevival → PlutoniumEnergy → cerys-lunaponics → aai-signal-transmission → bobpower → metal-and-stars → secretas → More_Repair_Packs → OmegaDrill → atan-nuclear-science → bobplates → Aircraft-space-age → castra → bobmining → astroponics → bobmodules → StopgapNukes → Krastorio2-spaced-out → janus
   Problem: Item 'processing-unit' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

5. 📋 Item Conflict: concrete
   Severity: MEDIUM
   Affected: item.concrete
   Conflicting Mods: aai-industry → snouz-big-accumulator → crushing-industry → cubium → ballistic_missile → Moshine → fulgora-coralmium-agriculture → corrundum → Cerys-Moon-of-Fulgora → Moshine-assets → Warehousing → PlutoniumEnergy → alloy-smelting → bobpower → snouz-big-solar-panel → secretas → atan-nuclear-science → tenebris-prime → astroponics → metal-and-stars → Krastorio2-spaced-out
   Problem: Item 'concrete' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

6. 📋 Item Conflict: electric-furnace
   Severity: MEDIUM
   Affected: item.electric-furnace
   Conflicting Mods: cubium → bobassembly → bobplates → aai-industry → lilys-cubeine → Electric Furnaces → Krastorio2-spaced-out
   Problem: Item 'electric-furnace' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

7. 📋 Item Conflict: iron-plate
   Severity: MEDIUM
   Affected: item.iron-plate
   Conflicting Mods: aai-industry → alien-module → aai-vehicles-warden → aai-vehicles-hauler → boblogistics → terrapalus → crushing-industry → DoubleWagons → lex-aircraft → cubium → Flare Stack → bobassembly → bobgreenhouse → FluidMustFlow → vtk-cannon-turret → Moshine → bobequipment → corrundum → planet-muluna → aai-vehicles-chaingunner → dea-dia-system → More_Ammo → PlutoniumEnergy → equipment-gantry → wood-military → bobpower → secretas → Electric Furnaces → quirkycat_boron → bobplates → Aircraft-space-age → castra → tenebris-prime → bobmining → metal-and-stars → StopgapNukes → Krastorio2-spaced-out
   Problem: Item 'iron-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

8. 📋 Item Conflict: stone-brick
   Severity: MEDIUM
   Affected: item.stone-brick
   Conflicting Mods: cubium → planet-muluna → Warehousing → bobassembly → bobplates → aai-industry → dea-dia-system → castra → tenebris-prime → alloy-smelting → boblogistics → crushing-industry → metal-and-stars → lignumis → Cerys-Moon-of-Fulgora
   Problem: Item 'stone-brick' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

9. 📋 Item Conflict: stone-wall
   Severity: MEDIUM
   Affected: item.stone-wall
   Conflicting Mods: cubium → aai-industry
   Problem: Item 'stone-wall' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

10. 📋 Item Conflict: burner-assembling-machine
   Severity: MEDIUM
   Affected: item.burner-assembling-machine
   Conflicting Mods: lignumis → aai-industry
   Problem: Item 'burner-assembling-machine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

11. 📋 Item Conflict: sand
   Severity: MEDIUM
   Affected: item.sand
   Conflicting Mods: Moshine-assets → aai-industry → Moshine → crushing-industry → wood-industry → quirkycat_base
   Problem: Item 'sand' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

12. 📋 Item Conflict: stone
   Severity: MEDIUM
   Affected: item.stone
   Conflicting Mods: cubium → Moshine-assets → bobplates → bobgreenhouse → aai-industry → alien-module → vulcanus-sulfuric-bacteria → boblogistics → crushing-industry → secretas → fulgora-coralmium-agriculture → metal-and-stars → corrundum → wood-industry → Krastorio2-spaced-out
   Problem: Item 'stone' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

13. 📋 Item Conflict: glass
   Severity: MEDIUM
   Affected: item.glass
   Conflicting Mods: Moshine → crushing-industry → quirkycat_base → aai-industry
   Problem: Item 'glass' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

14. 📋 Item Conflict: iron-gear-wheel
   Severity: MEDIUM
   Affected: item.iron-gear-wheel
   Conflicting Mods: aai-industry → Hovercrafts → aai-vehicles-ironclad → alien-module → aai-vehicles-hauler → aai-vehicles-warden → boblogistics → crushing-industry → DoubleWagons → grappling-gun → cubium → Flare Stack → bobassembly → FluidMustFlow → bobenemies → bobequipment → corrundum → bobvehicleequipment → aai-vehicles-chaingunner → dea-dia-system → HelicopterRevival → aai-vehicles-flame-tank → bobpower → secretas → Robocharger-Updated → OmegaDrill → bobplates → foundry-restructuring → lilys-cubeine → castra → bobmining → Krastorio2-spaced-out
   Problem: Item 'iron-gear-wheel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

15. 📋 Item Conflict: copper-cable
   Severity: MEDIUM
   Affected: item.copper-cable
   Conflicting Mods: aai-industry → snouz-big-accumulator → TimeTools → castra → bobmodules → boblogistics → terrapalus → bobpower → bobequipment → Krastorio2-spaced-out → se-space-trains → secretas → bobelectronics → corrundum → lignumis → bobvehicleequipment → Cerys-Moon-of-Fulgora
   Problem: Item 'copper-cable' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

16. 📋 Item Conflict: iron-stick
   Severity: MEDIUM
   Affected: item.iron-stick
   Conflicting Mods: aai-industry → HelicopterRevival → wood-military → boblogistics → minimalist-rails → corrundum → Krastorio2-spaced-out → grappling-gun
   Problem: Item 'iron-stick' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

17. 📋 Item Conflict: copper-plate
   Severity: MEDIUM
   Affected: item.copper-plate
   Conflicting Mods: aai-industry → alien-module → boblogistics → crushing-industry → bobelectronics → cubium → bobassembly → bobgreenhouse → bobequipment → corrundum → bobvehicleequipment → Cerys-Moon-of-Fulgora → More_Ammo → PlutoniumEnergy → wood-military → Igrys → aai-signal-transmission → bobpower → secretas → bobplates → lilys-cubeine → castra → bobmodules → lignumis → Krastorio2-spaced-out
   Problem: Item 'copper-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

18. 📋 Item Conflict: stone-furnace
   Severity: MEDIUM
   Affected: item.stone-furnace
   Conflicting Mods: Flare Stack → bobplates → aai-industry → alloy-smelting → bobpower → Electric Furnaces
   Problem: Item 'stone-furnace' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

19. 📋 Item Conflict: battery
   Severity: MEDIUM
   Affected: item.battery
   Conflicting Mods: Cold_biters → alien-module → boblogistics → se-space-trains → shield-projector → aai-vehicles-laser-tank → bobequipment → Kux-OrbitalIonCannon → bobvehicleequipment → HelicopterRevival → aai-signal-transmission → bobpower → secretas → Robocharger-Updated → Aircraft-space-age → castra → metal-and-stars → Krastorio2-spaced-out → janus
   Problem: Item 'battery' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

20. 📋 Item Conflict: gun-turret
   Severity: MEDIUM
   Affected: item.gun-turret
   Conflicting Mods: aai-vehicles-chaingunner → HelicopterRevival → Hovercrafts → vtk-cannon-turret → secretas → Krastorio2-spaced-out
   Problem: Item 'gun-turret' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

21. 📋 Item Conflict: engine-unit
   Severity: MEDIUM
   Affected: item.engine-unit
   Conflicting Mods: cubium → foundry-restructuring → FluidMustFlow → HelicopterRevival → aai-vehicles-flame-tank → aai-vehicles-ironclad → Hovercrafts → castra → aai-vehicles-flame-tumbler → crushing-industry → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'engine-unit' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

22. 📋 Item Conflict: flamethrower
   Severity: MEDIUM
   Affected: item.flamethrower
   Conflicting Mods: metal-and-stars → aai-vehicles-flame-tank
   Problem: Item 'flamethrower' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

23. 📋 Item Conflict: advanced-circuit
   Severity: MEDIUM
   Affected: item.advanced-circuit
   Conflicting Mods: Hovercrafts → boblogistics → crushing-industry → bobelectronics → lex-aircraft → cubium → bobassembly → aai-vehicles-laser-tank → ballistic_missile → bobenemies → vtk-cannon-turret → aai-vehicles-flame-tumbler → Moshine → bobequipment → PavementDriveAssistContinued → bobvehicleequipment → Cerys-Moon-of-Fulgora → Warehousing → dea-dia-system → PlutoniumEnergy → alloy-smelting → bobpower → metal-and-stars → secretas → Robocharger-Updated → More_Repair_Packs → OmegaDrill → bobplates → Aircraft-space-age → castra → tenebris-prime → bobmining → bobmodules → StopgapNukes → Krastorio2-spaced-out → janus
   Problem: Item 'advanced-circuit' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

24. 📋 Item Conflict: iron-chest
   Severity: MEDIUM
   Affected: item.iron-chest
   Conflicting Mods: Warehousing → equipment-gantry → aai-vehicles-warden → aai-vehicles-hauler → metal-and-stars
   Problem: Item 'iron-chest' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

25. 📋 Item Conflict: grenade
   Severity: MEDIUM
   Affected: item.grenade
   Conflicting Mods: cubium → aai-vehicles-ironclad → Cold_biters → castra
   Problem: Item 'grenade' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

26. 📋 Item Conflict: explosives
   Severity: MEDIUM
   Affected: item.explosives
   Conflicting Mods: PlutoniumEnergy → aai-vehicles-ironclad → Aircraft-space-age → castra → vtk-cannon-turret → corrundum → StopgapNukes → Krastorio2-spaced-out
   Problem: Item 'explosives' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

27. 📋 Item Conflict: tank
   Severity: MEDIUM
   Affected: item.tank
   Conflicting Mods: Krastorio2-spaced-out → lex-aircraft → castra → aai-vehicles-laser-tank
   Problem: Item 'tank' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

28. 📋 Item Conflict: laser-turret
   Severity: MEDIUM
   Affected: item.laser-turret
   Conflicting Mods: aai-vehicles-laser-tank → Hovercrafts → terrapalus → secretas → Kux-OrbitalIonCannon
   Problem: Item 'laser-turret' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

29. 📋 Item Conflict: solid-fuel
   Severity: MEDIUM
   Affected: item.solid-fuel
   Conflicting Mods: cubium → planet-muluna → bobplates → aai-vehicles-laser-tank → Aircraft-space-age → secretas → wood-industry → metal-and-stars → corrundum → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'solid-fuel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

30. 📋 Item Conflict: electronic-circuit
   Severity: MEDIUM
   Affected: item.electronic-circuit
   Conflicting Mods: alien-module → aai-vehicles-warden → boblogistics → terrapalus → crushing-industry → Planet-Hopper → bobelectronics → lex-aircraft → aquilo-seabloom-algaculture → cubium → Flare Stack → bobassembly → vtk-cannon-turret → Moshine → bobequipment → corrundum → bobvehicleequipment → Cerys-Moon-of-Fulgora → dea-dia-system → TimeTools → wood-military → bobpower → metal-and-stars → Electric Furnaces → More_Repair_Packs → Automatic_Train_Painter → bobplates → Aircraft-space-age → castra → tenebris-prime → bobmining → bobmodules → lignumis → Krastorio2-spaced-out → janus
   Problem: Item 'electronic-circuit' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

31. 📋 Item Conflict: radar
   Severity: MEDIUM
   Affected: item.radar
   Conflicting Mods: slp-dyson-sphere-reworked → RampantFixed → PlutoniumEnergy → bobenemies → atomic-artillery-reborn → castra → aai-vehicles-warden → Kux-OrbitalIonCannon → Krastorio2-spaced-out
   Problem: Item 'radar' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

32. 📋 Item Conflict: coal
   Severity: MEDIUM
   Affected: item.coal
   Conflicting Mods: cubium → Moshine-assets → bobplates → quirkycat_machines → alien-module → aai-vehicles-warden → vulcanus-sulfuric-bacteria → alloy-smelting → Moshine → crushing-industry → metal-and-stars → bobelectronics → Krastorio2-spaced-out → grappling-gun
   Problem: Item 'coal' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

33. 📋 Item Conflict: submachine-gun
   Severity: MEDIUM
   Affected: item.submachine-gun
   Conflicting Mods: lex-aircraft → Krastorio2-spaced-out → Aircraft-space-age
   Problem: Item 'submachine-gun' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

34. 📋 Item Conflict: rocket-launcher
   Severity: MEDIUM
   Affected: item.rocket-launcher
   Conflicting Mods: HelicopterRevival → Hovercrafts → Aircraft-space-age → Krastorio2-spaced-out → lex-aircraft
   Problem: Item 'rocket-launcher' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

35. 📋 Item Conflict: low-density-structure
   Severity: MEDIUM
   Affected: item.low-density-structure
   Conflicting Mods: RampantFixed → Hovercrafts → StopgapNukes → shield-projector → lex-aircraft → cubium → orbital-transfer → bobequipment → fulgora-coralmium-agriculture → Kux-OrbitalIonCannon → bobvehicleequipment → Cerys-Moon-of-Fulgora → PlutoniumEnergy → secretas → More_Repair_Packs → lilys-cubeine → Aircraft-space-age → castra → astroponics → metal-and-stars → lignumis → Krastorio2-spaced-out → janus
   Problem: Item 'low-density-structure' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

36. 📋 Item Conflict: explosive-cannon-shell
   Severity: MEDIUM
   Affected: item.explosive-cannon-shell
   Conflicting Mods: PlutoniumEnergy → StopgapNukes → Aircraft-space-age
   Problem: Item 'explosive-cannon-shell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

37. 📋 Item Conflict: flamethrower-ammo
   Severity: MEDIUM
   Affected: item.flamethrower-ammo
   Conflicting Mods: StopgapNukes → Aircraft-space-age
   Problem: Item 'flamethrower-ammo' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

38. 📋 Item Conflict: energy-shield-mk2-equipment
   Severity: MEDIUM
   Affected: item.energy-shield-mk2-equipment
   Conflicting Mods: Hovercrafts → Aircraft-space-age → castra → bobequipment → Krastorio2-spaced-out
   Problem: Item 'energy-shield-mk2-equipment' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

39. 📋 Item Conflict: iron-ore
   Severity: MEDIUM
   Affected: item.iron-ore
   Conflicting Mods: cubium → Moshine-assets → bobplates → quirkycat_machines → alien-module → castra → tenebris-prime → crushing-industry → metal-and-stars → bobelectronics → corrundum → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'iron-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

40. 📋 Item Conflict: copper-ore
   Severity: MEDIUM
   Affected: item.copper-ore
   Conflicting Mods: cubium → Moshine-assets → bobplates → alien-module → crushing-industry → metal-and-stars → corrundum → Krastorio2-spaced-out
   Problem: Item 'copper-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

41. 📋 Item Conflict: coke
   Severity: MEDIUM
   Affected: item.coke
   Conflicting Mods: alloy-smelting → wood-industry
   Problem: Item 'coke' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

42. 📋 Item Conflict: crushed-coal
   Severity: MEDIUM
   Affected: item.crushed-coal
   Conflicting Mods: alloy-smelting → crushing-industry
   Problem: Item 'crushed-coal' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

43. 📋 Item Conflict: carbon
   Severity: MEDIUM
   Affected: item.carbon
   Conflicting Mods: cubium → Moshine-assets → RampantFixed → castra → vulcanus-sulfuric-bacteria → alloy-smelting → Moshine → crushing-industry → astroponics → wood-industry → metal-and-stars → corrundum → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'carbon' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

44. 📋 Item Conflict: spoilage
   Severity: MEDIUM
   Affected: item.spoilage
   Conflicting Mods: aquilo-seabloom-algaculture → cubium → planet-muluna → secretas → fulgora-coralmium-agriculture
   Problem: Item 'spoilage' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

45. 📋 Item Conflict: landfill
   Severity: MEDIUM
   Affected: item.landfill
   Conflicting Mods: aquilo-seabloom-algaculture → Krastorio2-spaced-out → astroponics
   Problem: Item 'landfill' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

46. 📋 Item Conflict: tungsten-plate
   Severity: MEDIUM
   Affected: item.tungsten-plate
   Conflicting Mods: aquilo-seabloom-algaculture → cubium → promethium-quality → slp-dyson-sphere-reworked → lilys-cubeine → VoidProcessing → secretas → metal-and-stars → corrundum → StopgapNukes → Krastorio2-spaced-out → Fluid-level-indicator
   Problem: Item 'tungsten-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

47. 📋 Item Conflict: superconductor
   Severity: MEDIUM
   Affected: item.superconductor
   Conflicting Mods: aquilo-seabloom-algaculture → slp-dyson-sphere-reworked → RampantFixed → VoidProcessing → Krastorio2-spaced-out → secretas → metal-and-stars → promethium-quality → Cerys-Moon-of-Fulgora
   Problem: Item 'superconductor' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

48. 📋 Item Conflict: pentapod-egg
   Severity: MEDIUM
   Affected: item.pentapod-egg
   Conflicting Mods: aquilo-seabloom-algaculture → cubium → Krastorio2-spaced-out → secretas
   Problem: Item 'pentapod-egg' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

49. 📋 Item Conflict: nutrients
   Severity: MEDIUM
   Affected: item.nutrients
   Conflicting Mods: aquilo-seabloom-algaculture → VoidProcessing → secretas → metal-and-stars → corrundum → lignumis
   Problem: Item 'nutrients' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

50. 📋 Item Conflict: resin
   Severity: MEDIUM
   Affected: item.resin
   Conflicting Mods: aquilo-seabloom-algaculture → wood-industry → vulcanus-sulfuric-bacteria
   Problem: Item 'resin' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

51. 📋 Item Conflict: woodchips
   Severity: MEDIUM
   Affected: item.woodchips
   Conflicting Mods: aquilo-seabloom-algaculture → wood-industry
   Problem: Item 'woodchips' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

52. 📋 Item Conflict: wood
   Severity: MEDIUM
   Affected: item.wood
   Conflicting Mods: aquilo-seabloom-algaculture → planet-muluna → Wood-Walls → bobplates → bobgreenhouse → lilys-cubeine → vulcanus-sulfuric-bacteria → wood-military → astroponics → enemyracemanager → metal-and-stars → wood-industry → bobelectronics → corrundum → lignumis → Krastorio2-spaced-out
   Problem: Item 'wood' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

53. 📋 Item Conflict: bioflux
   Severity: MEDIUM
   Affected: item.bioflux
   Conflicting Mods: cubium → VoidProcessing → astroponics → secretas → metal-and-stars → corrundum
   Problem: Item 'bioflux' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

54. 📋 Item Conflict: pipe
   Severity: MEDIUM
   Affected: item.pipe
   Conflicting Mods: boblogistics → Planet-Hopper → Fluid-level-indicator → grappling-gun → Flare Stack → bobassembly → ballistic_missile → FluidMustFlow → planet-muluna → dea-dia-system → bobpower → secretas → bobplates → foundry-restructuring → lilys-cubeine → castra → Flow Control → bobmining → astroponics → metal-and-stars → Krastorio2-spaced-out
   Problem: Item 'pipe' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

55. 📋 Item Conflict: tree-seed
   Severity: MEDIUM
   Affected: item.tree-seed
   Conflicting Mods: planet-muluna → astroponics
   Problem: Item 'tree-seed' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

56. 📋 Item Conflict: calcite
   Severity: MEDIUM
   Affected: item.calcite
   Conflicting Mods: cubium → Moshine-assets → lilys-cubeine → common-prototypes → vulcanus-sulfuric-bacteria → crushing-industry → astroponics → metal-and-stars → corrundum → lignumis → Krastorio2-spaced-out
   Problem: Item 'calcite' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

57. 📋 Item Conflict: yumako-seed
   Severity: MEDIUM
   Affected: item.yumako-seed
   Conflicting Mods: Krastorio2-spaced-out → planet-muluna → astroponics
   Problem: Item 'yumako-seed' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

58. 📋 Item Conflict: yumako
   Severity: MEDIUM
   Affected: item.yumako
   Conflicting Mods: Krastorio2-spaced-out → planet-muluna → astroponics
   Problem: Item 'yumako' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

59. 📋 Item Conflict: jellynut-seed
   Severity: MEDIUM
   Affected: item.jellynut-seed
   Conflicting Mods: Krastorio2-spaced-out → planet-muluna → astroponics
   Problem: Item 'jellynut-seed' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

60. 📋 Item Conflict: jellynut
   Severity: MEDIUM
   Affected: item.jellynut
   Conflicting Mods: Krastorio2-spaced-out → planet-muluna → astroponics
   Problem: Item 'jellynut' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

61. 📋 Item Conflict: uranium-235
   Severity: MEDIUM
   Affected: item.uranium-235
   Conflicting Mods: atan-nuclear-science → lilys-cubeine → bobplates → RampantFixed → metal-and-stars → StopgapNukes → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'uranium-235' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

62. 📋 Item Conflict: water-barrel
   Severity: MEDIUM
   Affected: item.water-barrel
   Conflicting Mods: atan-nuclear-science → enemyracemanager
   Problem: Item 'water-barrel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

63. 📋 Item Conflict: barrel
   Severity: MEDIUM
   Affected: item.barrel
   Conflicting Mods: atan-nuclear-science → PlutoniumEnergy
   Problem: Item 'barrel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

64. 📋 Item Conflict: centrifuge
   Severity: MEDIUM
   Affected: item.centrifuge
   Conflicting Mods: atan-nuclear-science → bobassembly
   Problem: Item 'centrifuge' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

65. 📋 Item Conflict: refined-concrete
   Severity: MEDIUM
   Affected: item.refined-concrete
   Conflicting Mods: atan-nuclear-science → cubium → bobassembly → HelicopterRevival → minimalist-rails → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'refined-concrete' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

66. 📋 Item Conflict: plutonium-239
   Severity: MEDIUM
   Affected: item.plutonium-239
   Conflicting Mods: atan-nuclear-science → PlutoniumEnergy → Cerys-Moon-of-Fulgora
   Problem: Item 'plutonium-239' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

67. 📋 Item Conflict: atomic-bomb
   Severity: MEDIUM
   Affected: item.atomic-bomb
   Conflicting Mods: atomic-artillery-reborn → Cerys-Moon-of-Fulgora
   Problem: Item 'atomic-bomb' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

68. 📋 Item Conflict: explosive-uranium-cannon-shell
   Severity: MEDIUM
   Affected: item.explosive-uranium-cannon-shell
   Conflicting Mods: atomic-artillery-reborn → Cerys-Moon-of-Fulgora
   Problem: Item 'explosive-uranium-cannon-shell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

69. 📋 Item Conflict: storage-tank
   Severity: MEDIUM
   Affected: item.storage-tank
   Conflicting Mods: ballistic_missile → boblogistics → metal-and-stars → secretas
   Problem: Item 'storage-tank' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

70. 📋 Item Conflict: rocket-part
   Severity: MEDIUM
   Affected: item.rocket-part
   Conflicting Mods: ballistic_missile → metal-and-stars → Planet-Hopper
   Problem: Item 'rocket-part' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

71. 📋 Item Conflict: assembling-machine-3
   Severity: MEDIUM
   Affected: item.assembling-machine-3
   Conflicting Mods: Moshine → Krastorio2-spaced-out → bobassembly
   Problem: Item 'assembling-machine-3' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

72. 📋 Item Conflict: bob-electric-chemical-furnace
   Severity: MEDIUM
   Affected: item.bob-electric-chemical-furnace
   Conflicting Mods: bobassembly → bobplates
   Problem: Item 'bob-electric-chemical-furnace' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

73. 📋 Item Conflict: chemical-plant
   Severity: MEDIUM
   Affected: item.chemical-plant
   Conflicting Mods: corrundum → bobassembly
   Problem: Item 'chemical-plant' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

74. 📋 Item Conflict: bob-distillery
   Severity: MEDIUM
   Affected: item.bob-distillery
   Conflicting Mods: bobassembly → bobplates
   Problem: Item 'bob-distillery' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

75. 📋 Item Conflict: bob-electrolyser
   Severity: MEDIUM
   Affected: item.bob-electrolyser
   Conflicting Mods: bobassembly → bobplates
   Problem: Item 'bob-electrolyser' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

76. 📋 Item Conflict: plastic-bar
   Severity: MEDIUM
   Affected: item.plastic-bar
   Conflicting Mods: Cold_biters → boblogistics → StopgapNukes → bobelectronics → Fluid-level-indicator → cubium → bobassembly → vtk-cannon-turret → bobequipment → fulgora-coralmium-agriculture → corrundum → Kux-OrbitalIonCannon → bobvehicleequipment → More_Ammo → HelicopterRevival → metal-and-stars → secretas → More_Repair_Packs → bobplates → lilys-cubeine → castra → tenebris-prime → bobmodules → lignumis → Krastorio2-spaced-out
   Problem: Item 'plastic-bar' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

77. 📋 Item Conflict: bob-fluid-furnace
   Severity: MEDIUM
   Affected: item.bob-fluid-furnace
   Conflicting Mods: bobpower → bobassembly
   Problem: Item 'bob-fluid-furnace' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

78. 📋 Item Conflict: steel-furnace
   Severity: MEDIUM
   Affected: item.steel-furnace
   Conflicting Mods: Electric Furnaces → bobpower → bobassembly → bobplates
   Problem: Item 'steel-furnace' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

79. 📋 Item Conflict: bob-steel-mixing-furnace
   Severity: MEDIUM
   Affected: item.bob-steel-mixing-furnace
   Conflicting Mods: bobassembly → bobplates
   Problem: Item 'bob-steel-mixing-furnace' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

80. 📋 Item Conflict: bob-steel-chemical-furnace
   Severity: MEDIUM
   Affected: item.bob-steel-chemical-furnace
   Conflicting Mods: bobassembly → bobplates
   Problem: Item 'bob-steel-chemical-furnace' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

81. 📋 Item Conflict: bob-tin-plate
   Severity: MEDIUM
   Affected: item.bob-tin-plate
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-tin-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

82. 📋 Item Conflict: bob-rubber
   Severity: MEDIUM
   Affected: item.bob-rubber
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-rubber' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

83. 📋 Item Conflict: bob-gold-plate
   Severity: MEDIUM
   Affected: item.bob-gold-plate
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-gold-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

84. 📋 Item Conflict: bob-resin
   Severity: MEDIUM
   Affected: item.bob-resin
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-resin' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

85. 📋 Item Conflict: bob-advanced-processing-unit
   Severity: MEDIUM
   Affected: item.bob-advanced-processing-unit
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-advanced-processing-unit' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

86. 📋 Item Conflict: bob-silicon-plate
   Severity: MEDIUM
   Affected: item.bob-silicon-plate
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-silicon-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

87. 📋 Item Conflict: bob-silicon-wafer
   Severity: MEDIUM
   Affected: item.bob-silicon-wafer
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-silicon-wafer' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

88. 📋 Item Conflict: bob-lead-plate
   Severity: MEDIUM
   Affected: item.bob-lead-plate
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item 'bob-lead-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

89. 📋 Item Conflict: bob-alien-artifact
   Severity: MEDIUM
   Affected: item.bob-alien-artifact
   Conflicting Mods: bobenemies → bobvehicleequipment
   Problem: Item 'bob-alien-artifact' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

90. 📋 Item Conflict: bob-alien-artifact-red
   Severity: MEDIUM
   Affected: item.bob-alien-artifact-red
   Conflicting Mods: bobenemies → bobplates
   Problem: Item 'bob-alien-artifact-red' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

91. 📋 Item Conflict: bob-alien-artifact-orange
   Severity: MEDIUM
   Affected: item.bob-alien-artifact-orange
   Conflicting Mods: bobenemies → bobplates
   Problem: Item 'bob-alien-artifact-orange' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

92. 📋 Item Conflict: bob-alien-artifact-yellow
   Severity: MEDIUM
   Affected: item.bob-alien-artifact-yellow
   Conflicting Mods: bobenemies → bobplates
   Problem: Item 'bob-alien-artifact-yellow' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

93. 📋 Item Conflict: bob-alien-artifact-green
   Severity: MEDIUM
   Affected: item.bob-alien-artifact-green
   Conflicting Mods: bobenemies → bobplates
   Problem: Item 'bob-alien-artifact-green' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

94. 📋 Item Conflict: bob-alien-artifact-blue
   Severity: MEDIUM
   Affected: item.bob-alien-artifact-blue
   Conflicting Mods: bobenemies → bobplates
   Problem: Item 'bob-alien-artifact-blue' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

95. 📋 Item Conflict: bob-alien-artifact-purple
   Severity: MEDIUM
   Affected: item.bob-alien-artifact-purple
   Conflicting Mods: bobenemies → bobplates
   Problem: Item 'bob-alien-artifact-purple' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

96. 📋 Item Conflict: power-armor-mk2
   Severity: MEDIUM
   Affected: item.power-armor-mk2
   Conflicting Mods: Cold_biters → bobequipment
   Problem: Item 'power-armor-mk2' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

97. 📋 Item Conflict: speed-module-2
   Severity: MEDIUM
   Affected: item.speed-module-2
   Conflicting Mods: Electric Furnaces → Krastorio2-spaced-out → bobequipment
   Problem: Item 'speed-module-2' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

98. 📋 Item Conflict: efficiency-module-3
   Severity: MEDIUM
   Affected: item.efficiency-module-3
   Conflicting Mods: bobmodules → bobequipment → secretas → bobvehicleequipment
   Problem: Item 'efficiency-module-3' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

99. 📋 Item Conflict: speed-module-3
   Severity: MEDIUM
   Affected: item.speed-module-3
   Conflicting Mods: bobequipment → secretas → bobvehicleequipment → bobmodules → Krastorio2-spaced-out
   Problem: Item 'speed-module-3' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

100. 📋 Item Conflict: productivity-module-2
   Severity: MEDIUM
   Affected: item.productivity-module-2
   Conflicting Mods: metal-and-stars → Moshine → bobequipment → bobvehicleequipment
   Problem: Item 'productivity-module-2' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

101. 📋 Item Conflict: productivity-module-3
   Severity: MEDIUM
   Affected: item.productivity-module-3
   Conflicting Mods: bobmodules → bobequipment → secretas → bobvehicleequipment
   Problem: Item 'productivity-module-3' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

102. 📋 Item Conflict: battery-mk2-equipment
   Severity: MEDIUM
   Affected: item.battery-mk2-equipment
   Conflicting Mods: Hovercrafts → bobequipment
   Problem: Item 'battery-mk2-equipment' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

103. 📋 Item Conflict: fission-reactor-equipment
   Severity: MEDIUM
   Affected: item.fission-reactor-equipment
   Conflicting Mods: PlutoniumEnergy → bobequipment
   Problem: Item 'fission-reactor-equipment' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

104. 📋 Item Conflict: uranium-fuel-cell
   Severity: MEDIUM
   Affected: item.uranium-fuel-cell
   Conflicting Mods: slp-dyson-sphere-reworked → maraxsis → bobequipment → secretas → metal-and-stars → StopgapNukes → bobvehicleequipment
   Problem: Item 'uranium-fuel-cell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

105. 📋 Item Conflict: night-vision-equipment
   Severity: MEDIUM
   Affected: item.night-vision-equipment
   Conflicting Mods: Krastorio2-spaced-out → bobequipment
   Problem: Item 'night-vision-equipment' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

106. 📋 Item Conflict: solar-panel-equipment
   Severity: MEDIUM
   Affected: item.solar-panel-equipment
   Conflicting Mods: Krastorio2-spaced-out → bobequipment
   Problem: Item 'solar-panel-equipment' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

107. 📋 Item Conflict: personal-laser-defense-equipment
   Severity: MEDIUM
   Affected: item.personal-laser-defense-equipment
   Conflicting Mods: Krastorio2-spaced-out → bobequipment
   Problem: Item 'personal-laser-defense-equipment' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

108. 📋 Item Conflict: exoskeleton-equipment
   Severity: MEDIUM
   Affected: item.exoskeleton-equipment
   Conflicting Mods: Krastorio2-spaced-out → bobequipment
   Problem: Item 'exoskeleton-equipment' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

109. 📋 Item Conflict: sulfur
   Severity: MEDIUM
   Affected: item.sulfur
   Conflicting Mods: cubium → Moshine-assets → bobplates → bobgreenhouse → More_Ammo → castra → tenebris-prime → vulcanus-sulfuric-bacteria → corrundum → StopgapNukes
   Problem: Item 'sulfur' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

110. 📋 Item Conflict: bob-brass-alloy
   Severity: MEDIUM
   Affected: item.bob-brass-alloy
   Conflicting Mods: boblogistics → bobplates
   Problem: Item 'bob-brass-alloy' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

111. 📋 Item Conflict: bob-titanium-plate
   Severity: MEDIUM
   Affected: item.bob-titanium-plate
   Conflicting Mods: boblogistics → bobplates
   Problem: Item 'bob-titanium-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

112. 📋 Item Conflict: long-handed-inserter
   Severity: MEDIUM
   Affected: item.long-handed-inserter
   Conflicting Mods: boblogistics → long_stack_inserter → Krastorio2-spaced-out
   Problem: Item 'long-handed-inserter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

113. 📋 Item Conflict: transport-belt
   Severity: MEDIUM
   Affected: item.transport-belt
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora → cubium
   Problem: Item 'transport-belt' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

114. 📋 Item Conflict: fast-transport-belt
   Severity: MEDIUM
   Affected: item.fast-transport-belt
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → cubium
   Problem: Item 'fast-transport-belt' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

115. 📋 Item Conflict: express-transport-belt
   Severity: MEDIUM
   Affected: item.express-transport-belt
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → OmegaDrill → cubium
   Problem: Item 'express-transport-belt' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

116. 📋 Item Conflict: fast-underground-belt
   Severity: MEDIUM
   Affected: item.fast-underground-belt
   Conflicting Mods: boblogistics → cubium
   Problem: Item 'fast-underground-belt' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

117. 📋 Item Conflict: express-underground-belt
   Severity: MEDIUM
   Affected: item.express-underground-belt
   Conflicting Mods: boblogistics → cubium
   Problem: Item 'express-underground-belt' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

118. 📋 Item Conflict: fast-splitter
   Severity: MEDIUM
   Affected: item.fast-splitter
   Conflicting Mods: boblogistics → cubium
   Problem: Item 'fast-splitter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

119. 📋 Item Conflict: express-splitter
   Severity: MEDIUM
   Affected: item.express-splitter
   Conflicting Mods: boblogistics → cubium
   Problem: Item 'express-splitter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

120. 📋 Item Conflict: burner-inserter
   Severity: MEDIUM
   Affected: item.burner-inserter
   Conflicting Mods: boblogistics → lignumis → Krastorio2-spaced-out
   Problem: Item 'burner-inserter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

121. 📋 Item Conflict: fast-inserter
   Severity: MEDIUM
   Affected: item.fast-inserter
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → cubium
   Problem: Item 'fast-inserter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

122. 📋 Item Conflict: bulk-inserter
   Severity: MEDIUM
   Affected: item.bulk-inserter
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → secretas
   Problem: Item 'bulk-inserter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

123. 📋 Item Conflict: inserter
   Severity: MEDIUM
   Affected: item.inserter
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → secretas → cubium
   Problem: Item 'inserter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

124. 📋 Item Conflict: passive-provider-chest
   Severity: MEDIUM
   Affected: item.passive-provider-chest
   Conflicting Mods: boblogistics → orbital-transfer → Warehousing
   Problem: Item 'passive-provider-chest' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

125. 📋 Item Conflict: active-provider-chest
   Severity: MEDIUM
   Affected: item.active-provider-chest
   Conflicting Mods: boblogistics → Warehousing
   Problem: Item 'active-provider-chest' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

126. 📋 Item Conflict: storage-chest
   Severity: MEDIUM
   Affected: item.storage-chest
   Conflicting Mods: boblogistics → Warehousing
   Problem: Item 'storage-chest' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

127. 📋 Item Conflict: buffer-chest
   Severity: MEDIUM
   Affected: item.buffer-chest
   Conflicting Mods: boblogistics → Warehousing
   Problem: Item 'buffer-chest' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

128. 📋 Item Conflict: requester-chest
   Severity: MEDIUM
   Affected: item.requester-chest
   Conflicting Mods: boblogistics → orbital-transfer → Warehousing
   Problem: Item 'requester-chest' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

129. 📋 Item Conflict: bob-bronze-alloy
   Severity: MEDIUM
   Affected: item.bob-bronze-alloy
   Conflicting Mods: boblogistics → bobplates
   Problem: Item 'bob-bronze-alloy' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

130. 📋 Item Conflict: bob-silicon-nitride
   Severity: MEDIUM
   Affected: item.bob-silicon-nitride
   Conflicting Mods: boblogistics → bobplates
   Problem: Item 'bob-silicon-nitride' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

131. 📋 Item Conflict: bob-tungsten-plate
   Severity: MEDIUM
   Affected: item.bob-tungsten-plate
   Conflicting Mods: boblogistics → bobplates
   Problem: Item 'bob-tungsten-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

132. 📋 Item Conflict: bob-nitinol-alloy
   Severity: MEDIUM
   Affected: item.bob-nitinol-alloy
   Conflicting Mods: boblogistics → bobplates
   Problem: Item 'bob-nitinol-alloy' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

133. 📋 Item Conflict: bob-copper-tungsten-alloy
   Severity: MEDIUM
   Affected: item.bob-copper-tungsten-alloy
   Conflicting Mods: boblogistics → bobplates
   Problem: Item 'bob-copper-tungsten-alloy' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

134. 📋 Item Conflict: pump
   Severity: MEDIUM
   Affected: item.pump
   Conflicting Mods: boblogistics → secretas
   Problem: Item 'pump' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

135. 📋 Item Conflict: roboport
   Severity: MEDIUM
   Affected: item.roboport
   Conflicting Mods: boblogistics → Krastorio2-spaced-out
   Problem: Item 'roboport' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

136. 📋 Item Conflict: steel-chest
   Severity: MEDIUM
   Affected: item.steel-chest
   Conflicting Mods: boblogistics → Krastorio2-spaced-out
   Problem: Item 'steel-chest' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

137. 📋 Item Conflict: locomotive
   Severity: MEDIUM
   Affected: item.locomotive
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → se-space-trains
   Problem: Item 'locomotive' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

138. 📋 Item Conflict: cargo-wagon
   Severity: MEDIUM
   Affected: item.cargo-wagon
   Conflicting Mods: boblogistics → se-space-trains → DoubleWagons
   Problem: Item 'cargo-wagon' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

139. 📋 Item Conflict: fluid-wagon
   Severity: MEDIUM
   Affected: item.fluid-wagon
   Conflicting Mods: boblogistics → se-space-trains → DoubleWagons
   Problem: Item 'fluid-wagon' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

140. 📋 Item Conflict: flying-robot-frame
   Severity: MEDIUM
   Affected: item.flying-robot-frame
   Conflicting Mods: boblogistics → secretas → cubium
   Problem: Item 'flying-robot-frame' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

141. 📋 Item Conflict: quality-module-3
   Severity: MEDIUM
   Affected: item.quality-module-3
   Conflicting Mods: bobmodules → secretas
   Problem: Item 'quality-module-3' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

142. 📋 Item Conflict: bob-ruby-ore
   Severity: MEDIUM
   Affected: item.bob-ruby-ore
   Conflicting Mods: bobores → bobplates
   Problem: Item 'bob-ruby-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

143. 📋 Item Conflict: bob-sapphire-ore
   Severity: MEDIUM
   Affected: item.bob-sapphire-ore
   Conflicting Mods: bobores → bobplates
   Problem: Item 'bob-sapphire-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

144. 📋 Item Conflict: bob-emerald-ore
   Severity: MEDIUM
   Affected: item.bob-emerald-ore
   Conflicting Mods: bobores → bobplates
   Problem: Item 'bob-emerald-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

145. 📋 Item Conflict: bob-amethyst-ore
   Severity: MEDIUM
   Affected: item.bob-amethyst-ore
   Conflicting Mods: bobores → bobplates
   Problem: Item 'bob-amethyst-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

146. 📋 Item Conflict: bob-topaz-ore
   Severity: MEDIUM
   Affected: item.bob-topaz-ore
   Conflicting Mods: bobores → bobplates
   Problem: Item 'bob-topaz-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

147. 📋 Item Conflict: bob-diamond-ore
   Severity: MEDIUM
   Affected: item.bob-diamond-ore
   Conflicting Mods: bobores → bobplates
   Problem: Item 'bob-diamond-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

148. 📋 Item Conflict: bob-alien-orange-alloy
   Severity: MEDIUM
   Affected: item.bob-alien-orange-alloy
   Conflicting Mods: bobvehicleequipment → bobplates
   Problem: Item 'bob-alien-orange-alloy' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

149. 📋 Item Conflict: uranium-238
   Severity: MEDIUM
   Affected: item.uranium-238
   Conflicting Mods: bobplates → More_Ammo → PlutoniumEnergy → vtk-cannon-turret → metal-and-stars → StopgapNukes → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'uranium-238' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

150. 📋 Item Conflict: heat-pipe
   Severity: MEDIUM
   Affected: item.heat-pipe
   Conflicting Mods: cubium → Hovercrafts → bobpower → secretas → metal-and-stars → Cerys-Moon-of-Fulgora
   Problem: Item 'heat-pipe' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

151. 📋 Item Conflict: accumulator
   Severity: MEDIUM
   Affected: item.accumulator
   Conflicting Mods: slp-dyson-sphere-reworked → cubium → RampantFixed → snouz-big-accumulator → bobpower → metal-and-stars → Kux-OrbitalIonCannon
   Problem: Item 'accumulator' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

152. 📋 Item Conflict: boiler
   Severity: MEDIUM
   Affected: item.boiler
   Conflicting Mods: corrundum → bobpower → secretas
   Problem: Item 'boiler' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

153. 📋 Item Conflict: heat-exchanger
   Severity: MEDIUM
   Affected: item.heat-exchanger
   Conflicting Mods: Hovercrafts → bobpower
   Problem: Item 'heat-exchanger' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

154. 📋 Item Conflict: nuclear-reactor
   Severity: MEDIUM
   Affected: item.nuclear-reactor
   Conflicting Mods: bobpower → RampantFixed
   Problem: Item 'nuclear-reactor' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

155. 📋 Item Conflict: medium-electric-pole
   Severity: MEDIUM
   Affected: item.medium-electric-pole
   Conflicting Mods: bobpower → snouz-big-solar-panel → secretas
   Problem: Item 'medium-electric-pole' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

156. 📋 Item Conflict: substation
   Severity: MEDIUM
   Affected: item.substation
   Conflicting Mods: bobpower → Krastorio2-spaced-out → snouz_better_substation
   Problem: Item 'substation' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

157. 📋 Item Conflict: solar-panel
   Severity: MEDIUM
   Affected: item.solar-panel
   Conflicting Mods: slp-dyson-sphere-reworked → bobpower → snouz-big-solar-panel → secretas → Kux-OrbitalIonCannon → Krastorio2-spaced-out
   Problem: Item 'solar-panel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

158. 📋 Item Conflict: steam-engine
   Severity: MEDIUM
   Affected: item.steam-engine
   Conflicting Mods: corrundum → bobpower → cubium
   Problem: Item 'steam-engine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

159. 📋 Item Conflict: steam-turbine
   Severity: MEDIUM
   Affected: item.steam-turbine
   Conflicting Mods: bobpower → secretas → corrundum → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'steam-turbine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

160. 📋 Item Conflict: productivity-module
   Severity: MEDIUM
   Affected: item.productivity-module
   Conflicting Mods: cubium → crushing-industry → bobvehicleequipment
   Problem: Item 'productivity-module' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

161. 📋 Item Conflict: firearm-magazine
   Severity: MEDIUM
   Affected: item.firearm-magazine
   Conflicting Mods: More_Ammo → cubium → castra
   Problem: Item 'firearm-magazine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

162. 📋 Item Conflict: piercing-rounds-magazine
   Severity: MEDIUM
   Affected: item.piercing-rounds-magazine
   Conflicting Mods: cubium → More_Ammo → PlutoniumEnergy → castra → Krastorio2-spaced-out
   Problem: Item 'piercing-rounds-magazine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

163. 📋 Item Conflict: uranium-rounds-magazine
   Severity: MEDIUM
   Affected: item.uranium-rounds-magazine
   Conflicting Mods: StopgapNukes → Cerys-Moon-of-Fulgora → castra
   Problem: Item 'uranium-rounds-magazine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

164. 📋 Item Conflict: lithium-plate
   Severity: MEDIUM
   Affected: item.lithium-plate
   Conflicting Mods: slp-dyson-sphere-reworked → cubium → VoidProcessing → castra → secretas → metal-and-stars → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Item 'lithium-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

165. 📋 Item Conflict: supercapacitor
   Severity: MEDIUM
   Affected: item.supercapacitor
   Conflicting Mods: cubium → RampantFixed → castra → tenebris-prime → secretas → metal-and-stars → lignumis
   Problem: Item 'supercapacitor' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

166. 📋 Item Conflict: holmium-plate
   Severity: MEDIUM
   Affected: item.holmium-plate
   Conflicting Mods: cubium → VoidProcessing → castra → secretas → metal-and-stars → Cerys-Moon-of-Fulgora
   Problem: Item 'holmium-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

167. 📋 Item Conflict: quantum-processor
   Severity: MEDIUM
   Affected: item.quantum-processor
   Conflicting Mods: slp-dyson-sphere-reworked → cubium → RampantFixed → VoidProcessing → castra → Krastorio2-spaced-out → promethium-quality
   Problem: Item 'quantum-processor' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

168. 📋 Item Conflict: poison-capsule
   Severity: MEDIUM
   Affected: item.poison-capsule
   Conflicting Mods: Krastorio2-spaced-out → castra
   Problem: Item 'poison-capsule' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

169. 📋 Item Conflict: rocket-fuel
   Severity: MEDIUM
   Affected: item.rocket-fuel
   Conflicting Mods: cubium → lignumis → VoidProcessing → PlutoniumEnergy → castra → tenebris-prime → StopgapNukes → metal-and-stars → corrundum → Kux-OrbitalIonCannon → Krastorio2-spaced-out
   Problem: Item 'rocket-fuel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

170. 📋 Item Conflict: carbon-fiber
   Severity: MEDIUM
   Affected: item.carbon-fiber
   Conflicting Mods: slp-dyson-sphere-reworked → cubium → lilys-cubeine → castra → secretas → Krastorio2-spaced-out
   Problem: Item 'carbon-fiber' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

171. 📋 Item Conflict: ancient-structure-repair-part
   Severity: MEDIUM
   Affected: item.ancient-structure-repair-part
   Conflicting Mods: Cerys-Moon-of-Fulgora → cerys-lunaponics
   Problem: Item 'ancient-structure-repair-part' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

172. 📋 Item Conflict: cerys-nitrogen-rich-minerals
   Severity: MEDIUM
   Affected: item.cerys-nitrogen-rich-minerals
   Conflicting Mods: Cerys-Moon-of-Fulgora → cerys-lunaponics
   Problem: Item 'cerys-nitrogen-rich-minerals' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

173. 📋 Item Conflict: tin-ore
   Severity: MEDIUM
   Affected: item.tin-ore
   Conflicting Mods: crushing-industry → cerys-lunaponics
   Problem: Item 'tin-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

174. 📋 Item Conflict: plutonium-238
   Severity: MEDIUM
   Affected: item.plutonium-238
   Conflicting Mods: PlutoniumEnergy → Cerys-Moon-of-Fulgora
   Problem: Item 'plutonium-238' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

175. 📋 Item Conflict: plutonium-rounds-magazine
   Severity: MEDIUM
   Affected: item.plutonium-rounds-magazine
   Conflicting Mods: PlutoniumEnergy → Cerys-Moon-of-Fulgora
   Problem: Item 'plutonium-rounds-magazine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

176. 📋 Item Conflict: nuclear-fuel
   Severity: MEDIUM
   Affected: item.nuclear-fuel
   Conflicting Mods: metal-and-stars → Cerys-Moon-of-Fulgora
   Problem: Item 'nuclear-fuel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

177. 📋 Item Conflict: plutonium-fuel
   Severity: MEDIUM
   Affected: item.plutonium-fuel
   Conflicting Mods: PlutoniumEnergy → Cerys-Moon-of-Fulgora
   Problem: Item 'plutonium-fuel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

178. 📋 Item Conflict: uranium-cannon-shell
   Severity: MEDIUM
   Affected: item.uranium-cannon-shell
   Conflicting Mods: Cerys-Moon-of-Fulgora → lilys-cubeine
   Problem: Item 'uranium-cannon-shell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

179. 📋 Item Conflict: plutonium-cannon-shell
   Severity: MEDIUM
   Affected: item.plutonium-cannon-shell
   Conflicting Mods: PlutoniumEnergy → Cerys-Moon-of-Fulgora
   Problem: Item 'plutonium-cannon-shell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

180. 📋 Item Conflict: explosive-plutonium-cannon-shell
   Severity: MEDIUM
   Affected: item.explosive-plutonium-cannon-shell
   Conflicting Mods: PlutoniumEnergy → Cerys-Moon-of-Fulgora
   Problem: Item 'explosive-plutonium-cannon-shell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

181. 📋 Item Conflict: holmium-ore
   Severity: MEDIUM
   Affected: item.holmium-ore
   Conflicting Mods: metal-and-stars → crushing-industry → Cerys-Moon-of-Fulgora → fulgora-coralmium-agriculture
   Problem: Item 'holmium-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

182. 📋 Item Conflict: lithium
   Severity: MEDIUM
   Affected: item.lithium
   Conflicting Mods: metal-and-stars → crushing-industry → Cerys-Moon-of-Fulgora
   Problem: Item 'lithium' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

183. 📋 Item Conflict: artillery-shell
   Severity: MEDIUM
   Affected: item.artillery-shell
   Conflicting Mods: StopgapNukes → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora → lilys-cubeine
   Problem: Item 'artillery-shell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

184. 📋 Item Conflict: speed-module
   Severity: MEDIUM
   Affected: item.speed-module
   Conflicting Mods: Hovercrafts → Cold_biters
   Problem: Item 'speed-module' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

185. 📋 Item Conflict: gold-plate
   Severity: MEDIUM
   Affected: item.gold-plate
   Conflicting Mods: metal-and-stars → lignumis → common-prototypes → secretas
   Problem: Item 'gold-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

186. 📋 Item Conflict: gold-cable
   Severity: MEDIUM
   Affected: item.gold-cable
   Conflicting Mods: metal-and-stars → lignumis → common-prototypes
   Problem: Item 'gold-cable' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

187. 📋 Item Conflict: neodymium-plate
   Severity: MEDIUM
   Affected: item.neodymium-plate
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item 'neodymium-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

188. 📋 Item Conflict: gold-ore
   Severity: MEDIUM
   Affected: item.gold-ore
   Conflicting Mods: lignumis → common-prototypes → secretas
   Problem: Item 'gold-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

189. 📋 Item Conflict: silica-sand
   Severity: MEDIUM
   Affected: item.silica-sand
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item 'silica-sand' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

190. 📋 Item Conflict: glass-plate
   Severity: MEDIUM
   Affected: item.glass-plate
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item 'glass-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

191. 📋 Item Conflict: glass-billet
   Severity: MEDIUM
   Affected: item.glass-billet
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item 'glass-billet' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

192. 📋 Item Conflict: neodymium-ore
   Severity: MEDIUM
   Affected: item.neodymium-ore
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item 'neodymium-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

193. 📋 Item Conflict: inverted-microcube
   Severity: MEDIUM
   Affected: item.inverted-microcube
   Conflicting Mods: corrundum → cubium
   Problem: Item 'inverted-microcube' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

194. 📋 Item Conflict: inverted-dormant-microcube
   Severity: MEDIUM
   Affected: item.inverted-dormant-microcube
   Conflicting Mods: corrundum → cubium
   Problem: Item 'inverted-dormant-microcube' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

195. 📋 Item Conflict: raw-fish
   Severity: MEDIUM
   Affected: item.raw-fish
   Conflicting Mods: metal-and-stars → corrundum → enemyracemanager
   Problem: Item 'raw-fish' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

196. 📋 Item Conflict: biter-egg
   Severity: MEDIUM
   Affected: item.biter-egg
   Conflicting Mods: corrundum → Krastorio2-spaced-out → secretas → cubium
   Problem: Item 'biter-egg' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

197. 📋 Item Conflict: lab
   Severity: MEDIUM
   Affected: item.lab
   Conflicting Mods: corrundum → Moshine → Krastorio2-spaced-out
   Problem: Item 'lab' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

198. 📋 Item Conflict: rocket
   Severity: MEDIUM
   Affected: item.rocket
   Conflicting Mods: corrundum → StopgapNukes → secretas → lilys-cubeine
   Problem: Item 'rocket' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

199. 📋 Item Conflict: tungsten-carbide
   Severity: MEDIUM
   Affected: item.tungsten-carbide
   Conflicting Mods: cubium → lilys-cubeine → vulcanus-sulfuric-bacteria → crushing-industry → lignumis → Krastorio2-spaced-out
   Problem: Item 'tungsten-carbide' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

200. 📋 Item Conflict: tungsten-ore
   Severity: MEDIUM
   Affected: item.tungsten-ore
   Conflicting Mods: crushing-industry → vulcanus-sulfuric-bacteria
   Problem: Item 'tungsten-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

201. 📋 Item Conflict: lead-plate
   Severity: MEDIUM
   Affected: item.lead-plate
   Conflicting Mods: PlutoniumEnergy → crushing-industry
   Problem: Item 'lead-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

202. 📋 Item Conflict: titanium-plate
   Severity: MEDIUM
   Affected: item.titanium-plate
   Conflicting Mods: crushing-industry → Fluid-level-indicator
   Problem: Item 'titanium-plate' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

203. 📋 Item Conflict: energized-microcube
   Severity: MEDIUM
   Affected: item.energized-microcube
   Conflicting Mods: cubium → secretas
   Problem: Item 'energized-microcube' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

204. 📋 Item Conflict: dormant-microcube
   Severity: MEDIUM
   Affected: item.dormant-microcube
   Conflicting Mods: cubium → secretas
   Problem: Item 'dormant-microcube' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

205. 📋 Item Conflict: ice
   Severity: MEDIUM
   Affected: item.ice
   Conflicting Mods: metal-and-stars → cubium → Krastorio2-spaced-out → secretas
   Problem: Item 'ice' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

206. 📋 Item Conflict: jelly
   Severity: MEDIUM
   Affected: item.jelly
   Conflicting Mods: cubium → secretas
   Problem: Item 'jelly' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

207. 📋 Item Conflict: automation-science-pack
   Severity: MEDIUM
   Affected: item.automation-science-pack
   Conflicting Mods: cubium → Igrys
   Problem: Item 'automation-science-pack' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

208. 📋 Item Conflict: rail
   Severity: MEDIUM
   Affected: item.rail
   Conflicting Mods: foundry-restructuring → cubium
   Problem: Item 'rail' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

209. 📋 Item Conflict: promethium-asteroid-chunk
   Severity: MEDIUM
   Affected: item.promethium-asteroid-chunk
   Conflicting Mods: slp-dyson-sphere-reworked → cubium → promethium-quality → VoidProcessing
   Problem: Item 'promethium-asteroid-chunk' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

210. 📋 Item Conflict: turbo-transport-belt
   Severity: MEDIUM
   Affected: item.turbo-transport-belt
   Conflicting Mods: cubium → Krastorio2-spaced-out
   Problem: Item 'turbo-transport-belt' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

211. 📋 Item Conflict: turbo-underground-belt
   Severity: MEDIUM
   Affected: item.turbo-underground-belt
   Conflicting Mods: cubium → Krastorio2-spaced-out
   Problem: Item 'turbo-underground-belt' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

212. 📋 Item Conflict: turbo-splitter
   Severity: MEDIUM
   Affected: item.turbo-splitter
   Conflicting Mods: cubium → Krastorio2-spaced-out
   Problem: Item 'turbo-splitter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

213. 📋 Item Conflict: foundry
   Severity: MEDIUM
   Affected: item.foundry
   Conflicting Mods: cubium → Krastorio2-spaced-out
   Problem: Item 'foundry' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

214. 📋 Item Conflict: efficiency-module
   Severity: MEDIUM
   Affected: item.efficiency-module
   Conflicting Mods: Electric Furnaces → Hovercrafts
   Problem: Item 'efficiency-module' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

215. 📋 Item Conflict: small-lamp
   Severity: MEDIUM
   Affected: item.small-lamp
   Conflicting Mods: terrapalus → secretas → metal-and-stars → Krastorio2-spaced-out → Fluid-level-indicator
   Problem: Item 'small-lamp' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

216. 📋 Item Conflict: kr-steel-pipe
   Severity: MEDIUM
   Affected: item.kr-steel-pipe
   Conflicting Mods: Krastorio2-spaced-out → Fluid-level-indicator
   Problem: Item 'kr-steel-pipe' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

217. 📋 Item Conflict: stack-inserter
   Severity: MEDIUM
   Affected: item.stack-inserter
   Conflicting Mods: long_stack_inserter → Krastorio2-spaced-out
   Problem: Item 'stack-inserter' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

218. 📋 Item Conflict: wood-darts-magazine
   Severity: MEDIUM
   Affected: item.wood-darts-magazine
   Conflicting Mods: lignumis → wood-military
   Problem: Item 'wood-darts-magazine' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

219. 📋 Item Conflict: wood-armor
   Severity: MEDIUM
   Affected: item.wood-armor
   Conflicting Mods: lignumis → wood-military
   Problem: Item 'wood-armor' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

220. 📋 Item Conflict: big-mining-drill
   Severity: MEDIUM
   Affected: item.big-mining-drill
   Conflicting Mods: OmegaDrill → lilys-cubeine
   Problem: Item 'big-mining-drill' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

221. 📋 Item Conflict: cannon-shell
   Severity: MEDIUM
   Affected: item.cannon-shell
   Conflicting Mods: PlutoniumEnergy → lilys-cubeine
   Problem: Item 'cannon-shell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

222. 📋 Item Conflict: space-platform-foundation
   Severity: MEDIUM
   Affected: item.space-platform-foundation
   Conflicting Mods: metal-and-stars → Moshine → secretas
   Problem: Item 'space-platform-foundation' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

223. 📋 Item Conflict: neodymium
   Severity: MEDIUM
   Affected: item.neodymium
   Conflicting Mods: Moshine → Moshine-assets
   Problem: Item 'neodymium' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

224. 📋 Item Conflict: display-panel
   Severity: MEDIUM
   Affected: item.display-panel
   Conflicting Mods: Moshine → secretas
   Problem: Item 'display-panel' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

225. 📋 Item Conflict: constant-combinator
   Severity: MEDIUM
   Affected: item.constant-combinator
   Conflicting Mods: PavementDriveAssistContinued → Moshine → secretas
   Problem: Item 'constant-combinator' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

226. 📋 Item Conflict: depleted-uranium-fuel-cell
   Severity: MEDIUM
   Affected: item.depleted-uranium-fuel-cell
   Conflicting Mods: PlutoniumEnergy → StopgapNukes → secretas
   Problem: Item 'depleted-uranium-fuel-cell' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

227. 📋 Item Conflict: jr-borax
   Severity: MEDIUM
   Affected: item.jr-borax
   Conflicting Mods: quirkycat_boron → quirkycat_base
   Problem: Item 'jr-borax' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

228. 📋 Item Conflict: jr-boron
   Severity: MEDIUM
   Affected: item.jr-boron
   Conflicting Mods: quirkycat_boron → quirkycat_base
   Problem: Item 'jr-boron' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

229. 📋 Item Conflict: jr-boron-rod
   Severity: MEDIUM
   Affected: item.jr-boron-rod
   Conflicting Mods: quirkycat_boron → quirkycat_base
   Problem: Item 'jr-boron-rod' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

230. 📋 Item Conflict: charcoal
   Severity: MEDIUM
   Affected: item.charcoal
   Conflicting Mods: quirkycat_machines → wood-industry → quirkycat_base
   Problem: Item 'charcoal' modified by multiple mods
   Root Cause: Multiple mods modify the same item
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

231. ℹ️ Fluid Conflict: water
   Severity: LOW
   Affected: fluid.water
   Conflicting Mods: aai-industry → Cold_biters → StopgapNukes → crushing-industry → terrapalus → bobelectronics → cubium → bobgreenhouse → corrundum → wood-industry → Cerys-Moon-of-Fulgora → planet-muluna → Moshine-assets → dea-dia-system → WaterExtractor → cerys-lunaponics → secretas → quirkycat_boron → Paracelsin → bobplates → castra → vulcanus-sulfuric-bacteria → astroponics → metal-and-stars → lignumis → Krastorio2-spaced-out
   Problem: Fluid 'water' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

232. ℹ️ Fluid Conflict: crude-oil
   Severity: LOW
   Affected: fluid.crude-oil
   Conflicting Mods: planet-muluna → bobplates → aai-industry → castra → boblogistics → astroponics → metal-and-stars → bobelectronics → janus
   Problem: Fluid 'crude-oil' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

233. ℹ️ Fluid Conflict: heavy-oil
   Severity: LOW
   Affected: fluid.heavy-oil
   Conflicting Mods: planet-muluna → bobplates → aai-industry → lilys-cubeine → castra → boblogistics → terrapalus → metal-and-stars → secretas → wood-industry → bobelectronics → corrundum → Krastorio2-spaced-out
   Problem: Fluid 'heavy-oil' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

234. ℹ️ Fluid Conflict: light-oil
   Severity: LOW
   Affected: fluid.light-oil
   Conflicting Mods: cubium → planet-muluna → bobplates → aai-industry → lilys-cubeine → Cold_biters → castra → boblogistics → metal-and-stars → wood-industry → bobelectronics → corrundum → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Fluid 'light-oil' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

235. ℹ️ Fluid Conflict: petroleum-gas
   Severity: LOW
   Affected: fluid.petroleum-gas
   Conflicting Mods: cubium → Moshine-assets → planet-muluna → bobplates → bobgreenhouse → aai-industry → lilys-cubeine → VoidProcessing → Cold_biters → castra → boblogistics → wood-industry → bobelectronics → corrundum → StopgapNukes → Krastorio2-spaced-out
   Problem: Fluid 'petroleum-gas' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

236. ℹ️ Item-Subgroup Conflict: virtual-signal-utility
   Severity: LOW
   Affected: item-subgroup.virtual-signal-utility
   Conflicting Mods: informatron → aai-signals
   Problem: Item-Subgroup 'virtual-signal-utility' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

237. ℹ️ Virtual-Signal Conflict: signal-waypoint
   Severity: LOW
   Affected: virtual-signal.signal-waypoint
   Conflicting Mods: SpidertronPatrols → aai-signals
   Problem: Virtual-Signal 'signal-waypoint' modified by multiple mods
   Root Cause: Multiple mods modify the same virtual-signal
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

238. ℹ️ Ammo Conflict: flamethrower-ammo
   Severity: LOW
   Affected: ammo.flamethrower-ammo
   Conflicting Mods: aai-vehicles-flame-tumbler → aai-vehicles-flame-tank
   Problem: Ammo 'flamethrower-ammo' modified by multiple mods
   Root Cause: Multiple mods modify the same ammo
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

239. ℹ️ Create-Entity Conflict: medium-scorchmark-tintable
   Severity: LOW
   Affected: create-entity.medium-scorchmark-tintable
   Conflicting Mods: Moshine → aai-vehicles-ironclad → StopgapNukes
   Problem: Create-Entity 'medium-scorchmark-tintable' modified by multiple mods
   Root Cause: Multiple mods modify the same create-entity
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

240. ℹ️ Create-Entity Conflict: explosion
   Severity: LOW
   Affected: create-entity.explosion
   Conflicting Mods: cubium → RampantFixed → More_Ammo → aai-vehicles-ironclad → wood-military → RPGsystem → bobvehicleequipment → Krastorio2-spaced-out
   Problem: Create-Entity 'explosion' modified by multiple mods
   Root Cause: Multiple mods modify the same create-entity
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

241. ℹ️ Recipe-Category Conflict: advanced-centrifuging-or-crafting
   Severity: LOW
   Affected: recipe-category.advanced-centrifuging-or-crafting
   Conflicting Mods: Age-of-Production → atan-nuclear-science
   Problem: Recipe-Category 'advanced-centrifuging-or-crafting' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

242. ℹ️ Create-Entity Conflict: big-explosion
   Severity: LOW
   Affected: create-entity.big-explosion
   Conflicting Mods: RPGsystem → StopgapNukes → Krastorio2-spaced-out → Aircraft-space-age
   Problem: Create-Entity 'big-explosion' modified by multiple mods
   Root Cause: Multiple mods modify the same create-entity
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

243. ℹ️ Create-Explosion Conflict: explosion-gunshot
   Severity: LOW
   Affected: create-explosion.explosion-gunshot
   Conflicting Mods: More_Ammo → PlutoniumEnergy → Aircraft-space-age → alien-module → vtk-cannon-turret → StopgapNukes → metal-and-stars → lignumis → Krastorio2-spaced-out → grappling-gun
   Problem: Create-Explosion 'explosion-gunshot' modified by multiple mods
   Root Cause: Multiple mods modify the same create-explosion
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

244. ℹ️ Fluid Conflict: lubricant
   Severity: LOW
   Affected: fluid.lubricant
   Conflicting Mods: bobplates → dea-dia-system → lilys-cubeine → Hovercrafts → Cold_biters → Aircraft-space-age → castra → tenebris-prime → secretas → metal-and-stars → promethium-quality → Cerys-Moon-of-Fulgora
   Problem: Fluid 'lubricant' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

245. ℹ️ Create-Entity Conflict: explosion-hit
   Severity: LOW
   Affected: create-entity.explosion-hit
   Conflicting Mods: Electric_flying_enemies → PlutoniumEnergy → alien-module → corrundum → StopgapNukes → Krastorio2-spaced-out
   Problem: Create-Entity 'explosion-hit' modified by multiple mods
   Root Cause: Multiple mods modify the same create-entity
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

246. ℹ️ Fluid Conflict: ammonia
   Severity: LOW
   Affected: fluid.ammonia
   Conflicting Mods: aquilo-seabloom-algaculture → cubium → promethium-quality → cerys-lunaponics → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Fluid 'ammonia' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

247. ℹ️ Fluid Conflict: steam
   Severity: LOW
   Affected: fluid.steam
   Conflicting Mods: aquilo-seabloom-algaculture → cubium → Moshine-assets → bobplates → dea-dia-system → Cold_biters → vulcanus-sulfuric-bacteria → Moshine → secretas → wood-industry → corrundum → lignumis → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Fluid 'steam' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

248. ℹ️ Fluid Conflict: fluoroketone-hot
   Severity: LOW
   Affected: fluid.fluoroketone-hot
   Conflicting Mods: aquilo-seabloom-algaculture → corrundum → VoidProcessing → cubium
   Problem: Fluid 'fluoroketone-hot' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

249. ℹ️ Fluid Conflict: fluoroketone-cold
   Severity: LOW
   Affected: fluid.fluoroketone-cold
   Conflicting Mods: aquilo-seabloom-algaculture → cubium → promethium-quality → VoidProcessing → metal-and-stars → corrundum → Krastorio2-spaced-out
   Problem: Fluid 'fluoroketone-cold' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

250. ℹ️ Fluid Conflict: liquid-fertilizer
   Severity: LOW
   Affected: fluid.liquid-fertilizer
   Conflicting Mods: astroponics → lilys-cubeine → cerys-lunaponics
   Problem: Fluid 'liquid-fertilizer' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

251. ℹ️ Fluid Conflict: bioslurry
   Severity: LOW
   Affected: fluid.bioslurry
   Conflicting Mods: astroponics → lilys-cubeine
   Problem: Fluid 'bioslurry' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

252. ℹ️ Fluid Conflict: sulfuric-acid
   Severity: LOW
   Affected: fluid.sulfuric-acid
   Conflicting Mods: slp-dyson-sphere-reworked → cubium → bobplates → More_Ammo → PlutoniumEnergy → Cold_biters → castra → tenebris-prime → vulcanus-sulfuric-bacteria → Moshine → crushing-industry → astroponics → se-space-trains → wood-industry → bobelectronics → corrundum → Krastorio2-spaced-out → Cerys-Moon-of-Fulgora
   Problem: Fluid 'sulfuric-acid' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

253. ℹ️ Create-Explosion Conflict: artillery-cannon-muzzle-flash
   Severity: LOW
   Affected: create-explosion.artillery-cannon-muzzle-flash
   Conflicting Mods: PlutoniumEnergy → atomic-artillery-reborn → wood-military → StopgapNukes → Krastorio2-spaced-out
   Problem: Create-Explosion 'artillery-cannon-muzzle-flash' modified by multiple mods
   Root Cause: Multiple mods modify the same create-explosion
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

254. ℹ️ Recipe-Category Conflict: bob-electronics
   Severity: LOW
   Affected: recipe-category.bob-electronics
   Conflicting Mods: bobelectronics → bobassembly
   Problem: Recipe-Category 'bob-electronics' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

255. ℹ️ Recipe-Category Conflict: bob-electronics-machine
   Severity: LOW
   Affected: recipe-category.bob-electronics-machine
   Conflicting Mods: bobelectronics → bobassembly
   Problem: Recipe-Category 'bob-electronics-machine' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

256. ℹ️ Recipe-Category Conflict: bob-electronics-with-fluid
   Severity: LOW
   Affected: recipe-category.bob-electronics-with-fluid
   Conflicting Mods: bobelectronics → bobassembly
   Problem: Recipe-Category 'bob-electronics-with-fluid' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

257. ℹ️ Item-Subgroup Conflict: bob-assembly-machine
   Severity: LOW
   Affected: item-subgroup.bob-assembly-machine
   Conflicting Mods: bobassembly → bobplates
   Problem: Item-Subgroup 'bob-assembly-machine' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

258. ℹ️ Item-Subgroup Conflict: bob-chemical-machine
   Severity: LOW
   Affected: item-subgroup.bob-chemical-machine
   Conflicting Mods: bobassembly → bobplates
   Problem: Item-Subgroup 'bob-chemical-machine' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

259. ℹ️ Item-Subgroup Conflict: bob-electrolyser-machine
   Severity: LOW
   Affected: item-subgroup.bob-electrolyser-machine
   Conflicting Mods: bobassembly → bobplates
   Problem: Item-Subgroup 'bob-electrolyser-machine' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

260. ℹ️ Item-Subgroup Conflict: bob-refinery-machine
   Severity: LOW
   Affected: item-subgroup.bob-refinery-machine
   Conflicting Mods: bobassembly → bobplates
   Problem: Item-Subgroup 'bob-refinery-machine' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

261. ℹ️ Item-Subgroup Conflict: bob-resource
   Severity: LOW
   Affected: item-subgroup.bob-resource
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item-Subgroup 'bob-resource' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

262. ℹ️ Item-Subgroup Conflict: bob-electronic-components
   Severity: LOW
   Affected: item-subgroup.bob-electronic-components
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item-Subgroup 'bob-electronic-components' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

263. ℹ️ Item-Subgroup Conflict: bob-boards
   Severity: LOW
   Affected: item-subgroup.bob-boards
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item-Subgroup 'bob-boards' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

264. ℹ️ Item-Subgroup Conflict: bob-electronic-boards
   Severity: LOW
   Affected: item-subgroup.bob-electronic-boards
   Conflicting Mods: bobelectronics → bobplates
   Problem: Item-Subgroup 'bob-electronic-boards' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

265. ℹ️ Fluid Conflict: bob-ferric-chloride-solution
   Severity: LOW
   Affected: fluid.bob-ferric-chloride-solution
   Conflicting Mods: bobelectronics → bobplates
   Problem: Fluid 'bob-ferric-chloride-solution' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

266. ℹ️ Produce-Per-Hour-Achievement Conflict: bob-computer-age-1
   Severity: LOW
   Affected: produce-per-hour-achievement.bob-computer-age-1
   Conflicting Mods: bobelectronics → bobplates
   Problem: Produce-Per-Hour-Achievement 'bob-computer-age-1' modified by multiple mods
   Root Cause: Multiple mods modify the same produce-per-hour-achievement
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

267. ℹ️ Produce-Per-Hour-Achievement Conflict: bob-computer-age-2
   Severity: LOW
   Affected: produce-per-hour-achievement.bob-computer-age-2
   Conflicting Mods: bobelectronics → bobplates
   Problem: Produce-Per-Hour-Achievement 'bob-computer-age-2' modified by multiple mods
   Root Cause: Multiple mods modify the same produce-per-hour-achievement
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

268. ℹ️ Produce-Per-Hour-Achievement Conflict: bob-computer-age-3
   Severity: LOW
   Affected: produce-per-hour-achievement.bob-computer-age-3
   Conflicting Mods: bobelectronics → bobplates
   Problem: Produce-Per-Hour-Achievement 'bob-computer-age-3' modified by multiple mods
   Root Cause: Multiple mods modify the same produce-per-hour-achievement
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

269. ℹ️ Damage-Type Conflict: bob-plasma
   Severity: LOW
   Affected: damage-type.bob-plasma
   Conflicting Mods: bobenemies → bobvehicleequipment
   Problem: Damage-Type 'bob-plasma' modified by multiple mods
   Root Cause: Multiple mods modify the same damage-type
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

270. ℹ️ Custom-Input Conflict: bob-inserter-long
   Severity: LOW
   Affected: custom-input.bob-inserter-long
   Conflicting Mods: boblogistics → bobinserters
   Problem: Custom-Input 'bob-inserter-long' modified by multiple mods
   Root Cause: Multiple mods modify the same custom-input
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

271. ℹ️ Virtual Conflict: signal-X
   Severity: LOW
   Affected: virtual.signal-X
   Conflicting Mods: boblogistics → Krastorio2-spaced-out
   Problem: Virtual 'signal-X' modified by multiple mods
   Root Cause: Multiple mods modify the same virtual
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

272. ℹ️ Virtual Conflict: signal-Y
   Severity: LOW
   Affected: virtual.signal-Y
   Conflicting Mods: boblogistics → Krastorio2-spaced-out
   Problem: Virtual 'signal-Y' modified by multiple mods
   Root Cause: Multiple mods modify the same virtual
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

273. ℹ️ Virtual Conflict: signal-Z
   Severity: LOW
   Affected: virtual.signal-Z
   Conflicting Mods: boblogistics → Krastorio2-spaced-out
   Problem: Virtual 'signal-Z' modified by multiple mods
   Root Cause: Multiple mods modify the same virtual
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

274. ℹ️ Virtual Conflict: signal-T
   Severity: LOW
   Affected: virtual.signal-T
   Conflicting Mods: boblogistics → Krastorio2-spaced-out → RampantFixed
   Problem: Virtual 'signal-T' modified by multiple mods
   Root Cause: Multiple mods modify the same virtual
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

275. ℹ️ Item-Subgroup Conflict: bob-ores
   Severity: LOW
   Affected: item-subgroup.bob-ores
   Conflicting Mods: bobores → bobplates
   Problem: Item-Subgroup 'bob-ores' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

276. ℹ️ Item-Subgroup Conflict: bob-gems-ore
   Severity: LOW
   Affected: item-subgroup.bob-gems-ore
   Conflicting Mods: bobores → bobplates
   Problem: Item-Subgroup 'bob-gems-ore' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

277. ℹ️ Fluid Conflict: bob-alien-acid
   Severity: LOW
   Affected: fluid.bob-alien-acid
   Conflicting Mods: bobvehicleequipment → bobplates
   Problem: Fluid 'bob-alien-acid' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

278. ℹ️ Virtual Conflict: signal-A
   Severity: LOW
   Affected: virtual.signal-A
   Conflicting Mods: metal-and-stars → bobpower → Krastorio2-spaced-out → snouz-big-accumulator
   Problem: Virtual 'signal-A' modified by multiple mods
   Root Cause: Multiple mods modify the same virtual
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

279. ℹ️ Create-Entity Conflict: small-scorchmark
   Severity: LOW
   Affected: create-entity.small-scorchmark
   Conflicting Mods: Krastorio2-spaced-out → PlutoniumEnergy → bobvehicleequipment
   Problem: Create-Entity 'small-scorchmark' modified by multiple mods
   Root Cause: Multiple mods modify the same create-entity
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

280. ℹ️ Fluid Conflict: hydrogen-sulfide
   Severity: LOW
   Affected: fluid.hydrogen-sulfide
   Conflicting Mods: corrundum → StopgapNukes → castra
   Problem: Fluid 'hydrogen-sulfide' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

281. ℹ️ Fluid Conflict: molten-iron
   Severity: LOW
   Affected: fluid.molten-iron
   Conflicting Mods: Paracelsin → Moshine-assets → foundry-restructuring → common-prototypes → castra → Moshine → crushing-industry → metal-and-stars → Krastorio2-spaced-out
   Problem: Fluid 'molten-iron' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

282. ℹ️ Fluid Conflict: holmium-solution
   Severity: LOW
   Affected: fluid.holmium-solution
   Conflicting Mods: Cerys-Moon-of-Fulgora → castra → fulgora-coralmium-agriculture
   Problem: Fluid 'holmium-solution' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

283. ℹ️ Fluid Conflict: methane
   Severity: LOW
   Affected: fluid.methane
   Conflicting Mods: Cerys-Moon-of-Fulgora → cerys-lunaponics
   Problem: Fluid 'methane' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

284. ℹ️ Fluid Conflict: nitric-acid
   Severity: LOW
   Affected: fluid.nitric-acid
   Conflicting Mods: Cerys-Moon-of-Fulgora → cerys-lunaponics
   Problem: Fluid 'nitric-acid' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

285. ℹ️ Damage-Type Conflict: cold
   Severity: LOW
   Affected: damage-type.cold
   Conflicting Mods: Cold_biters → enemyracemanager
   Problem: Damage-Type 'cold' modified by multiple mods
   Root Cause: Multiple mods modify the same damage-type
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

286. ℹ️ Item-Subgroup Conflict: space-nanites
   Severity: LOW
   Affected: item-subgroup.space-nanites
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'space-nanites' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

287. ℹ️ Item-Subgroup Conflict: shipyard-processes
   Severity: LOW
   Affected: item-subgroup.shipyard-processes
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'shipyard-processes' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

288. ℹ️ Item-Subgroup Conflict: nix-processes
   Severity: LOW
   Affected: item-subgroup.nix-processes
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'nix-processes' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

289. ℹ️ Item-Subgroup Conflict: ringworld-processes
   Severity: LOW
   Affected: item-subgroup.ringworld-processes
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'ringworld-processes' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

290. ℹ️ Item-Subgroup Conflict: mirandus-processes
   Severity: LOW
   Affected: item-subgroup.mirandus-processes
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'mirandus-processes' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

291. ℹ️ Item-Subgroup Conflict: quantum-processing
   Severity: LOW
   Affected: item-subgroup.quantum-processing
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'quantum-processing' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

292. ℹ️ Item-Subgroup Conflict: quantum-conversion
   Severity: LOW
   Affected: item-subgroup.quantum-conversion
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'quantum-conversion' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

293. ℹ️ Item-Subgroup Conflict: liquid-fuel
   Severity: LOW
   Affected: item-subgroup.liquid-fuel
   Conflicting Mods: metal-and-stars → common-prototypes
   Problem: Item-Subgroup 'liquid-fuel' modified by multiple mods
   Root Cause: Multiple mods modify the same item-subgroup
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

294. ℹ️ Fluid Conflict: molten-gold
   Severity: LOW
   Affected: fluid.molten-gold
   Conflicting Mods: lignumis → common-prototypes
   Problem: Fluid 'molten-gold' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

295. ℹ️ Fluid Conflict: molten-glass
   Severity: LOW
   Affected: fluid.molten-glass
   Conflicting Mods: crushing-industry → common-prototypes
   Problem: Fluid 'molten-glass' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

296. ℹ️ Fluid Conflict: dream-concentrate
   Severity: LOW
   Affected: fluid.dream-concentrate
   Conflicting Mods: corrundum → secretas → cubium
   Problem: Fluid 'dream-concentrate' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

297. ℹ️ Fluid Conflict: thruster-fuel
   Severity: LOW
   Affected: fluid.thruster-fuel
   Conflicting Mods: slp-dyson-sphere-reworked → corrundum → VoidProcessing → cubium
   Problem: Fluid 'thruster-fuel' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

298. ℹ️ Fluid Conflict: thruster-oxidizer
   Severity: LOW
   Affected: fluid.thruster-oxidizer
   Conflicting Mods: slp-dyson-sphere-reworked → corrundum → cubium
   Problem: Fluid 'thruster-oxidizer' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

299. ℹ️ Recipe-Category Conflict: basic-crushing
   Severity: LOW
   Affected: recipe-category.basic-crushing
   Conflicting Mods: crushing-industry → quirkycat_base
   Problem: Recipe-Category 'basic-crushing' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

300. ℹ️ Recipe-Category Conflict: basic-crushing-or-crafting
   Severity: LOW
   Affected: recipe-category.basic-crushing-or-crafting
   Conflicting Mods: crushing-industry → wood-industry
   Problem: Recipe-Category 'basic-crushing-or-crafting' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

301. ℹ️ Fluid Conflict: lava
   Severity: LOW
   Affected: fluid.lava
   Conflicting Mods: foundry-restructuring → crushing-industry → metal-and-stars → vulcanus-sulfuric-bacteria
   Problem: Fluid 'lava' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

302. ℹ️ Create-Entity Conflict: small-scorchmark-tintable
   Severity: LOW
   Affected: create-entity.small-scorchmark-tintable
   Conflicting Mods: cubium → wood-military
   Problem: Create-Entity 'small-scorchmark-tintable' modified by multiple mods
   Root Cause: Multiple mods modify the same create-entity
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

303. ℹ️ Fluid Conflict: ultradense-lava
   Severity: LOW
   Affected: fluid.ultradense-lava
   Conflicting Mods: cubium → lilys-cubeine
   Problem: Fluid 'ultradense-lava' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

304. ℹ️ Fluid Conflict: molten-copper
   Severity: LOW
   Affected: fluid.molten-copper
   Conflicting Mods: metal-and-stars → cubium → Moshine-assets → Krastorio2-spaced-out
   Problem: Fluid 'molten-copper' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

305. ℹ️ Fluid Conflict: electrolyte
   Severity: LOW
   Affected: fluid.electrolyte
   Conflicting Mods: cubium → fulgora-coralmium-agriculture
   Problem: Fluid 'electrolyte' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

306. ℹ️ Damage-Type Conflict: healing
   Severity: LOW
   Affected: damage-type.healing
   Conflicting Mods: enemyracemanager → RampantFixed
   Problem: Damage-Type 'healing' modified by multiple mods
   Root Cause: Multiple mods modify the same damage-type
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

307. ℹ️ Create-Explosion Conflict: protoss--archon-hit-explosion
   Severity: LOW
   Affected: create-explosion.protoss--archon-hit-explosion
   Conflicting Mods: erm_toss → erm_toss_economy
   Problem: Create-Explosion 'protoss--archon-hit-explosion' modified by multiple mods
   Root Cause: Multiple mods modify the same create-explosion
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

308. ℹ️ Create-Explosion Conflict: protoss--corsair-explosion
   Severity: LOW
   Affected: create-explosion.protoss--corsair-explosion
   Conflicting Mods: erm_toss → erm_toss_economy
   Problem: Create-Explosion 'protoss--corsair-explosion' modified by multiple mods
   Root Cause: Multiple mods modify the same create-explosion
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

309. ℹ️ Create-Explosion Conflict: protoss--disrupt-80
   Severity: LOW
   Affected: create-explosion.protoss--disrupt-80
   Conflicting Mods: erm_toss → erm_toss_economy
   Problem: Create-Explosion 'protoss--disrupt-80' modified by multiple mods
   Root Cause: Multiple mods modify the same create-explosion
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

310. ℹ️ Create-Explosion Conflict: medium-explosion
   Severity: LOW
   Affected: create-explosion.medium-explosion
   Conflicting Mods: erm_zerg → erm_zerg_economy
   Problem: Create-Explosion 'medium-explosion' modified by multiple mods
   Root Cause: Multiple mods modify the same create-explosion
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

311. ℹ️ Create-Fire Conflict: fire-flame
   Severity: LOW
   Affected: create-fire.fire-flame
   Conflicting Mods: Kux-OrbitalIonCannon → RPGsystem
   Problem: Create-Fire 'fire-flame' modified by multiple mods
   Root Cause: Multiple mods modify the same create-fire
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

312. ℹ️ Create-Fire Conflict: fire-flame-on-tree
   Severity: LOW
   Affected: create-fire.fire-flame-on-tree
   Conflicting Mods: More_Ammo → Kux-OrbitalIonCannon
   Problem: Create-Fire 'fire-flame-on-tree' modified by multiple mods
   Root Cause: Multiple mods modify the same create-fire
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

313. ℹ️ Fluid Conflict: heavy-water
   Severity: LOW
   Affected: fluid.heavy-water
   Conflicting Mods: metal-and-stars → StopgapNukes
   Problem: Fluid 'heavy-water' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

314. ℹ️ Fluid Conflict: raw-data
   Severity: LOW
   Affected: fluid.raw-data
   Conflicting Mods: Moshine → Moshine-assets
   Problem: Fluid 'raw-data' modified by multiple mods
   Root Cause: Multiple mods modify the same fluid
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

315. ℹ️ Recipe-Category Conflict: pulverising
   Severity: LOW
   Affected: recipe-category.pulverising
   Conflicting Mods: quirkycat_machines → quirkycat_base
   Problem: Recipe-Category 'pulverising' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

316. ℹ️ Recipe-Category Conflict: jr-foundry-smelting
   Severity: LOW
   Affected: recipe-category.jr-foundry-smelting
   Conflicting Mods: quirkycat_machines → quirkycat_base
   Problem: Recipe-Category 'jr-foundry-smelting' modified by multiple mods
   Root Cause: Multiple mods modify the same recipe-category
   Suggested Solutions:
     • Review modification order
     • Create compatibility patch
     • Use conditional modifications

🔧 GENERATED PATCH SOLUTIONS
----------------------------------------
1. PATCH_SP-SPIDERLING_ALL_VARIANTS
   Description: Recipe expansion for sp-spiderling - adds all mod variants as additional recipes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_SP-SPIDERLING

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive recipe expansion for sp-spiderling
   -- Adds mod-specific recipe variants alongside original recipes
   -- Affected mods: SpidertronPatrols
   -- Severity: HIGH
   
   -- Create additional recipe variants for each mod
   
   
   -- SpidertronPatrols variant of sp-spiderling
   if data.raw.recipe["sp-spiderling"] then
       local spidertronpatrols_variant = table.deepcopy(data.raw.recipe["sp-spiderling"])
       spidertronpatrols_variant.name = "sp-spiderling-spidertronpatrols-variant"
       spidertronpatrols_variant.localised_name = {"", "sp-spiderling", " (SpidertronPatrols Style)"}
       spidertronpatrols_variant.enabled = true
       spidertronpatrols_variant.order = (spidertronpatrols_variant.order or "a") .. "-spidertronpatrols-variant"
       spidertronpatrols_variant.hidden = false
   
       spidertronpatrols_variant.ingredients = {{type="item", name="nullius-large-chest-2", amount=2}, {type="item", name="nullius-sensor-2", amount=1}}
       spidertronpatrols_variant.results = {{type="item", name="sp-spiderling", amount=1}}
       
       data:extend({spidertronpatrols_variant})
   end
   
   -- Keep ALL original recipes active - no disabling!
   -- Players can now choose between:
   -- 1. Original sp-spiderling (current winner of mod conflicts)
   -- 2. sp-spiderling-spidertronpatrols-variant (SpidertronPatrols style)
   

2. PATCH_NULLIUS-MECHA-REMOTE_ALL_VARIANTS
   Description: Recipe expansion for nullius-mecha-remote - adds all mod variants as additional recipes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_NULLIUS-MECHA-REMOTE

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive recipe expansion for nullius-mecha-remote
   -- Adds mod-specific recipe variants alongside original recipes
   -- Affected mods: SpidertronPatrols
   -- Severity: HIGH
   
   -- Create additional recipe variants for each mod
   
   
   -- SpidertronPatrols variant of nullius-mecha-remote
   if data.raw.recipe["nullius-mecha-remote"] then
       local spidertronpatrols_variant = table.deepcopy(data.raw.recipe["nullius-mecha-remote"])
       spidertronpatrols_variant.name = "nullius-mecha-remote-spidertronpatrols-variant"
       spidertronpatrols_variant.localised_name = {"", "nullius-mecha-remote", " (SpidertronPatrols Style)"}
       spidertronpatrols_variant.enabled = true
       spidertronpatrols_variant.order = (spidertronpatrols_variant.order or "a") .. "-spidertronpatrols-variant"
       spidertronpatrols_variant.hidden = false
   
       spidertronpatrols_variant.ingredients = {{type="item", name="nullius-processor-1", amount=2}, {type="item", name="nullius-scout-remote", amount=1}}
       spidertronpatrols_variant.results = {{type="item", name="nullius-mecha-remote", amount=1}}
       
       data:extend({spidertronpatrols_variant})
   end
   
   -- Keep ALL original recipes active - no disabling!
   -- Players can now choose between:
   -- 1. Original nullius-mecha-remote (current winner of mod conflicts)
   -- 2. nullius-mecha-remote-spidertronpatrols-variant (SpidertronPatrols style)
   

3. PATCH_BURNER-INSERTER_ALL_VARIANTS
   Description: Recipe expansion for burner-inserter - adds all mod variants as additional recipes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: RECIPE_VARIANT_BURNER-INSERTER

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive recipe expansion for burner-inserter
   -- Adds mod-specific recipe variants alongside original recipes
   -- Affected mods: lignumis
   -- Severity: HIGH
   
   -- Create additional recipe variants for each mod
   
   
   -- Lignumis variant of burner-inserter
   if data.raw.recipe["burner-inserter"] then
       local lignumis_variant = table.deepcopy(data.raw.recipe["burner-inserter"])
       lignumis_variant.name = "burner-inserter-lignumis-variant"
       lignumis_variant.localised_name = {"", "burner-inserter", " (Lignumis Style)"}
       lignumis_variant.enabled = true
       lignumis_variant.order = (lignumis_variant.order or "a") .. "-lignumis-variant"
       lignumis_variant.hidden = false
   
       lignumis_variant.ingredients = {{type="item", name="wooden-gear-wheel", amount=1}, {type="item", name="lumber", amount=1}}
       lignumis_variant.results = {{type="item", name="burner-inserter", amount=1}}
       
       data:extend({lignumis_variant})
   end
   
   -- Keep ALL original recipes active - no disabling!
   -- Players can now choose between:
   -- 1. Original burner-inserter (current winner of mod conflicts)
   -- 2. burner-inserter-lignumis-variant (Lignumis style)
   

4. PATCH_WOODEN-WALL_ALL_VARIANTS
   Description: Recipe expansion for wooden-wall - adds all mod variants as additional recipes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: RECIPE_VARIANT_WOODEN-WALL

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive recipe expansion for wooden-wall
   -- Adds mod-specific recipe variants alongside original recipes
   -- Affected mods: lignumis
   -- Severity: MEDIUM
   
   -- Create additional recipe variants for each mod
   
   
   -- Lignumis variant of wooden-wall
   if data.raw.recipe["wooden-wall"] then
       local lignumis_variant = table.deepcopy(data.raw.recipe["wooden-wall"])
       lignumis_variant.name = "wooden-wall-lignumis-variant"
       lignumis_variant.localised_name = {"", "wooden-wall", " (Lignumis Style)"}
       lignumis_variant.enabled = true
       lignumis_variant.order = (lignumis_variant.order or "a") .. "-lignumis-variant"
       lignumis_variant.hidden = false
   
       lignumis_variant.ingredients = {{type="item", name="lumber", amount=4}}
       lignumis_variant.results = {{type="item", name="wooden-wall", amount=1}}
       
       data:extend({lignumis_variant})
   end
   
   -- Keep ALL original recipes active - no disabling!
   -- Players can now choose between:
   -- 1. Original wooden-wall (current winner of mod conflicts)
   -- 2. wooden-wall-lignumis-variant (Lignumis style)
   

5. PATCH_ELECTRONICS_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for electronics with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_ELECTRONICS

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for electronics
   -- Fixes conflict between: Age-of-Production, lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["electronics"] then
       local tech = data.raw.technology["electronics"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "electronics" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "electronics-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "electronics-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "electronics-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

6. PATCH_ORE-CRUSHING-PRODUCTIVITY-1_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for ore-crushing-productivity-1 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_ORE-CRUSHING-PRODUCTIVITY-1

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for ore-crushing-productivity-1
   -- Fixes conflict between: crushing-industry-productivity-research, crushing-industry-productivity-research
   -- Severity: HIGH
   
   if data.raw.technology["ore-crushing-productivity-1"] then
       local tech = data.raw.technology["ore-crushing-productivity-1"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "ore-crushing-productivity-1" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "ore-crushing-productivity-1-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "ore-crushing-productivity-1-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "ore-crushing-productivity-1-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

7. PATCH_ORE-CRUSHING-PRODUCTIVITY-2_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for ore-crushing-productivity-2 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_ORE-CRUSHING-PRODUCTIVITY-2

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for ore-crushing-productivity-2
   -- Fixes conflict between: crushing-industry-productivity-research, crushing-industry-productivity-research
   -- Severity: HIGH
   
   if data.raw.technology["ore-crushing-productivity-2"] then
       local tech = data.raw.technology["ore-crushing-productivity-2"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "ore-crushing-productivity-2" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "ore-crushing-productivity-2-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "ore-crushing-productivity-2-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "ore-crushing-productivity-2-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

8. PATCH_ORE-CRUSHING-PRODUCTIVITY-3_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for ore-crushing-productivity-3 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_ORE-CRUSHING-PRODUCTIVITY-3

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for ore-crushing-productivity-3
   -- Fixes conflict between: crushing-industry-productivity-research, crushing-industry-productivity-research
   -- Severity: HIGH
   
   if data.raw.technology["ore-crushing-productivity-3"] then
       local tech = data.raw.technology["ore-crushing-productivity-3"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "ore-crushing-productivity-3" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "ore-crushing-productivity-3-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "ore-crushing-productivity-3-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "ore-crushing-productivity-3-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

9. PATCH_ELEVATED-RAIL_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for elevated-rail with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_ELEVATED-RAIL

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for elevated-rail
   -- Fixes conflict between: EarlyvatedRails, EarlyvatedRails
   -- Severity: HIGH
   
   if data.raw.technology["elevated-rail"] then
       local tech = data.raw.technology["elevated-rail"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "elevated-rail" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "elevated-rail-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "elevated-rail-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "elevated-rail-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

10. PATCH_TREE-SEEDING_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for tree-seeding with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_TREE-SEEDING

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for tree-seeding
   -- Fixes conflict between: gleba-reborn, gleba-reborn, gleba-reborn, lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["tree-seeding"] then
       local tech = data.raw.technology["tree-seeding"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "tree-seeding" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "tree-seeding-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "tree-seeding-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "tree-seeding-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

11. PATCH_STEAM-POWER_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for steam-power with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_STEAM-POWER

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for steam-power
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["steam-power"] then
       local tech = data.raw.technology["steam-power"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "steam-power" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "steam-power-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "steam-power-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "steam-power-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

12. PATCH_LANDFILL_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for landfill with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_LANDFILL

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for landfill
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["landfill"] then
       local tech = data.raw.technology["landfill"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "landfill" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "landfill-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "landfill-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "landfill-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

13. PATCH_WORKER-ROBOTS-SPEED-1_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for worker-robots-speed-1 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_WORKER-ROBOTS-SPEED-1

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for worker-robots-speed-1
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["worker-robots-speed-1"] then
       local tech = data.raw.technology["worker-robots-speed-1"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "worker-robots-speed-1" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "worker-robots-speed-1-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "worker-robots-speed-1-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "worker-robots-speed-1-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

14. PATCH_WORKER-ROBOTS-SPEED-2_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for worker-robots-speed-2 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_WORKER-ROBOTS-SPEED-2

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for worker-robots-speed-2
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["worker-robots-speed-2"] then
       local tech = data.raw.technology["worker-robots-speed-2"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "worker-robots-speed-2" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "worker-robots-speed-2-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "worker-robots-speed-2-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "worker-robots-speed-2-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

15. PATCH_WORKER-ROBOTS-SPEED-3_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for worker-robots-speed-3 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_WORKER-ROBOTS-SPEED-3

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for worker-robots-speed-3
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["worker-robots-speed-3"] then
       local tech = data.raw.technology["worker-robots-speed-3"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "worker-robots-speed-3" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "worker-robots-speed-3-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "worker-robots-speed-3-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "worker-robots-speed-3-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

16. PATCH_WORKER-ROBOTS-SPEED-4_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for worker-robots-speed-4 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_WORKER-ROBOTS-SPEED-4

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for worker-robots-speed-4
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["worker-robots-speed-4"] then
       local tech = data.raw.technology["worker-robots-speed-4"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "worker-robots-speed-4" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "worker-robots-speed-4-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "worker-robots-speed-4-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "worker-robots-speed-4-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

17. PATCH_PHYSICAL-PROJECTILE-DAMAGE-1_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for physical-projectile-damage-1 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-1

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for physical-projectile-damage-1
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["physical-projectile-damage-1"] then
       local tech = data.raw.technology["physical-projectile-damage-1"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "physical-projectile-damage-1" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "physical-projectile-damage-1-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "physical-projectile-damage-1-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "physical-projectile-damage-1-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

18. PATCH_PHYSICAL-PROJECTILE-DAMAGE-2_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for physical-projectile-damage-2 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-2

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for physical-projectile-damage-2
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["physical-projectile-damage-2"] then
       local tech = data.raw.technology["physical-projectile-damage-2"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "physical-projectile-damage-2" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "physical-projectile-damage-2-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "physical-projectile-damage-2-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "physical-projectile-damage-2-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

19. PATCH_WEAPON-SHOOTING-SPEED-2_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for weapon-shooting-speed-2 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_WEAPON-SHOOTING-SPEED-2

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for weapon-shooting-speed-2
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["weapon-shooting-speed-2"] then
       local tech = data.raw.technology["weapon-shooting-speed-2"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "weapon-shooting-speed-2" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "weapon-shooting-speed-2-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "weapon-shooting-speed-2-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "weapon-shooting-speed-2-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

20. PATCH_PHYSICAL-PROJECTILE-DAMAGE-3_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for physical-projectile-damage-3 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-3

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for physical-projectile-damage-3
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["physical-projectile-damage-3"] then
       local tech = data.raw.technology["physical-projectile-damage-3"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "physical-projectile-damage-3" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "physical-projectile-damage-3-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "physical-projectile-damage-3-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "physical-projectile-damage-3-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

21. PATCH_WEAPON-SHOOTING-SPEED-3_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for weapon-shooting-speed-3 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_WEAPON-SHOOTING-SPEED-3

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for weapon-shooting-speed-3
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["weapon-shooting-speed-3"] then
       local tech = data.raw.technology["weapon-shooting-speed-3"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "weapon-shooting-speed-3" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "weapon-shooting-speed-3-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "weapon-shooting-speed-3-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "weapon-shooting-speed-3-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

22. PATCH_PHYSICAL-PROJECTILE-DAMAGE-4_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for physical-projectile-damage-4 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_PHYSICAL-PROJECTILE-DAMAGE-4

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for physical-projectile-damage-4
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["physical-projectile-damage-4"] then
       local tech = data.raw.technology["physical-projectile-damage-4"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "physical-projectile-damage-4" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "physical-projectile-damage-4-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "physical-projectile-damage-4-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "physical-projectile-damage-4-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

23. PATCH_WEAPON-SHOOTING-SPEED-4_RESEARCH_COMPREHENSIVE
   Description: Comprehensive research compatibility patch for weapon-shooting-speed-4 with 3 alternative research paths
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: HIGH
   Fixes Issues: MISSING_DEPS_WEAPON-SHOOTING-SPEED-4

   Generated Lua Code:
   ------------------------------
   
   -- Comprehensive research compatibility patch for weapon-shooting-speed-4
   -- Fixes conflict between: lignumis, lignumis
   -- Severity: HIGH
   
   if data.raw.technology["weapon-shooting-speed-4"] then
       local tech = data.raw.technology["weapon-shooting-speed-4"]
       local original_prerequisites = tech.prerequisites or {}
       local original_unit = tech.unit
       local original_effects = tech.effects or {}
       
       -- Store original technology for reference
       local base_prerequisites = original_prerequisites
       local base_unit = original_unit
       local base_effects = original_effects
       
       -- Fallback: Create universal alternative research paths
       
       -- Skip creating alternatives if original technology has no icon (required for technologies)
       if not tech.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "weapon-shooting-speed-4" .. " - no icon found")
           return
       end
       
       -- Alternative 1: Basic research path
       local basic_tech = {
           type = "technology",
           name = "weapon-shooting-speed-4-basic",
           icon = tech.icon,
           icon_size = tech.icon_size or 256,
           prerequisites = {"automation"},
           unit = {
               count = 25,
               ingredients = {
                   {"automation-science-pack", 1}
               },
               time = 10
           },
           effects = tech.effects or {}
       }
       
       data:extend({basic_tech})
       
       -- Alternative 2: Advanced research path
       if data.raw.technology["logistic-science-pack"] then
           local advanced_tech = {
               type = "technology",
               name = "weapon-shooting-speed-4-advanced",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"automation", "logistic-science-pack"},
               unit = {
                   count = 100,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1}
                   },
                   time = 30
               },
               effects = tech.effects or {}
           }
           
           data:extend({advanced_tech})
       end
       
       -- Alternative 3: Space-age compatible path
       if data.raw.technology["space-science-pack"] then
           local space_tech = {
               type = "technology",
               name = "weapon-shooting-speed-4-space",
               icon = tech.icon,
               icon_size = tech.icon_size or 256,
               prerequisites = {"space-science-pack"},
               unit = {
                   count = 200,
                   ingredients = {
                       {"automation-science-pack", 1},
                       {"logistic-science-pack", 1},
                       {"chemical-science-pack", 1},
                       {"space-science-pack", 1}
                   },
                   time = 60
               },
               effects = tech.effects or {}
           }
           
           data:extend({space_tech})
       end
   end
   

24. PATCH_ELECTRIC-MINING-DRILL_GENERIC
   Description: Generic compatibility patch for item electric-mining-drill
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ELECTRIC-MINING-DRILL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for electric-mining-drill
   -- Fixes conflict between: bobmining, Krastorio2-spaced-out, OmegaDrill, aai-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["electric-mining-drill"] then
       local item = data.raw.item["electric-mining-drill"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "electric-mining-drill" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "electric-mining-drill-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "electric-mining-drill-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

25. PATCH_STEEL-PLATE_GENERIC
   Description: Generic compatibility patch for item steel-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STEEL-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for steel-plate
   -- Fixes conflict between: slp-dyson-sphere-reworked, aai-industry, VoidProcessing, Hovercrafts, aai-vehicles-ironclad, Cold_biters, alien-module, boblogistics, crushing-industry, se-space-trains, Planet-Hopper, shield-projector, Fluid-level-indicator, grappling-gun, lex-aircraft, aquilo-seabloom-algaculture, cubium, Flare Stack, bobassembly, aai-vehicles-laser-tank, ballistic_missile, FluidMustFlow, bobenemies, vtk-cannon-turret, aai-vehicles-flame-tumbler, bobequipment, snouz_better_substation, corrundum, bobvehicleequipment, Cerys-Moon-of-Fulgora, Warehousing, dea-dia-system, More_Ammo, HelicopterRevival, PlutoniumEnergy, aai-vehicles-flame-tank, alloy-smelting, aai-signal-transmission, bobpower, metal-and-stars, minimalist-rails, secretas, Robocharger-Updated, More_Repair_Packs, OmegaDrill, atan-nuclear-science, bobplates, foundry-restructuring, lilys-cubeine, quirkycat_machines, Aircraft-space-age, castra, tenebris-prime, bobmining, bobmodules, StopgapNukes, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["steel-plate"] then
       local item = data.raw.item["steel-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "steel-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "steel-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "steel-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

26. PATCH_ELECTRIC-ENGINE-UNIT_GENERIC
   Description: Generic compatibility patch for item electric-engine-unit
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ELECTRIC-ENGINE-UNIT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for electric-engine-unit
   -- Fixes conflict between: aai-industry, RampantFixed, Hovercrafts, boblogistics, crushing-industry, lex-aircraft, cubium, ballistic_missile, orbital-transfer, corrundum, Kux-OrbitalIonCannon, bobvehicleequipment, dea-dia-system, aai-signal-transmission, secretas, OmegaDrill, bobplates, Aircraft-space-age, castra, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["electric-engine-unit"] then
       local item = data.raw.item["electric-engine-unit"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "electric-engine-unit" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "electric-engine-unit-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "electric-engine-unit-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

27. PATCH_PROCESSING-UNIT_GENERIC
   Description: Generic compatibility patch for item processing-unit
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PROCESSING-UNIT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for processing-unit
   -- Fixes conflict between: slp-dyson-sphere-reworked, aai-industry, RampantFixed, Hovercrafts, boblogistics, crushing-industry, se-space-trains, bobelectronics, shield-projector, lex-aircraft, cubium, bobassembly, ballistic_missile, orbital-transfer, atomic-artillery-reborn, Moshine, bobequipment, enemyracemanager, fulgora-coralmium-agriculture, corrundum, Kux-OrbitalIonCannon, bobvehicleequipment, Cerys-Moon-of-Fulgora, HelicopterRevival, PlutoniumEnergy, cerys-lunaponics, aai-signal-transmission, bobpower, metal-and-stars, secretas, More_Repair_Packs, OmegaDrill, atan-nuclear-science, bobplates, Aircraft-space-age, castra, bobmining, astroponics, bobmodules, StopgapNukes, Krastorio2-spaced-out, janus
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["processing-unit"] then
       local item = data.raw.item["processing-unit"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "processing-unit" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "processing-unit-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "processing-unit-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

28. PATCH_CONCRETE_GENERIC
   Description: Generic compatibility patch for item concrete
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CONCRETE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for concrete
   -- Fixes conflict between: aai-industry, snouz-big-accumulator, crushing-industry, cubium, ballistic_missile, Moshine, fulgora-coralmium-agriculture, corrundum, Cerys-Moon-of-Fulgora, Moshine-assets, Warehousing, PlutoniumEnergy, alloy-smelting, bobpower, snouz-big-solar-panel, secretas, atan-nuclear-science, tenebris-prime, astroponics, metal-and-stars, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["concrete"] then
       local item = data.raw.item["concrete"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "concrete" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "concrete-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "concrete-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

29. PATCH_ELECTRIC-FURNACE_GENERIC
   Description: Generic compatibility patch for item electric-furnace
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ELECTRIC-FURNACE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for electric-furnace
   -- Fixes conflict between: cubium, bobassembly, bobplates, aai-industry, lilys-cubeine, Electric Furnaces, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["electric-furnace"] then
       local item = data.raw.item["electric-furnace"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "electric-furnace" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "electric-furnace-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "electric-furnace-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

30. PATCH_IRON-PLATE_GENERIC
   Description: Generic compatibility patch for item iron-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_IRON-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for iron-plate
   -- Fixes conflict between: aai-industry, alien-module, aai-vehicles-warden, aai-vehicles-hauler, boblogistics, terrapalus, crushing-industry, DoubleWagons, lex-aircraft, cubium, Flare Stack, bobassembly, bobgreenhouse, FluidMustFlow, vtk-cannon-turret, Moshine, bobequipment, corrundum, planet-muluna, aai-vehicles-chaingunner, dea-dia-system, More_Ammo, PlutoniumEnergy, equipment-gantry, wood-military, bobpower, secretas, Electric Furnaces, quirkycat_boron, bobplates, Aircraft-space-age, castra, tenebris-prime, bobmining, metal-and-stars, StopgapNukes, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["iron-plate"] then
       local item = data.raw.item["iron-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "iron-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "iron-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "iron-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

31. PATCH_STONE-BRICK_GENERIC
   Description: Generic compatibility patch for item stone-brick
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STONE-BRICK

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for stone-brick
   -- Fixes conflict between: cubium, planet-muluna, Warehousing, bobassembly, bobplates, aai-industry, dea-dia-system, castra, tenebris-prime, alloy-smelting, boblogistics, crushing-industry, metal-and-stars, lignumis, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["stone-brick"] then
       local item = data.raw.item["stone-brick"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "stone-brick" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "stone-brick-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "stone-brick-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

32. PATCH_STONE-WALL_GENERIC
   Description: Generic compatibility patch for item stone-wall
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STONE-WALL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for stone-wall
   -- Fixes conflict between: cubium, aai-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["stone-wall"] then
       local item = data.raw.item["stone-wall"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "stone-wall" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "stone-wall-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "stone-wall-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

33. PATCH_BURNER-ASSEMBLING-MACHINE_GENERIC
   Description: Generic compatibility patch for item burner-assembling-machine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BURNER-ASSEMBLING-MACHINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for burner-assembling-machine
   -- Fixes conflict between: lignumis, aai-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["burner-assembling-machine"] then
       local item = data.raw.item["burner-assembling-machine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "burner-assembling-machine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "burner-assembling-machine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "burner-assembling-machine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

34. PATCH_SAND_GENERIC
   Description: Generic compatibility patch for item sand
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SAND

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for sand
   -- Fixes conflict between: Moshine-assets, aai-industry, Moshine, crushing-industry, wood-industry, quirkycat_base
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["sand"] then
       local item = data.raw.item["sand"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "sand" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "sand-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "sand-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

35. PATCH_STONE_GENERIC
   Description: Generic compatibility patch for item stone
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STONE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for stone
   -- Fixes conflict between: cubium, Moshine-assets, bobplates, bobgreenhouse, aai-industry, alien-module, vulcanus-sulfuric-bacteria, boblogistics, crushing-industry, secretas, fulgora-coralmium-agriculture, metal-and-stars, corrundum, wood-industry, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["stone"] then
       local item = data.raw.item["stone"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "stone" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "stone-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "stone-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

36. PATCH_GLASS_GENERIC
   Description: Generic compatibility patch for item glass
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GLASS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for glass
   -- Fixes conflict between: Moshine, crushing-industry, quirkycat_base, aai-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["glass"] then
       local item = data.raw.item["glass"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "glass" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "glass-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "glass-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

37. PATCH_IRON-GEAR-WHEEL_GENERIC
   Description: Generic compatibility patch for item iron-gear-wheel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_IRON-GEAR-WHEEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for iron-gear-wheel
   -- Fixes conflict between: aai-industry, Hovercrafts, aai-vehicles-ironclad, alien-module, aai-vehicles-hauler, aai-vehicles-warden, boblogistics, crushing-industry, DoubleWagons, grappling-gun, cubium, Flare Stack, bobassembly, FluidMustFlow, bobenemies, bobequipment, corrundum, bobvehicleequipment, aai-vehicles-chaingunner, dea-dia-system, HelicopterRevival, aai-vehicles-flame-tank, bobpower, secretas, Robocharger-Updated, OmegaDrill, bobplates, foundry-restructuring, lilys-cubeine, castra, bobmining, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["iron-gear-wheel"] then
       local item = data.raw.item["iron-gear-wheel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "iron-gear-wheel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "iron-gear-wheel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "iron-gear-wheel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

38. PATCH_COPPER-CABLE_GENERIC
   Description: Generic compatibility patch for item copper-cable
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_COPPER-CABLE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for copper-cable
   -- Fixes conflict between: aai-industry, snouz-big-accumulator, TimeTools, castra, bobmodules, boblogistics, terrapalus, bobpower, bobequipment, Krastorio2-spaced-out, se-space-trains, secretas, bobelectronics, corrundum, lignumis, bobvehicleequipment, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["copper-cable"] then
       local item = data.raw.item["copper-cable"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "copper-cable" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "copper-cable-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "copper-cable-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

39. PATCH_IRON-STICK_GENERIC
   Description: Generic compatibility patch for item iron-stick
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_IRON-STICK

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for iron-stick
   -- Fixes conflict between: aai-industry, HelicopterRevival, wood-military, boblogistics, minimalist-rails, corrundum, Krastorio2-spaced-out, grappling-gun
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["iron-stick"] then
       local item = data.raw.item["iron-stick"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "iron-stick" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "iron-stick-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "iron-stick-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

40. PATCH_COPPER-PLATE_GENERIC
   Description: Generic compatibility patch for item copper-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_COPPER-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for copper-plate
   -- Fixes conflict between: aai-industry, alien-module, boblogistics, crushing-industry, bobelectronics, cubium, bobassembly, bobgreenhouse, bobequipment, corrundum, bobvehicleequipment, Cerys-Moon-of-Fulgora, More_Ammo, PlutoniumEnergy, wood-military, Igrys, aai-signal-transmission, bobpower, secretas, bobplates, lilys-cubeine, castra, bobmodules, lignumis, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["copper-plate"] then
       local item = data.raw.item["copper-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "copper-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "copper-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "copper-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

41. PATCH_STONE-FURNACE_GENERIC
   Description: Generic compatibility patch for item stone-furnace
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STONE-FURNACE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for stone-furnace
   -- Fixes conflict between: Flare Stack, bobplates, aai-industry, alloy-smelting, bobpower, Electric Furnaces
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["stone-furnace"] then
       local item = data.raw.item["stone-furnace"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "stone-furnace" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "stone-furnace-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "stone-furnace-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

42. PATCH_BATTERY_GENERIC
   Description: Generic compatibility patch for item battery
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BATTERY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for battery
   -- Fixes conflict between: Cold_biters, alien-module, boblogistics, se-space-trains, shield-projector, aai-vehicles-laser-tank, bobequipment, Kux-OrbitalIonCannon, bobvehicleequipment, HelicopterRevival, aai-signal-transmission, bobpower, secretas, Robocharger-Updated, Aircraft-space-age, castra, metal-and-stars, Krastorio2-spaced-out, janus
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["battery"] then
       local item = data.raw.item["battery"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "battery" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "battery-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "battery-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

43. PATCH_GUN-TURRET_GENERIC
   Description: Generic compatibility patch for item gun-turret
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GUN-TURRET

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for gun-turret
   -- Fixes conflict between: aai-vehicles-chaingunner, HelicopterRevival, Hovercrafts, vtk-cannon-turret, secretas, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["gun-turret"] then
       local item = data.raw.item["gun-turret"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "gun-turret" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "gun-turret-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "gun-turret-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

44. PATCH_ENGINE-UNIT_GENERIC
   Description: Generic compatibility patch for item engine-unit
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ENGINE-UNIT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for engine-unit
   -- Fixes conflict between: cubium, foundry-restructuring, FluidMustFlow, HelicopterRevival, aai-vehicles-flame-tank, aai-vehicles-ironclad, Hovercrafts, castra, aai-vehicles-flame-tumbler, crushing-industry, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["engine-unit"] then
       local item = data.raw.item["engine-unit"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "engine-unit" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "engine-unit-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "engine-unit-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

45. PATCH_FLAMETHROWER_GENERIC
   Description: Generic compatibility patch for item flamethrower
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FLAMETHROWER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for flamethrower
   -- Fixes conflict between: metal-and-stars, aai-vehicles-flame-tank
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["flamethrower"] then
       local item = data.raw.item["flamethrower"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "flamethrower" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "flamethrower-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "flamethrower-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

46. PATCH_ADVANCED-CIRCUIT_GENERIC
   Description: Generic compatibility patch for item advanced-circuit
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ADVANCED-CIRCUIT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for advanced-circuit
   -- Fixes conflict between: Hovercrafts, boblogistics, crushing-industry, bobelectronics, lex-aircraft, cubium, bobassembly, aai-vehicles-laser-tank, ballistic_missile, bobenemies, vtk-cannon-turret, aai-vehicles-flame-tumbler, Moshine, bobequipment, PavementDriveAssistContinued, bobvehicleequipment, Cerys-Moon-of-Fulgora, Warehousing, dea-dia-system, PlutoniumEnergy, alloy-smelting, bobpower, metal-and-stars, secretas, Robocharger-Updated, More_Repair_Packs, OmegaDrill, bobplates, Aircraft-space-age, castra, tenebris-prime, bobmining, bobmodules, StopgapNukes, Krastorio2-spaced-out, janus
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["advanced-circuit"] then
       local item = data.raw.item["advanced-circuit"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "advanced-circuit" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "advanced-circuit-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "advanced-circuit-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

47. PATCH_IRON-CHEST_GENERIC
   Description: Generic compatibility patch for item iron-chest
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_IRON-CHEST

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for iron-chest
   -- Fixes conflict between: Warehousing, equipment-gantry, aai-vehicles-warden, aai-vehicles-hauler, metal-and-stars
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["iron-chest"] then
       local item = data.raw.item["iron-chest"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "iron-chest" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "iron-chest-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "iron-chest-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

48. PATCH_GRENADE_GENERIC
   Description: Generic compatibility patch for item grenade
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GRENADE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for grenade
   -- Fixes conflict between: cubium, aai-vehicles-ironclad, Cold_biters, castra
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["grenade"] then
       local item = data.raw.item["grenade"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "grenade" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "grenade-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "grenade-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

49. PATCH_EXPLOSIVES_GENERIC
   Description: Generic compatibility patch for item explosives
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXPLOSIVES

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for explosives
   -- Fixes conflict between: PlutoniumEnergy, aai-vehicles-ironclad, Aircraft-space-age, castra, vtk-cannon-turret, corrundum, StopgapNukes, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["explosives"] then
       local item = data.raw.item["explosives"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "explosives" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "explosives-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "explosives-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

50. PATCH_TANK_GENERIC
   Description: Generic compatibility patch for item tank
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TANK

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for tank
   -- Fixes conflict between: Krastorio2-spaced-out, lex-aircraft, castra, aai-vehicles-laser-tank
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["tank"] then
       local item = data.raw.item["tank"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "tank" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "tank-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "tank-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

51. PATCH_LASER-TURRET_GENERIC
   Description: Generic compatibility patch for item laser-turret
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LASER-TURRET

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for laser-turret
   -- Fixes conflict between: aai-vehicles-laser-tank, Hovercrafts, terrapalus, secretas, Kux-OrbitalIonCannon
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["laser-turret"] then
       local item = data.raw.item["laser-turret"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "laser-turret" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "laser-turret-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "laser-turret-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

52. PATCH_SOLID-FUEL_GENERIC
   Description: Generic compatibility patch for item solid-fuel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SOLID-FUEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for solid-fuel
   -- Fixes conflict between: cubium, planet-muluna, bobplates, aai-vehicles-laser-tank, Aircraft-space-age, secretas, wood-industry, metal-and-stars, corrundum, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["solid-fuel"] then
       local item = data.raw.item["solid-fuel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "solid-fuel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "solid-fuel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "solid-fuel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

53. PATCH_ELECTRONIC-CIRCUIT_GENERIC
   Description: Generic compatibility patch for item electronic-circuit
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ELECTRONIC-CIRCUIT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for electronic-circuit
   -- Fixes conflict between: alien-module, aai-vehicles-warden, boblogistics, terrapalus, crushing-industry, Planet-Hopper, bobelectronics, lex-aircraft, aquilo-seabloom-algaculture, cubium, Flare Stack, bobassembly, vtk-cannon-turret, Moshine, bobequipment, corrundum, bobvehicleequipment, Cerys-Moon-of-Fulgora, dea-dia-system, TimeTools, wood-military, bobpower, metal-and-stars, Electric Furnaces, More_Repair_Packs, Automatic_Train_Painter, bobplates, Aircraft-space-age, castra, tenebris-prime, bobmining, bobmodules, lignumis, Krastorio2-spaced-out, janus
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["electronic-circuit"] then
       local item = data.raw.item["electronic-circuit"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "electronic-circuit" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "electronic-circuit-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "electronic-circuit-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

54. PATCH_RADAR_GENERIC
   Description: Generic compatibility patch for item radar
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_RADAR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for radar
   -- Fixes conflict between: slp-dyson-sphere-reworked, RampantFixed, PlutoniumEnergy, bobenemies, atomic-artillery-reborn, castra, aai-vehicles-warden, Kux-OrbitalIonCannon, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["radar"] then
       local item = data.raw.item["radar"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "radar" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "radar-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "radar-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

55. PATCH_COAL_GENERIC
   Description: Generic compatibility patch for item coal
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_COAL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for coal
   -- Fixes conflict between: cubium, Moshine-assets, bobplates, quirkycat_machines, alien-module, aai-vehicles-warden, vulcanus-sulfuric-bacteria, alloy-smelting, Moshine, crushing-industry, metal-and-stars, bobelectronics, Krastorio2-spaced-out, grappling-gun
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["coal"] then
       local item = data.raw.item["coal"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "coal" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "coal-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "coal-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

56. PATCH_SUBMACHINE-GUN_GENERIC
   Description: Generic compatibility patch for item submachine-gun
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SUBMACHINE-GUN

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for submachine-gun
   -- Fixes conflict between: lex-aircraft, Krastorio2-spaced-out, Aircraft-space-age
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["submachine-gun"] then
       local item = data.raw.item["submachine-gun"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "submachine-gun" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "submachine-gun-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "submachine-gun-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

57. PATCH_ROCKET-LAUNCHER_GENERIC
   Description: Generic compatibility patch for item rocket-launcher
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ROCKET-LAUNCHER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for rocket-launcher
   -- Fixes conflict between: HelicopterRevival, Hovercrafts, Aircraft-space-age, Krastorio2-spaced-out, lex-aircraft
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["rocket-launcher"] then
       local item = data.raw.item["rocket-launcher"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "rocket-launcher" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "rocket-launcher-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "rocket-launcher-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

58. PATCH_LOW-DENSITY-STRUCTURE_GENERIC
   Description: Generic compatibility patch for item low-density-structure
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LOW-DENSITY-STRUCTURE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for low-density-structure
   -- Fixes conflict between: RampantFixed, Hovercrafts, StopgapNukes, shield-projector, lex-aircraft, cubium, orbital-transfer, bobequipment, fulgora-coralmium-agriculture, Kux-OrbitalIonCannon, bobvehicleequipment, Cerys-Moon-of-Fulgora, PlutoniumEnergy, secretas, More_Repair_Packs, lilys-cubeine, Aircraft-space-age, castra, astroponics, metal-and-stars, lignumis, Krastorio2-spaced-out, janus
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["low-density-structure"] then
       local item = data.raw.item["low-density-structure"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "low-density-structure" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "low-density-structure-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "low-density-structure-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

59. PATCH_EXPLOSIVE-CANNON-SHELL_GENERIC
   Description: Generic compatibility patch for item explosive-cannon-shell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXPLOSIVE-CANNON-SHELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for explosive-cannon-shell
   -- Fixes conflict between: PlutoniumEnergy, StopgapNukes, Aircraft-space-age
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["explosive-cannon-shell"] then
       local item = data.raw.item["explosive-cannon-shell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "explosive-cannon-shell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "explosive-cannon-shell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "explosive-cannon-shell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

60. PATCH_FLAMETHROWER-AMMO_GENERIC
   Description: Generic compatibility patch for item flamethrower-ammo
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FLAMETHROWER-AMMO

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for flamethrower-ammo
   -- Fixes conflict between: StopgapNukes, Aircraft-space-age
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["flamethrower-ammo"] then
       local item = data.raw.item["flamethrower-ammo"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "flamethrower-ammo" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "flamethrower-ammo-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "flamethrower-ammo-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

61. PATCH_ENERGY-SHIELD-MK2-EQUIPMENT_GENERIC
   Description: Generic compatibility patch for item energy-shield-mk2-equipment
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ENERGY-SHIELD-MK2-EQUIPMENT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for energy-shield-mk2-equipment
   -- Fixes conflict between: Hovercrafts, Aircraft-space-age, castra, bobequipment, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["energy-shield-mk2-equipment"] then
       local item = data.raw.item["energy-shield-mk2-equipment"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "energy-shield-mk2-equipment" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "energy-shield-mk2-equipment-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "energy-shield-mk2-equipment-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

62. PATCH_IRON-ORE_GENERIC
   Description: Generic compatibility patch for item iron-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_IRON-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for iron-ore
   -- Fixes conflict between: cubium, Moshine-assets, bobplates, quirkycat_machines, alien-module, castra, tenebris-prime, crushing-industry, metal-and-stars, bobelectronics, corrundum, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["iron-ore"] then
       local item = data.raw.item["iron-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "iron-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "iron-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "iron-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

63. PATCH_COPPER-ORE_GENERIC
   Description: Generic compatibility patch for item copper-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_COPPER-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for copper-ore
   -- Fixes conflict between: cubium, Moshine-assets, bobplates, alien-module, crushing-industry, metal-and-stars, corrundum, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["copper-ore"] then
       local item = data.raw.item["copper-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "copper-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "copper-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "copper-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

64. PATCH_COKE_GENERIC
   Description: Generic compatibility patch for item coke
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_COKE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for coke
   -- Fixes conflict between: alloy-smelting, wood-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["coke"] then
       local item = data.raw.item["coke"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "coke" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "coke-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "coke-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

65. PATCH_CRUSHED-COAL_GENERIC
   Description: Generic compatibility patch for item crushed-coal
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CRUSHED-COAL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for crushed-coal
   -- Fixes conflict between: alloy-smelting, crushing-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["crushed-coal"] then
       local item = data.raw.item["crushed-coal"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "crushed-coal" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "crushed-coal-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "crushed-coal-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

66. PATCH_CARBON_GENERIC
   Description: Generic compatibility patch for item carbon
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CARBON

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for carbon
   -- Fixes conflict between: cubium, Moshine-assets, RampantFixed, castra, vulcanus-sulfuric-bacteria, alloy-smelting, Moshine, crushing-industry, astroponics, wood-industry, metal-and-stars, corrundum, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["carbon"] then
       local item = data.raw.item["carbon"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "carbon" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "carbon-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "carbon-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

67. PATCH_SPOILAGE_GENERIC
   Description: Generic compatibility patch for item spoilage
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SPOILAGE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for spoilage
   -- Fixes conflict between: aquilo-seabloom-algaculture, cubium, planet-muluna, secretas, fulgora-coralmium-agriculture
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["spoilage"] then
       local item = data.raw.item["spoilage"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "spoilage" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "spoilage-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "spoilage-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

68. PATCH_LANDFILL_GENERIC
   Description: Generic compatibility patch for item landfill
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LANDFILL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for landfill
   -- Fixes conflict between: aquilo-seabloom-algaculture, Krastorio2-spaced-out, astroponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["landfill"] then
       local item = data.raw.item["landfill"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "landfill" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "landfill-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "landfill-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

69. PATCH_TUNGSTEN-PLATE_GENERIC
   Description: Generic compatibility patch for item tungsten-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TUNGSTEN-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for tungsten-plate
   -- Fixes conflict between: aquilo-seabloom-algaculture, cubium, promethium-quality, slp-dyson-sphere-reworked, lilys-cubeine, VoidProcessing, secretas, metal-and-stars, corrundum, StopgapNukes, Krastorio2-spaced-out, Fluid-level-indicator
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["tungsten-plate"] then
       local item = data.raw.item["tungsten-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "tungsten-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "tungsten-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "tungsten-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

70. PATCH_SUPERCONDUCTOR_GENERIC
   Description: Generic compatibility patch for item superconductor
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SUPERCONDUCTOR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for superconductor
   -- Fixes conflict between: aquilo-seabloom-algaculture, slp-dyson-sphere-reworked, RampantFixed, VoidProcessing, Krastorio2-spaced-out, secretas, metal-and-stars, promethium-quality, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["superconductor"] then
       local item = data.raw.item["superconductor"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "superconductor" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "superconductor-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "superconductor-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

71. PATCH_PENTAPOD-EGG_GENERIC
   Description: Generic compatibility patch for item pentapod-egg
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PENTAPOD-EGG

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for pentapod-egg
   -- Fixes conflict between: aquilo-seabloom-algaculture, cubium, Krastorio2-spaced-out, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["pentapod-egg"] then
       local item = data.raw.item["pentapod-egg"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "pentapod-egg" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "pentapod-egg-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "pentapod-egg-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

72. PATCH_NUTRIENTS_GENERIC
   Description: Generic compatibility patch for item nutrients
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_NUTRIENTS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for nutrients
   -- Fixes conflict between: aquilo-seabloom-algaculture, VoidProcessing, secretas, metal-and-stars, corrundum, lignumis
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["nutrients"] then
       local item = data.raw.item["nutrients"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "nutrients" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "nutrients-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "nutrients-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

73. PATCH_RESIN_GENERIC
   Description: Generic compatibility patch for item resin
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_RESIN

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for resin
   -- Fixes conflict between: aquilo-seabloom-algaculture, wood-industry, vulcanus-sulfuric-bacteria
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["resin"] then
       local item = data.raw.item["resin"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "resin" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "resin-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "resin-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

74. PATCH_WOODCHIPS_GENERIC
   Description: Generic compatibility patch for item woodchips
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_WOODCHIPS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for woodchips
   -- Fixes conflict between: aquilo-seabloom-algaculture, wood-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["woodchips"] then
       local item = data.raw.item["woodchips"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "woodchips" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "woodchips-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "woodchips-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

75. PATCH_WOOD_GENERIC
   Description: Generic compatibility patch for item wood
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_WOOD

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for wood
   -- Fixes conflict between: aquilo-seabloom-algaculture, planet-muluna, Wood-Walls, bobplates, bobgreenhouse, lilys-cubeine, vulcanus-sulfuric-bacteria, wood-military, astroponics, enemyracemanager, metal-and-stars, wood-industry, bobelectronics, corrundum, lignumis, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["wood"] then
       local item = data.raw.item["wood"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "wood" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "wood-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "wood-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

76. PATCH_BIOFLUX_GENERIC
   Description: Generic compatibility patch for item bioflux
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BIOFLUX

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bioflux
   -- Fixes conflict between: cubium, VoidProcessing, astroponics, secretas, metal-and-stars, corrundum
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bioflux"] then
       local item = data.raw.item["bioflux"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bioflux" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bioflux-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bioflux-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

77. PATCH_PIPE_GENERIC
   Description: Generic compatibility patch for item pipe
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PIPE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for pipe
   -- Fixes conflict between: boblogistics, Planet-Hopper, Fluid-level-indicator, grappling-gun, Flare Stack, bobassembly, ballistic_missile, FluidMustFlow, planet-muluna, dea-dia-system, bobpower, secretas, bobplates, foundry-restructuring, lilys-cubeine, castra, Flow Control, bobmining, astroponics, metal-and-stars, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["pipe"] then
       local item = data.raw.item["pipe"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "pipe" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "pipe-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "pipe-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

78. PATCH_TREE-SEED_GENERIC
   Description: Generic compatibility patch for item tree-seed
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TREE-SEED

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for tree-seed
   -- Fixes conflict between: planet-muluna, astroponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["tree-seed"] then
       local item = data.raw.item["tree-seed"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "tree-seed" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "tree-seed-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "tree-seed-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

79. PATCH_CALCITE_GENERIC
   Description: Generic compatibility patch for item calcite
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CALCITE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for calcite
   -- Fixes conflict between: cubium, Moshine-assets, lilys-cubeine, common-prototypes, vulcanus-sulfuric-bacteria, crushing-industry, astroponics, metal-and-stars, corrundum, lignumis, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["calcite"] then
       local item = data.raw.item["calcite"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "calcite" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "calcite-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "calcite-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

80. PATCH_YUMAKO-SEED_GENERIC
   Description: Generic compatibility patch for item yumako-seed
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_YUMAKO-SEED

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for yumako-seed
   -- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["yumako-seed"] then
       local item = data.raw.item["yumako-seed"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "yumako-seed" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "yumako-seed-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "yumako-seed-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

81. PATCH_YUMAKO_GENERIC
   Description: Generic compatibility patch for item yumako
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_YUMAKO

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for yumako
   -- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["yumako"] then
       local item = data.raw.item["yumako"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "yumako" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "yumako-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "yumako-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

82. PATCH_JELLYNUT-SEED_GENERIC
   Description: Generic compatibility patch for item jellynut-seed
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_JELLYNUT-SEED

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for jellynut-seed
   -- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["jellynut-seed"] then
       local item = data.raw.item["jellynut-seed"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "jellynut-seed" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "jellynut-seed-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "jellynut-seed-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

83. PATCH_JELLYNUT_GENERIC
   Description: Generic compatibility patch for item jellynut
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_JELLYNUT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for jellynut
   -- Fixes conflict between: Krastorio2-spaced-out, planet-muluna, astroponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["jellynut"] then
       local item = data.raw.item["jellynut"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "jellynut" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "jellynut-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "jellynut-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

84. PATCH_URANIUM-235_GENERIC
   Description: Generic compatibility patch for item uranium-235
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_URANIUM-235

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for uranium-235
   -- Fixes conflict between: atan-nuclear-science, lilys-cubeine, bobplates, RampantFixed, metal-and-stars, StopgapNukes, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["uranium-235"] then
       local item = data.raw.item["uranium-235"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "uranium-235" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "uranium-235-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "uranium-235-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

85. PATCH_WATER-BARREL_GENERIC
   Description: Generic compatibility patch for item water-barrel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_WATER-BARREL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for water-barrel
   -- Fixes conflict between: atan-nuclear-science, enemyracemanager
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["water-barrel"] then
       local item = data.raw.item["water-barrel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "water-barrel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "water-barrel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "water-barrel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

86. PATCH_BARREL_GENERIC
   Description: Generic compatibility patch for item barrel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BARREL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for barrel
   -- Fixes conflict between: atan-nuclear-science, PlutoniumEnergy
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["barrel"] then
       local item = data.raw.item["barrel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "barrel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "barrel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "barrel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

87. PATCH_CENTRIFUGE_GENERIC
   Description: Generic compatibility patch for item centrifuge
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CENTRIFUGE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for centrifuge
   -- Fixes conflict between: atan-nuclear-science, bobassembly
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["centrifuge"] then
       local item = data.raw.item["centrifuge"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "centrifuge" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "centrifuge-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "centrifuge-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

88. PATCH_REFINED-CONCRETE_GENERIC
   Description: Generic compatibility patch for item refined-concrete
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_REFINED-CONCRETE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for refined-concrete
   -- Fixes conflict between: atan-nuclear-science, cubium, bobassembly, HelicopterRevival, minimalist-rails, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["refined-concrete"] then
       local item = data.raw.item["refined-concrete"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "refined-concrete" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "refined-concrete-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "refined-concrete-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

89. PATCH_PLUTONIUM-239_GENERIC
   Description: Generic compatibility patch for item plutonium-239
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PLUTONIUM-239

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for plutonium-239
   -- Fixes conflict between: atan-nuclear-science, PlutoniumEnergy, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["plutonium-239"] then
       local item = data.raw.item["plutonium-239"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "plutonium-239" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "plutonium-239-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "plutonium-239-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

90. PATCH_ATOMIC-BOMB_GENERIC
   Description: Generic compatibility patch for item atomic-bomb
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ATOMIC-BOMB

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for atomic-bomb
   -- Fixes conflict between: atomic-artillery-reborn, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["atomic-bomb"] then
       local item = data.raw.item["atomic-bomb"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "atomic-bomb" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "atomic-bomb-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "atomic-bomb-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

91. PATCH_EXPLOSIVE-URANIUM-CANNON-SHELL_GENERIC
   Description: Generic compatibility patch for item explosive-uranium-cannon-shell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXPLOSIVE-URANIUM-CANNON-SHELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for explosive-uranium-cannon-shell
   -- Fixes conflict between: atomic-artillery-reborn, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["explosive-uranium-cannon-shell"] then
       local item = data.raw.item["explosive-uranium-cannon-shell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "explosive-uranium-cannon-shell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "explosive-uranium-cannon-shell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "explosive-uranium-cannon-shell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

92. PATCH_STORAGE-TANK_GENERIC
   Description: Generic compatibility patch for item storage-tank
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STORAGE-TANK

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for storage-tank
   -- Fixes conflict between: ballistic_missile, boblogistics, metal-and-stars, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["storage-tank"] then
       local item = data.raw.item["storage-tank"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "storage-tank" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "storage-tank-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "storage-tank-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

93. PATCH_ROCKET-PART_GENERIC
   Description: Generic compatibility patch for item rocket-part
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ROCKET-PART

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for rocket-part
   -- Fixes conflict between: ballistic_missile, metal-and-stars, Planet-Hopper
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["rocket-part"] then
       local item = data.raw.item["rocket-part"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "rocket-part" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "rocket-part-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "rocket-part-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

94. PATCH_ASSEMBLING-MACHINE-3_GENERIC
   Description: Generic compatibility patch for item assembling-machine-3
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ASSEMBLING-MACHINE-3

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for assembling-machine-3
   -- Fixes conflict between: Moshine, Krastorio2-spaced-out, bobassembly
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["assembling-machine-3"] then
       local item = data.raw.item["assembling-machine-3"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "assembling-machine-3" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "assembling-machine-3-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "assembling-machine-3-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

95. PATCH_BOB-ELECTRIC-CHEMICAL-FURNACE_GENERIC
   Description: Generic compatibility patch for item bob-electric-chemical-furnace
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ELECTRIC-CHEMICAL-FURNACE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electric-chemical-furnace
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-electric-chemical-furnace"] then
       local item = data.raw.item["bob-electric-chemical-furnace"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-electric-chemical-furnace" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-electric-chemical-furnace-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-electric-chemical-furnace-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

96. PATCH_CHEMICAL-PLANT_GENERIC
   Description: Generic compatibility patch for item chemical-plant
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CHEMICAL-PLANT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for chemical-plant
   -- Fixes conflict between: corrundum, bobassembly
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["chemical-plant"] then
       local item = data.raw.item["chemical-plant"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "chemical-plant" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "chemical-plant-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "chemical-plant-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

97. PATCH_BOB-DISTILLERY_GENERIC
   Description: Generic compatibility patch for item bob-distillery
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-DISTILLERY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-distillery
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-distillery"] then
       local item = data.raw.item["bob-distillery"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-distillery" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-distillery-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-distillery-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

98. PATCH_BOB-ELECTROLYSER_GENERIC
   Description: Generic compatibility patch for item bob-electrolyser
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ELECTROLYSER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electrolyser
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-electrolyser"] then
       local item = data.raw.item["bob-electrolyser"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-electrolyser" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-electrolyser-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-electrolyser-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

99. PATCH_PLASTIC-BAR_GENERIC
   Description: Generic compatibility patch for item plastic-bar
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PLASTIC-BAR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for plastic-bar
   -- Fixes conflict between: Cold_biters, boblogistics, StopgapNukes, bobelectronics, Fluid-level-indicator, cubium, bobassembly, vtk-cannon-turret, bobequipment, fulgora-coralmium-agriculture, corrundum, Kux-OrbitalIonCannon, bobvehicleequipment, More_Ammo, HelicopterRevival, metal-and-stars, secretas, More_Repair_Packs, bobplates, lilys-cubeine, castra, tenebris-prime, bobmodules, lignumis, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["plastic-bar"] then
       local item = data.raw.item["plastic-bar"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "plastic-bar" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "plastic-bar-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "plastic-bar-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

100. PATCH_BOB-FLUID-FURNACE_GENERIC
   Description: Generic compatibility patch for item bob-fluid-furnace
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-FLUID-FURNACE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-fluid-furnace
   -- Fixes conflict between: bobpower, bobassembly
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-fluid-furnace"] then
       local item = data.raw.item["bob-fluid-furnace"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-fluid-furnace" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-fluid-furnace-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-fluid-furnace-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

101. PATCH_STEEL-FURNACE_GENERIC
   Description: Generic compatibility patch for item steel-furnace
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STEEL-FURNACE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for steel-furnace
   -- Fixes conflict between: Electric Furnaces, bobpower, bobassembly, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["steel-furnace"] then
       local item = data.raw.item["steel-furnace"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "steel-furnace" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "steel-furnace-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "steel-furnace-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

102. PATCH_BOB-STEEL-MIXING-FURNACE_GENERIC
   Description: Generic compatibility patch for item bob-steel-mixing-furnace
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-STEEL-MIXING-FURNACE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-steel-mixing-furnace
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-steel-mixing-furnace"] then
       local item = data.raw.item["bob-steel-mixing-furnace"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-steel-mixing-furnace" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-steel-mixing-furnace-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-steel-mixing-furnace-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

103. PATCH_BOB-STEEL-CHEMICAL-FURNACE_GENERIC
   Description: Generic compatibility patch for item bob-steel-chemical-furnace
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-STEEL-CHEMICAL-FURNACE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-steel-chemical-furnace
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-steel-chemical-furnace"] then
       local item = data.raw.item["bob-steel-chemical-furnace"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-steel-chemical-furnace" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-steel-chemical-furnace-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-steel-chemical-furnace-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

104. PATCH_BOB-TIN-PLATE_GENERIC
   Description: Generic compatibility patch for item bob-tin-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-TIN-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-tin-plate
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-tin-plate"] then
       local item = data.raw.item["bob-tin-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-tin-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-tin-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-tin-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

105. PATCH_BOB-RUBBER_GENERIC
   Description: Generic compatibility patch for item bob-rubber
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-RUBBER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-rubber
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-rubber"] then
       local item = data.raw.item["bob-rubber"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-rubber" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-rubber-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-rubber-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

106. PATCH_BOB-GOLD-PLATE_GENERIC
   Description: Generic compatibility patch for item bob-gold-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-GOLD-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-gold-plate
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-gold-plate"] then
       local item = data.raw.item["bob-gold-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-gold-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-gold-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-gold-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

107. PATCH_BOB-RESIN_GENERIC
   Description: Generic compatibility patch for item bob-resin
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-RESIN

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-resin
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-resin"] then
       local item = data.raw.item["bob-resin"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-resin" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-resin-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-resin-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

108. PATCH_BOB-ADVANCED-PROCESSING-UNIT_GENERIC
   Description: Generic compatibility patch for item bob-advanced-processing-unit
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ADVANCED-PROCESSING-UNIT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-advanced-processing-unit
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-advanced-processing-unit"] then
       local item = data.raw.item["bob-advanced-processing-unit"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-advanced-processing-unit" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-advanced-processing-unit-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-advanced-processing-unit-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

109. PATCH_BOB-SILICON-PLATE_GENERIC
   Description: Generic compatibility patch for item bob-silicon-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-SILICON-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-silicon-plate
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-silicon-plate"] then
       local item = data.raw.item["bob-silicon-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-silicon-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-silicon-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-silicon-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

110. PATCH_BOB-SILICON-WAFER_GENERIC
   Description: Generic compatibility patch for item bob-silicon-wafer
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-SILICON-WAFER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-silicon-wafer
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-silicon-wafer"] then
       local item = data.raw.item["bob-silicon-wafer"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-silicon-wafer" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-silicon-wafer-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-silicon-wafer-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

111. PATCH_BOB-LEAD-PLATE_GENERIC
   Description: Generic compatibility patch for item bob-lead-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-LEAD-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-lead-plate
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-lead-plate"] then
       local item = data.raw.item["bob-lead-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-lead-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-lead-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-lead-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

112. PATCH_BOB-ALIEN-ARTIFACT_GENERIC
   Description: Generic compatibility patch for item bob-alien-artifact
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-artifact
   -- Fixes conflict between: bobenemies, bobvehicleequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-artifact"] then
       local item = data.raw.item["bob-alien-artifact"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-artifact" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-artifact-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-artifact-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

113. PATCH_BOB-ALIEN-ARTIFACT-RED_GENERIC
   Description: Generic compatibility patch for item bob-alien-artifact-red
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-RED

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-artifact-red
   -- Fixes conflict between: bobenemies, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-artifact-red"] then
       local item = data.raw.item["bob-alien-artifact-red"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-artifact-red" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-artifact-red-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-artifact-red-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

114. PATCH_BOB-ALIEN-ARTIFACT-ORANGE_GENERIC
   Description: Generic compatibility patch for item bob-alien-artifact-orange
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-ORANGE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-artifact-orange
   -- Fixes conflict between: bobenemies, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-artifact-orange"] then
       local item = data.raw.item["bob-alien-artifact-orange"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-artifact-orange" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-artifact-orange-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-artifact-orange-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

115. PATCH_BOB-ALIEN-ARTIFACT-YELLOW_GENERIC
   Description: Generic compatibility patch for item bob-alien-artifact-yellow
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-YELLOW

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-artifact-yellow
   -- Fixes conflict between: bobenemies, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-artifact-yellow"] then
       local item = data.raw.item["bob-alien-artifact-yellow"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-artifact-yellow" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-artifact-yellow-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-artifact-yellow-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

116. PATCH_BOB-ALIEN-ARTIFACT-GREEN_GENERIC
   Description: Generic compatibility patch for item bob-alien-artifact-green
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-GREEN

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-artifact-green
   -- Fixes conflict between: bobenemies, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-artifact-green"] then
       local item = data.raw.item["bob-alien-artifact-green"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-artifact-green" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-artifact-green-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-artifact-green-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

117. PATCH_BOB-ALIEN-ARTIFACT-BLUE_GENERIC
   Description: Generic compatibility patch for item bob-alien-artifact-blue
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-BLUE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-artifact-blue
   -- Fixes conflict between: bobenemies, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-artifact-blue"] then
       local item = data.raw.item["bob-alien-artifact-blue"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-artifact-blue" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-artifact-blue-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-artifact-blue-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

118. PATCH_BOB-ALIEN-ARTIFACT-PURPLE_GENERIC
   Description: Generic compatibility patch for item bob-alien-artifact-purple
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ARTIFACT-PURPLE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-artifact-purple
   -- Fixes conflict between: bobenemies, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-artifact-purple"] then
       local item = data.raw.item["bob-alien-artifact-purple"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-artifact-purple" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-artifact-purple-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-artifact-purple-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

119. PATCH_POWER-ARMOR-MK2_GENERIC
   Description: Generic compatibility patch for item power-armor-mk2
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_POWER-ARMOR-MK2

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for power-armor-mk2
   -- Fixes conflict between: Cold_biters, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["power-armor-mk2"] then
       local item = data.raw.item["power-armor-mk2"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "power-armor-mk2" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "power-armor-mk2-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "power-armor-mk2-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

120. PATCH_SPEED-MODULE-2_GENERIC
   Description: Generic compatibility patch for item speed-module-2
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SPEED-MODULE-2

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for speed-module-2
   -- Fixes conflict between: Electric Furnaces, Krastorio2-spaced-out, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["speed-module-2"] then
       local item = data.raw.item["speed-module-2"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "speed-module-2" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "speed-module-2-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "speed-module-2-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

121. PATCH_EFFICIENCY-MODULE-3_GENERIC
   Description: Generic compatibility patch for item efficiency-module-3
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EFFICIENCY-MODULE-3

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for efficiency-module-3
   -- Fixes conflict between: bobmodules, bobequipment, secretas, bobvehicleequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["efficiency-module-3"] then
       local item = data.raw.item["efficiency-module-3"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "efficiency-module-3" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "efficiency-module-3-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "efficiency-module-3-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

122. PATCH_SPEED-MODULE-3_GENERIC
   Description: Generic compatibility patch for item speed-module-3
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SPEED-MODULE-3

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for speed-module-3
   -- Fixes conflict between: bobequipment, secretas, bobvehicleequipment, bobmodules, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["speed-module-3"] then
       local item = data.raw.item["speed-module-3"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "speed-module-3" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "speed-module-3-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "speed-module-3-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

123. PATCH_PRODUCTIVITY-MODULE-2_GENERIC
   Description: Generic compatibility patch for item productivity-module-2
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PRODUCTIVITY-MODULE-2

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for productivity-module-2
   -- Fixes conflict between: metal-and-stars, Moshine, bobequipment, bobvehicleequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["productivity-module-2"] then
       local item = data.raw.item["productivity-module-2"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "productivity-module-2" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "productivity-module-2-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "productivity-module-2-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

124. PATCH_PRODUCTIVITY-MODULE-3_GENERIC
   Description: Generic compatibility patch for item productivity-module-3
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PRODUCTIVITY-MODULE-3

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for productivity-module-3
   -- Fixes conflict between: bobmodules, bobequipment, secretas, bobvehicleequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["productivity-module-3"] then
       local item = data.raw.item["productivity-module-3"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "productivity-module-3" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "productivity-module-3-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "productivity-module-3-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

125. PATCH_BATTERY-MK2-EQUIPMENT_GENERIC
   Description: Generic compatibility patch for item battery-mk2-equipment
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BATTERY-MK2-EQUIPMENT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for battery-mk2-equipment
   -- Fixes conflict between: Hovercrafts, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["battery-mk2-equipment"] then
       local item = data.raw.item["battery-mk2-equipment"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "battery-mk2-equipment" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "battery-mk2-equipment-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "battery-mk2-equipment-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

126. PATCH_FISSION-REACTOR-EQUIPMENT_GENERIC
   Description: Generic compatibility patch for item fission-reactor-equipment
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FISSION-REACTOR-EQUIPMENT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fission-reactor-equipment
   -- Fixes conflict between: PlutoniumEnergy, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["fission-reactor-equipment"] then
       local item = data.raw.item["fission-reactor-equipment"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "fission-reactor-equipment" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "fission-reactor-equipment-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "fission-reactor-equipment-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

127. PATCH_URANIUM-FUEL-CELL_GENERIC
   Description: Generic compatibility patch for item uranium-fuel-cell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_URANIUM-FUEL-CELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for uranium-fuel-cell
   -- Fixes conflict between: slp-dyson-sphere-reworked, maraxsis, bobequipment, secretas, metal-and-stars, StopgapNukes, bobvehicleequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["uranium-fuel-cell"] then
       local item = data.raw.item["uranium-fuel-cell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "uranium-fuel-cell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "uranium-fuel-cell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "uranium-fuel-cell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

128. PATCH_NIGHT-VISION-EQUIPMENT_GENERIC
   Description: Generic compatibility patch for item night-vision-equipment
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_NIGHT-VISION-EQUIPMENT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for night-vision-equipment
   -- Fixes conflict between: Krastorio2-spaced-out, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["night-vision-equipment"] then
       local item = data.raw.item["night-vision-equipment"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "night-vision-equipment" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "night-vision-equipment-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "night-vision-equipment-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

129. PATCH_SOLAR-PANEL-EQUIPMENT_GENERIC
   Description: Generic compatibility patch for item solar-panel-equipment
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SOLAR-PANEL-EQUIPMENT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for solar-panel-equipment
   -- Fixes conflict between: Krastorio2-spaced-out, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["solar-panel-equipment"] then
       local item = data.raw.item["solar-panel-equipment"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "solar-panel-equipment" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "solar-panel-equipment-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "solar-panel-equipment-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

130. PATCH_PERSONAL-LASER-DEFENSE-EQUIPMENT_GENERIC
   Description: Generic compatibility patch for item personal-laser-defense-equipment
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PERSONAL-LASER-DEFENSE-EQUIPMENT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for personal-laser-defense-equipment
   -- Fixes conflict between: Krastorio2-spaced-out, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["personal-laser-defense-equipment"] then
       local item = data.raw.item["personal-laser-defense-equipment"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "personal-laser-defense-equipment" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "personal-laser-defense-equipment-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "personal-laser-defense-equipment-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

131. PATCH_EXOSKELETON-EQUIPMENT_GENERIC
   Description: Generic compatibility patch for item exoskeleton-equipment
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXOSKELETON-EQUIPMENT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for exoskeleton-equipment
   -- Fixes conflict between: Krastorio2-spaced-out, bobequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["exoskeleton-equipment"] then
       local item = data.raw.item["exoskeleton-equipment"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "exoskeleton-equipment" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "exoskeleton-equipment-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "exoskeleton-equipment-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

132. PATCH_SULFUR_GENERIC
   Description: Generic compatibility patch for item sulfur
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SULFUR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for sulfur
   -- Fixes conflict between: cubium, Moshine-assets, bobplates, bobgreenhouse, More_Ammo, castra, tenebris-prime, vulcanus-sulfuric-bacteria, corrundum, StopgapNukes
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["sulfur"] then
       local item = data.raw.item["sulfur"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "sulfur" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "sulfur-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "sulfur-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

133. PATCH_BOB-BRASS-ALLOY_GENERIC
   Description: Generic compatibility patch for item bob-brass-alloy
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-BRASS-ALLOY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-brass-alloy
   -- Fixes conflict between: boblogistics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-brass-alloy"] then
       local item = data.raw.item["bob-brass-alloy"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-brass-alloy" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-brass-alloy-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-brass-alloy-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

134. PATCH_BOB-TITANIUM-PLATE_GENERIC
   Description: Generic compatibility patch for item bob-titanium-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-TITANIUM-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-titanium-plate
   -- Fixes conflict between: boblogistics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-titanium-plate"] then
       local item = data.raw.item["bob-titanium-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-titanium-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-titanium-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-titanium-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

135. PATCH_LONG-HANDED-INSERTER_GENERIC
   Description: Generic compatibility patch for item long-handed-inserter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LONG-HANDED-INSERTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for long-handed-inserter
   -- Fixes conflict between: boblogistics, long_stack_inserter, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["long-handed-inserter"] then
       local item = data.raw.item["long-handed-inserter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "long-handed-inserter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "long-handed-inserter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "long-handed-inserter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

136. PATCH_TRANSPORT-BELT_GENERIC
   Description: Generic compatibility patch for item transport-belt
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TRANSPORT-BELT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for transport-belt
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["transport-belt"] then
       local item = data.raw.item["transport-belt"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "transport-belt" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "transport-belt-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "transport-belt-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

137. PATCH_FAST-TRANSPORT-BELT_GENERIC
   Description: Generic compatibility patch for item fast-transport-belt
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FAST-TRANSPORT-BELT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fast-transport-belt
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["fast-transport-belt"] then
       local item = data.raw.item["fast-transport-belt"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "fast-transport-belt" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "fast-transport-belt-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "fast-transport-belt-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

138. PATCH_EXPRESS-TRANSPORT-BELT_GENERIC
   Description: Generic compatibility patch for item express-transport-belt
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXPRESS-TRANSPORT-BELT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for express-transport-belt
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, OmegaDrill, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["express-transport-belt"] then
       local item = data.raw.item["express-transport-belt"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "express-transport-belt" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "express-transport-belt-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "express-transport-belt-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

139. PATCH_FAST-UNDERGROUND-BELT_GENERIC
   Description: Generic compatibility patch for item fast-underground-belt
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FAST-UNDERGROUND-BELT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fast-underground-belt
   -- Fixes conflict between: boblogistics, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["fast-underground-belt"] then
       local item = data.raw.item["fast-underground-belt"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "fast-underground-belt" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "fast-underground-belt-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "fast-underground-belt-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

140. PATCH_EXPRESS-UNDERGROUND-BELT_GENERIC
   Description: Generic compatibility patch for item express-underground-belt
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXPRESS-UNDERGROUND-BELT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for express-underground-belt
   -- Fixes conflict between: boblogistics, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["express-underground-belt"] then
       local item = data.raw.item["express-underground-belt"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "express-underground-belt" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "express-underground-belt-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "express-underground-belt-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

141. PATCH_FAST-SPLITTER_GENERIC
   Description: Generic compatibility patch for item fast-splitter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FAST-SPLITTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fast-splitter
   -- Fixes conflict between: boblogistics, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["fast-splitter"] then
       local item = data.raw.item["fast-splitter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "fast-splitter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "fast-splitter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "fast-splitter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

142. PATCH_EXPRESS-SPLITTER_GENERIC
   Description: Generic compatibility patch for item express-splitter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXPRESS-SPLITTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for express-splitter
   -- Fixes conflict between: boblogistics, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["express-splitter"] then
       local item = data.raw.item["express-splitter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "express-splitter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "express-splitter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "express-splitter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

143. PATCH_BURNER-INSERTER_GENERIC
   Description: Generic compatibility patch for item burner-inserter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BURNER-INSERTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for burner-inserter
   -- Fixes conflict between: boblogistics, lignumis, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["burner-inserter"] then
       local item = data.raw.item["burner-inserter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "burner-inserter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "burner-inserter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "burner-inserter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

144. PATCH_FAST-INSERTER_GENERIC
   Description: Generic compatibility patch for item fast-inserter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FAST-INSERTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fast-inserter
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["fast-inserter"] then
       local item = data.raw.item["fast-inserter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "fast-inserter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "fast-inserter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "fast-inserter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

145. PATCH_BULK-INSERTER_GENERIC
   Description: Generic compatibility patch for item bulk-inserter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BULK-INSERTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bulk-inserter
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bulk-inserter"] then
       local item = data.raw.item["bulk-inserter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bulk-inserter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bulk-inserter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bulk-inserter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

146. PATCH_INSERTER_GENERIC
   Description: Generic compatibility patch for item inserter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_INSERTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for inserter
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, secretas, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["inserter"] then
       local item = data.raw.item["inserter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "inserter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "inserter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "inserter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

147. PATCH_PASSIVE-PROVIDER-CHEST_GENERIC
   Description: Generic compatibility patch for item passive-provider-chest
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PASSIVE-PROVIDER-CHEST

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for passive-provider-chest
   -- Fixes conflict between: boblogistics, orbital-transfer, Warehousing
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["passive-provider-chest"] then
       local item = data.raw.item["passive-provider-chest"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "passive-provider-chest" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "passive-provider-chest-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "passive-provider-chest-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

148. PATCH_ACTIVE-PROVIDER-CHEST_GENERIC
   Description: Generic compatibility patch for item active-provider-chest
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ACTIVE-PROVIDER-CHEST

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for active-provider-chest
   -- Fixes conflict between: boblogistics, Warehousing
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["active-provider-chest"] then
       local item = data.raw.item["active-provider-chest"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "active-provider-chest" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "active-provider-chest-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "active-provider-chest-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

149. PATCH_STORAGE-CHEST_GENERIC
   Description: Generic compatibility patch for item storage-chest
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STORAGE-CHEST

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for storage-chest
   -- Fixes conflict between: boblogistics, Warehousing
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["storage-chest"] then
       local item = data.raw.item["storage-chest"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "storage-chest" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "storage-chest-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "storage-chest-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

150. PATCH_BUFFER-CHEST_GENERIC
   Description: Generic compatibility patch for item buffer-chest
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BUFFER-CHEST

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for buffer-chest
   -- Fixes conflict between: boblogistics, Warehousing
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["buffer-chest"] then
       local item = data.raw.item["buffer-chest"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "buffer-chest" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "buffer-chest-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "buffer-chest-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

151. PATCH_REQUESTER-CHEST_GENERIC
   Description: Generic compatibility patch for item requester-chest
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_REQUESTER-CHEST

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for requester-chest
   -- Fixes conflict between: boblogistics, orbital-transfer, Warehousing
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["requester-chest"] then
       local item = data.raw.item["requester-chest"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "requester-chest" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "requester-chest-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "requester-chest-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

152. PATCH_BOB-BRONZE-ALLOY_GENERIC
   Description: Generic compatibility patch for item bob-bronze-alloy
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-BRONZE-ALLOY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-bronze-alloy
   -- Fixes conflict between: boblogistics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-bronze-alloy"] then
       local item = data.raw.item["bob-bronze-alloy"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-bronze-alloy" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-bronze-alloy-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-bronze-alloy-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

153. PATCH_BOB-SILICON-NITRIDE_GENERIC
   Description: Generic compatibility patch for item bob-silicon-nitride
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-SILICON-NITRIDE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-silicon-nitride
   -- Fixes conflict between: boblogistics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-silicon-nitride"] then
       local item = data.raw.item["bob-silicon-nitride"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-silicon-nitride" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-silicon-nitride-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-silicon-nitride-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

154. PATCH_BOB-TUNGSTEN-PLATE_GENERIC
   Description: Generic compatibility patch for item bob-tungsten-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-TUNGSTEN-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-tungsten-plate
   -- Fixes conflict between: boblogistics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-tungsten-plate"] then
       local item = data.raw.item["bob-tungsten-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-tungsten-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-tungsten-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-tungsten-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

155. PATCH_BOB-NITINOL-ALLOY_GENERIC
   Description: Generic compatibility patch for item bob-nitinol-alloy
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-NITINOL-ALLOY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-nitinol-alloy
   -- Fixes conflict between: boblogistics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-nitinol-alloy"] then
       local item = data.raw.item["bob-nitinol-alloy"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-nitinol-alloy" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-nitinol-alloy-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-nitinol-alloy-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

156. PATCH_BOB-COPPER-TUNGSTEN-ALLOY_GENERIC
   Description: Generic compatibility patch for item bob-copper-tungsten-alloy
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-COPPER-TUNGSTEN-ALLOY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-copper-tungsten-alloy
   -- Fixes conflict between: boblogistics, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-copper-tungsten-alloy"] then
       local item = data.raw.item["bob-copper-tungsten-alloy"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-copper-tungsten-alloy" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-copper-tungsten-alloy-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-copper-tungsten-alloy-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

157. PATCH_PUMP_GENERIC
   Description: Generic compatibility patch for item pump
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PUMP

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for pump
   -- Fixes conflict between: boblogistics, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["pump"] then
       local item = data.raw.item["pump"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "pump" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "pump-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "pump-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

158. PATCH_ROBOPORT_GENERIC
   Description: Generic compatibility patch for item roboport
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ROBOPORT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for roboport
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["roboport"] then
       local item = data.raw.item["roboport"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "roboport" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "roboport-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "roboport-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

159. PATCH_STEEL-CHEST_GENERIC
   Description: Generic compatibility patch for item steel-chest
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STEEL-CHEST

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for steel-chest
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["steel-chest"] then
       local item = data.raw.item["steel-chest"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "steel-chest" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "steel-chest-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "steel-chest-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

160. PATCH_LOCOMOTIVE_GENERIC
   Description: Generic compatibility patch for item locomotive
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LOCOMOTIVE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for locomotive
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, se-space-trains
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["locomotive"] then
       local item = data.raw.item["locomotive"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "locomotive" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "locomotive-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "locomotive-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

161. PATCH_CARGO-WAGON_GENERIC
   Description: Generic compatibility patch for item cargo-wagon
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CARGO-WAGON

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for cargo-wagon
   -- Fixes conflict between: boblogistics, se-space-trains, DoubleWagons
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["cargo-wagon"] then
       local item = data.raw.item["cargo-wagon"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "cargo-wagon" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "cargo-wagon-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "cargo-wagon-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

162. PATCH_FLUID-WAGON_GENERIC
   Description: Generic compatibility patch for item fluid-wagon
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FLUID-WAGON

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fluid-wagon
   -- Fixes conflict between: boblogistics, se-space-trains, DoubleWagons
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["fluid-wagon"] then
       local item = data.raw.item["fluid-wagon"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "fluid-wagon" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "fluid-wagon-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "fluid-wagon-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

163. PATCH_FLYING-ROBOT-FRAME_GENERIC
   Description: Generic compatibility patch for item flying-robot-frame
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FLYING-ROBOT-FRAME

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for flying-robot-frame
   -- Fixes conflict between: boblogistics, secretas, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["flying-robot-frame"] then
       local item = data.raw.item["flying-robot-frame"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "flying-robot-frame" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "flying-robot-frame-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "flying-robot-frame-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

164. PATCH_QUALITY-MODULE-3_GENERIC
   Description: Generic compatibility patch for item quality-module-3
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_QUALITY-MODULE-3

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for quality-module-3
   -- Fixes conflict between: bobmodules, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["quality-module-3"] then
       local item = data.raw.item["quality-module-3"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "quality-module-3" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "quality-module-3-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "quality-module-3-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

165. PATCH_BOB-RUBY-ORE_GENERIC
   Description: Generic compatibility patch for item bob-ruby-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-RUBY-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-ruby-ore
   -- Fixes conflict between: bobores, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-ruby-ore"] then
       local item = data.raw.item["bob-ruby-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-ruby-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-ruby-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-ruby-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

166. PATCH_BOB-SAPPHIRE-ORE_GENERIC
   Description: Generic compatibility patch for item bob-sapphire-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-SAPPHIRE-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-sapphire-ore
   -- Fixes conflict between: bobores, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-sapphire-ore"] then
       local item = data.raw.item["bob-sapphire-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-sapphire-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-sapphire-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-sapphire-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

167. PATCH_BOB-EMERALD-ORE_GENERIC
   Description: Generic compatibility patch for item bob-emerald-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-EMERALD-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-emerald-ore
   -- Fixes conflict between: bobores, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-emerald-ore"] then
       local item = data.raw.item["bob-emerald-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-emerald-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-emerald-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-emerald-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

168. PATCH_BOB-AMETHYST-ORE_GENERIC
   Description: Generic compatibility patch for item bob-amethyst-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-AMETHYST-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-amethyst-ore
   -- Fixes conflict between: bobores, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-amethyst-ore"] then
       local item = data.raw.item["bob-amethyst-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-amethyst-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-amethyst-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-amethyst-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

169. PATCH_BOB-TOPAZ-ORE_GENERIC
   Description: Generic compatibility patch for item bob-topaz-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-TOPAZ-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-topaz-ore
   -- Fixes conflict between: bobores, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-topaz-ore"] then
       local item = data.raw.item["bob-topaz-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-topaz-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-topaz-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-topaz-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

170. PATCH_BOB-DIAMOND-ORE_GENERIC
   Description: Generic compatibility patch for item bob-diamond-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-DIAMOND-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-diamond-ore
   -- Fixes conflict between: bobores, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-diamond-ore"] then
       local item = data.raw.item["bob-diamond-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-diamond-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-diamond-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-diamond-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

171. PATCH_BOB-ALIEN-ORANGE-ALLOY_GENERIC
   Description: Generic compatibility patch for item bob-alien-orange-alloy
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOB-ALIEN-ORANGE-ALLOY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-orange-alloy
   -- Fixes conflict between: bobvehicleequipment, bobplates
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["bob-alien-orange-alloy"] then
       local item = data.raw.item["bob-alien-orange-alloy"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "bob-alien-orange-alloy" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "bob-alien-orange-alloy-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "bob-alien-orange-alloy-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

172. PATCH_URANIUM-238_GENERIC
   Description: Generic compatibility patch for item uranium-238
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_URANIUM-238

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for uranium-238
   -- Fixes conflict between: bobplates, More_Ammo, PlutoniumEnergy, vtk-cannon-turret, metal-and-stars, StopgapNukes, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["uranium-238"] then
       local item = data.raw.item["uranium-238"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "uranium-238" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "uranium-238-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "uranium-238-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

173. PATCH_HEAT-PIPE_GENERIC
   Description: Generic compatibility patch for item heat-pipe
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_HEAT-PIPE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for heat-pipe
   -- Fixes conflict between: cubium, Hovercrafts, bobpower, secretas, metal-and-stars, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["heat-pipe"] then
       local item = data.raw.item["heat-pipe"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "heat-pipe" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "heat-pipe-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "heat-pipe-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

174. PATCH_ACCUMULATOR_GENERIC
   Description: Generic compatibility patch for item accumulator
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ACCUMULATOR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for accumulator
   -- Fixes conflict between: slp-dyson-sphere-reworked, cubium, RampantFixed, snouz-big-accumulator, bobpower, metal-and-stars, Kux-OrbitalIonCannon
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["accumulator"] then
       local item = data.raw.item["accumulator"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "accumulator" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "accumulator-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "accumulator-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

175. PATCH_BOILER_GENERIC
   Description: Generic compatibility patch for item boiler
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BOILER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for boiler
   -- Fixes conflict between: corrundum, bobpower, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["boiler"] then
       local item = data.raw.item["boiler"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "boiler" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "boiler-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "boiler-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

176. PATCH_HEAT-EXCHANGER_GENERIC
   Description: Generic compatibility patch for item heat-exchanger
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_HEAT-EXCHANGER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for heat-exchanger
   -- Fixes conflict between: Hovercrafts, bobpower
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["heat-exchanger"] then
       local item = data.raw.item["heat-exchanger"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "heat-exchanger" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "heat-exchanger-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "heat-exchanger-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

177. PATCH_NUCLEAR-REACTOR_GENERIC
   Description: Generic compatibility patch for item nuclear-reactor
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_NUCLEAR-REACTOR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for nuclear-reactor
   -- Fixes conflict between: bobpower, RampantFixed
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["nuclear-reactor"] then
       local item = data.raw.item["nuclear-reactor"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "nuclear-reactor" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "nuclear-reactor-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "nuclear-reactor-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

178. PATCH_MEDIUM-ELECTRIC-POLE_GENERIC
   Description: Generic compatibility patch for item medium-electric-pole
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_MEDIUM-ELECTRIC-POLE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for medium-electric-pole
   -- Fixes conflict between: bobpower, snouz-big-solar-panel, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["medium-electric-pole"] then
       local item = data.raw.item["medium-electric-pole"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "medium-electric-pole" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "medium-electric-pole-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "medium-electric-pole-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

179. PATCH_SUBSTATION_GENERIC
   Description: Generic compatibility patch for item substation
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SUBSTATION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for substation
   -- Fixes conflict between: bobpower, Krastorio2-spaced-out, snouz_better_substation
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["substation"] then
       local item = data.raw.item["substation"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "substation" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "substation-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "substation-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

180. PATCH_SOLAR-PANEL_GENERIC
   Description: Generic compatibility patch for item solar-panel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SOLAR-PANEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for solar-panel
   -- Fixes conflict between: slp-dyson-sphere-reworked, bobpower, snouz-big-solar-panel, secretas, Kux-OrbitalIonCannon, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["solar-panel"] then
       local item = data.raw.item["solar-panel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "solar-panel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "solar-panel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "solar-panel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

181. PATCH_STEAM-ENGINE_GENERIC
   Description: Generic compatibility patch for item steam-engine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STEAM-ENGINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for steam-engine
   -- Fixes conflict between: corrundum, bobpower, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["steam-engine"] then
       local item = data.raw.item["steam-engine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "steam-engine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "steam-engine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "steam-engine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

182. PATCH_STEAM-TURBINE_GENERIC
   Description: Generic compatibility patch for item steam-turbine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STEAM-TURBINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for steam-turbine
   -- Fixes conflict between: bobpower, secretas, corrundum, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["steam-turbine"] then
       local item = data.raw.item["steam-turbine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "steam-turbine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "steam-turbine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "steam-turbine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

183. PATCH_PRODUCTIVITY-MODULE_GENERIC
   Description: Generic compatibility patch for item productivity-module
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PRODUCTIVITY-MODULE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for productivity-module
   -- Fixes conflict between: cubium, crushing-industry, bobvehicleequipment
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["productivity-module"] then
       local item = data.raw.item["productivity-module"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "productivity-module" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "productivity-module-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "productivity-module-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

184. PATCH_FIREARM-MAGAZINE_GENERIC
   Description: Generic compatibility patch for item firearm-magazine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FIREARM-MAGAZINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for firearm-magazine
   -- Fixes conflict between: More_Ammo, cubium, castra
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["firearm-magazine"] then
       local item = data.raw.item["firearm-magazine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "firearm-magazine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "firearm-magazine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "firearm-magazine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

185. PATCH_PIERCING-ROUNDS-MAGAZINE_GENERIC
   Description: Generic compatibility patch for item piercing-rounds-magazine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PIERCING-ROUNDS-MAGAZINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for piercing-rounds-magazine
   -- Fixes conflict between: cubium, More_Ammo, PlutoniumEnergy, castra, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["piercing-rounds-magazine"] then
       local item = data.raw.item["piercing-rounds-magazine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "piercing-rounds-magazine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "piercing-rounds-magazine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "piercing-rounds-magazine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

186. PATCH_URANIUM-ROUNDS-MAGAZINE_GENERIC
   Description: Generic compatibility patch for item uranium-rounds-magazine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_URANIUM-ROUNDS-MAGAZINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for uranium-rounds-magazine
   -- Fixes conflict between: StopgapNukes, Cerys-Moon-of-Fulgora, castra
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["uranium-rounds-magazine"] then
       local item = data.raw.item["uranium-rounds-magazine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "uranium-rounds-magazine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "uranium-rounds-magazine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "uranium-rounds-magazine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

187. PATCH_LITHIUM-PLATE_GENERIC
   Description: Generic compatibility patch for item lithium-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LITHIUM-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for lithium-plate
   -- Fixes conflict between: slp-dyson-sphere-reworked, cubium, VoidProcessing, castra, secretas, metal-and-stars, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["lithium-plate"] then
       local item = data.raw.item["lithium-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "lithium-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "lithium-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "lithium-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

188. PATCH_SUPERCAPACITOR_GENERIC
   Description: Generic compatibility patch for item supercapacitor
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SUPERCAPACITOR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for supercapacitor
   -- Fixes conflict between: cubium, RampantFixed, castra, tenebris-prime, secretas, metal-and-stars, lignumis
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["supercapacitor"] then
       local item = data.raw.item["supercapacitor"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "supercapacitor" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "supercapacitor-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "supercapacitor-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

189. PATCH_HOLMIUM-PLATE_GENERIC
   Description: Generic compatibility patch for item holmium-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_HOLMIUM-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for holmium-plate
   -- Fixes conflict between: cubium, VoidProcessing, castra, secretas, metal-and-stars, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["holmium-plate"] then
       local item = data.raw.item["holmium-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "holmium-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "holmium-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "holmium-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

190. PATCH_QUANTUM-PROCESSOR_GENERIC
   Description: Generic compatibility patch for item quantum-processor
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_QUANTUM-PROCESSOR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for quantum-processor
   -- Fixes conflict between: slp-dyson-sphere-reworked, cubium, RampantFixed, VoidProcessing, castra, Krastorio2-spaced-out, promethium-quality
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["quantum-processor"] then
       local item = data.raw.item["quantum-processor"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "quantum-processor" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "quantum-processor-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "quantum-processor-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

191. PATCH_POISON-CAPSULE_GENERIC
   Description: Generic compatibility patch for item poison-capsule
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_POISON-CAPSULE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for poison-capsule
   -- Fixes conflict between: Krastorio2-spaced-out, castra
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["poison-capsule"] then
       local item = data.raw.item["poison-capsule"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "poison-capsule" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "poison-capsule-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "poison-capsule-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

192. PATCH_ROCKET-FUEL_GENERIC
   Description: Generic compatibility patch for item rocket-fuel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ROCKET-FUEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for rocket-fuel
   -- Fixes conflict between: cubium, lignumis, VoidProcessing, PlutoniumEnergy, castra, tenebris-prime, StopgapNukes, metal-and-stars, corrundum, Kux-OrbitalIonCannon, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["rocket-fuel"] then
       local item = data.raw.item["rocket-fuel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "rocket-fuel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "rocket-fuel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "rocket-fuel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

193. PATCH_CARBON-FIBER_GENERIC
   Description: Generic compatibility patch for item carbon-fiber
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CARBON-FIBER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for carbon-fiber
   -- Fixes conflict between: slp-dyson-sphere-reworked, cubium, lilys-cubeine, castra, secretas, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["carbon-fiber"] then
       local item = data.raw.item["carbon-fiber"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "carbon-fiber" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "carbon-fiber-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "carbon-fiber-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

194. PATCH_ANCIENT-STRUCTURE-REPAIR-PART_GENERIC
   Description: Generic compatibility patch for item ancient-structure-repair-part
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ANCIENT-STRUCTURE-REPAIR-PART

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for ancient-structure-repair-part
   -- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["ancient-structure-repair-part"] then
       local item = data.raw.item["ancient-structure-repair-part"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "ancient-structure-repair-part" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "ancient-structure-repair-part-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "ancient-structure-repair-part-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

195. PATCH_CERYS-NITROGEN-RICH-MINERALS_GENERIC
   Description: Generic compatibility patch for item cerys-nitrogen-rich-minerals
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CERYS-NITROGEN-RICH-MINERALS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for cerys-nitrogen-rich-minerals
   -- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["cerys-nitrogen-rich-minerals"] then
       local item = data.raw.item["cerys-nitrogen-rich-minerals"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "cerys-nitrogen-rich-minerals" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "cerys-nitrogen-rich-minerals-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "cerys-nitrogen-rich-minerals-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

196. PATCH_TIN-ORE_GENERIC
   Description: Generic compatibility patch for item tin-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TIN-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for tin-ore
   -- Fixes conflict between: crushing-industry, cerys-lunaponics
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["tin-ore"] then
       local item = data.raw.item["tin-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "tin-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "tin-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "tin-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

197. PATCH_PLUTONIUM-238_GENERIC
   Description: Generic compatibility patch for item plutonium-238
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PLUTONIUM-238

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for plutonium-238
   -- Fixes conflict between: PlutoniumEnergy, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["plutonium-238"] then
       local item = data.raw.item["plutonium-238"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "plutonium-238" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "plutonium-238-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "plutonium-238-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

198. PATCH_PLUTONIUM-ROUNDS-MAGAZINE_GENERIC
   Description: Generic compatibility patch for item plutonium-rounds-magazine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PLUTONIUM-ROUNDS-MAGAZINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for plutonium-rounds-magazine
   -- Fixes conflict between: PlutoniumEnergy, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["plutonium-rounds-magazine"] then
       local item = data.raw.item["plutonium-rounds-magazine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "plutonium-rounds-magazine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "plutonium-rounds-magazine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "plutonium-rounds-magazine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

199. PATCH_NUCLEAR-FUEL_GENERIC
   Description: Generic compatibility patch for item nuclear-fuel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_NUCLEAR-FUEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for nuclear-fuel
   -- Fixes conflict between: metal-and-stars, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["nuclear-fuel"] then
       local item = data.raw.item["nuclear-fuel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "nuclear-fuel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "nuclear-fuel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "nuclear-fuel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

200. PATCH_PLUTONIUM-FUEL_GENERIC
   Description: Generic compatibility patch for item plutonium-fuel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PLUTONIUM-FUEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for plutonium-fuel
   -- Fixes conflict between: PlutoniumEnergy, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["plutonium-fuel"] then
       local item = data.raw.item["plutonium-fuel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "plutonium-fuel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "plutonium-fuel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "plutonium-fuel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

201. PATCH_URANIUM-CANNON-SHELL_GENERIC
   Description: Generic compatibility patch for item uranium-cannon-shell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_URANIUM-CANNON-SHELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for uranium-cannon-shell
   -- Fixes conflict between: Cerys-Moon-of-Fulgora, lilys-cubeine
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["uranium-cannon-shell"] then
       local item = data.raw.item["uranium-cannon-shell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "uranium-cannon-shell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "uranium-cannon-shell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "uranium-cannon-shell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

202. PATCH_PLUTONIUM-CANNON-SHELL_GENERIC
   Description: Generic compatibility patch for item plutonium-cannon-shell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PLUTONIUM-CANNON-SHELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for plutonium-cannon-shell
   -- Fixes conflict between: PlutoniumEnergy, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["plutonium-cannon-shell"] then
       local item = data.raw.item["plutonium-cannon-shell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "plutonium-cannon-shell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "plutonium-cannon-shell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "plutonium-cannon-shell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

203. PATCH_EXPLOSIVE-PLUTONIUM-CANNON-SHELL_GENERIC
   Description: Generic compatibility patch for item explosive-plutonium-cannon-shell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EXPLOSIVE-PLUTONIUM-CANNON-SHELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for explosive-plutonium-cannon-shell
   -- Fixes conflict between: PlutoniumEnergy, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["explosive-plutonium-cannon-shell"] then
       local item = data.raw.item["explosive-plutonium-cannon-shell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "explosive-plutonium-cannon-shell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "explosive-plutonium-cannon-shell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "explosive-plutonium-cannon-shell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

204. PATCH_HOLMIUM-ORE_GENERIC
   Description: Generic compatibility patch for item holmium-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_HOLMIUM-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for holmium-ore
   -- Fixes conflict between: metal-and-stars, crushing-industry, Cerys-Moon-of-Fulgora, fulgora-coralmium-agriculture
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["holmium-ore"] then
       local item = data.raw.item["holmium-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "holmium-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "holmium-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "holmium-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

205. PATCH_LITHIUM_GENERIC
   Description: Generic compatibility patch for item lithium
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LITHIUM

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for lithium
   -- Fixes conflict between: metal-and-stars, crushing-industry, Cerys-Moon-of-Fulgora
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["lithium"] then
       local item = data.raw.item["lithium"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "lithium" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "lithium-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "lithium-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

206. PATCH_ARTILLERY-SHELL_GENERIC
   Description: Generic compatibility patch for item artillery-shell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ARTILLERY-SHELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for artillery-shell
   -- Fixes conflict between: StopgapNukes, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora, lilys-cubeine
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["artillery-shell"] then
       local item = data.raw.item["artillery-shell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "artillery-shell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "artillery-shell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "artillery-shell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

207. PATCH_SPEED-MODULE_GENERIC
   Description: Generic compatibility patch for item speed-module
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SPEED-MODULE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for speed-module
   -- Fixes conflict between: Hovercrafts, Cold_biters
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["speed-module"] then
       local item = data.raw.item["speed-module"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "speed-module" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "speed-module-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "speed-module-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

208. PATCH_GOLD-PLATE_GENERIC
   Description: Generic compatibility patch for item gold-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GOLD-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for gold-plate
   -- Fixes conflict between: metal-and-stars, lignumis, common-prototypes, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["gold-plate"] then
       local item = data.raw.item["gold-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "gold-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "gold-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "gold-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

209. PATCH_GOLD-CABLE_GENERIC
   Description: Generic compatibility patch for item gold-cable
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GOLD-CABLE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for gold-cable
   -- Fixes conflict between: metal-and-stars, lignumis, common-prototypes
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["gold-cable"] then
       local item = data.raw.item["gold-cable"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "gold-cable" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "gold-cable-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "gold-cable-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

210. PATCH_NEODYMIUM-PLATE_GENERIC
   Description: Generic compatibility patch for item neodymium-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_NEODYMIUM-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for neodymium-plate
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["neodymium-plate"] then
       local item = data.raw.item["neodymium-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "neodymium-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "neodymium-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "neodymium-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

211. PATCH_GOLD-ORE_GENERIC
   Description: Generic compatibility patch for item gold-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GOLD-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for gold-ore
   -- Fixes conflict between: lignumis, common-prototypes, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["gold-ore"] then
       local item = data.raw.item["gold-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "gold-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "gold-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "gold-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

212. PATCH_SILICA-SAND_GENERIC
   Description: Generic compatibility patch for item silica-sand
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SILICA-SAND

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for silica-sand
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["silica-sand"] then
       local item = data.raw.item["silica-sand"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "silica-sand" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "silica-sand-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "silica-sand-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

213. PATCH_GLASS-PLATE_GENERIC
   Description: Generic compatibility patch for item glass-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GLASS-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for glass-plate
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["glass-plate"] then
       local item = data.raw.item["glass-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "glass-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "glass-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "glass-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

214. PATCH_GLASS-BILLET_GENERIC
   Description: Generic compatibility patch for item glass-billet
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_GLASS-BILLET

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for glass-billet
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["glass-billet"] then
       local item = data.raw.item["glass-billet"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "glass-billet" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "glass-billet-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "glass-billet-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

215. PATCH_NEODYMIUM-ORE_GENERIC
   Description: Generic compatibility patch for item neodymium-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_NEODYMIUM-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for neodymium-ore
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["neodymium-ore"] then
       local item = data.raw.item["neodymium-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "neodymium-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "neodymium-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "neodymium-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

216. PATCH_INVERTED-MICROCUBE_GENERIC
   Description: Generic compatibility patch for item inverted-microcube
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_INVERTED-MICROCUBE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for inverted-microcube
   -- Fixes conflict between: corrundum, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["inverted-microcube"] then
       local item = data.raw.item["inverted-microcube"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "inverted-microcube" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "inverted-microcube-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "inverted-microcube-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

217. PATCH_INVERTED-DORMANT-MICROCUBE_GENERIC
   Description: Generic compatibility patch for item inverted-dormant-microcube
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_INVERTED-DORMANT-MICROCUBE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for inverted-dormant-microcube
   -- Fixes conflict between: corrundum, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["inverted-dormant-microcube"] then
       local item = data.raw.item["inverted-dormant-microcube"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "inverted-dormant-microcube" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "inverted-dormant-microcube-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "inverted-dormant-microcube-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

218. PATCH_RAW-FISH_GENERIC
   Description: Generic compatibility patch for item raw-fish
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_RAW-FISH

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for raw-fish
   -- Fixes conflict between: metal-and-stars, corrundum, enemyracemanager
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["raw-fish"] then
       local item = data.raw.item["raw-fish"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "raw-fish" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "raw-fish-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "raw-fish-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

219. PATCH_BITER-EGG_GENERIC
   Description: Generic compatibility patch for item biter-egg
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BITER-EGG

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for biter-egg
   -- Fixes conflict between: corrundum, Krastorio2-spaced-out, secretas, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["biter-egg"] then
       local item = data.raw.item["biter-egg"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "biter-egg" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "biter-egg-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "biter-egg-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

220. PATCH_LAB_GENERIC
   Description: Generic compatibility patch for item lab
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LAB

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for lab
   -- Fixes conflict between: corrundum, Moshine, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["lab"] then
       local item = data.raw.item["lab"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "lab" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "lab-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "lab-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

221. PATCH_ROCKET_GENERIC
   Description: Generic compatibility patch for item rocket
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ROCKET

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for rocket
   -- Fixes conflict between: corrundum, StopgapNukes, secretas, lilys-cubeine
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["rocket"] then
       local item = data.raw.item["rocket"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "rocket" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "rocket-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "rocket-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

222. PATCH_TUNGSTEN-CARBIDE_GENERIC
   Description: Generic compatibility patch for item tungsten-carbide
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TUNGSTEN-CARBIDE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for tungsten-carbide
   -- Fixes conflict between: cubium, lilys-cubeine, vulcanus-sulfuric-bacteria, crushing-industry, lignumis, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["tungsten-carbide"] then
       local item = data.raw.item["tungsten-carbide"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "tungsten-carbide" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "tungsten-carbide-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "tungsten-carbide-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

223. PATCH_TUNGSTEN-ORE_GENERIC
   Description: Generic compatibility patch for item tungsten-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TUNGSTEN-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for tungsten-ore
   -- Fixes conflict between: crushing-industry, vulcanus-sulfuric-bacteria
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["tungsten-ore"] then
       local item = data.raw.item["tungsten-ore"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "tungsten-ore" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "tungsten-ore-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "tungsten-ore-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

224. PATCH_LEAD-PLATE_GENERIC
   Description: Generic compatibility patch for item lead-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_LEAD-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for lead-plate
   -- Fixes conflict between: PlutoniumEnergy, crushing-industry
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["lead-plate"] then
       local item = data.raw.item["lead-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "lead-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "lead-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "lead-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

225. PATCH_TITANIUM-PLATE_GENERIC
   Description: Generic compatibility patch for item titanium-plate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TITANIUM-PLATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for titanium-plate
   -- Fixes conflict between: crushing-industry, Fluid-level-indicator
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["titanium-plate"] then
       local item = data.raw.item["titanium-plate"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "titanium-plate" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "titanium-plate-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "titanium-plate-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

226. PATCH_ENERGIZED-MICROCUBE_GENERIC
   Description: Generic compatibility patch for item energized-microcube
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ENERGIZED-MICROCUBE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for energized-microcube
   -- Fixes conflict between: cubium, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["energized-microcube"] then
       local item = data.raw.item["energized-microcube"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "energized-microcube" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "energized-microcube-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "energized-microcube-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

227. PATCH_DORMANT-MICROCUBE_GENERIC
   Description: Generic compatibility patch for item dormant-microcube
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_DORMANT-MICROCUBE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for dormant-microcube
   -- Fixes conflict between: cubium, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["dormant-microcube"] then
       local item = data.raw.item["dormant-microcube"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "dormant-microcube" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "dormant-microcube-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "dormant-microcube-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

228. PATCH_ICE_GENERIC
   Description: Generic compatibility patch for item ice
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_ICE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for ice
   -- Fixes conflict between: metal-and-stars, cubium, Krastorio2-spaced-out, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["ice"] then
       local item = data.raw.item["ice"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "ice" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "ice-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "ice-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

229. PATCH_JELLY_GENERIC
   Description: Generic compatibility patch for item jelly
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_JELLY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for jelly
   -- Fixes conflict between: cubium, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["jelly"] then
       local item = data.raw.item["jelly"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "jelly" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "jelly-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "jelly-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

230. PATCH_AUTOMATION-SCIENCE-PACK_GENERIC
   Description: Generic compatibility patch for item automation-science-pack
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_AUTOMATION-SCIENCE-PACK

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for automation-science-pack
   -- Fixes conflict between: cubium, Igrys
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["automation-science-pack"] then
       local item = data.raw.item["automation-science-pack"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "automation-science-pack" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "automation-science-pack-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "automation-science-pack-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

231. PATCH_RAIL_GENERIC
   Description: Generic compatibility patch for item rail
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_RAIL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for rail
   -- Fixes conflict between: foundry-restructuring, cubium
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["rail"] then
       local item = data.raw.item["rail"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "rail" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "rail-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "rail-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

232. PATCH_PROMETHIUM-ASTEROID-CHUNK_GENERIC
   Description: Generic compatibility patch for item promethium-asteroid-chunk
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_PROMETHIUM-ASTEROID-CHUNK

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for promethium-asteroid-chunk
   -- Fixes conflict between: slp-dyson-sphere-reworked, cubium, promethium-quality, VoidProcessing
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["promethium-asteroid-chunk"] then
       local item = data.raw.item["promethium-asteroid-chunk"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "promethium-asteroid-chunk" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "promethium-asteroid-chunk-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "promethium-asteroid-chunk-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

233. PATCH_TURBO-TRANSPORT-BELT_GENERIC
   Description: Generic compatibility patch for item turbo-transport-belt
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TURBO-TRANSPORT-BELT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for turbo-transport-belt
   -- Fixes conflict between: cubium, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["turbo-transport-belt"] then
       local item = data.raw.item["turbo-transport-belt"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "turbo-transport-belt" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "turbo-transport-belt-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "turbo-transport-belt-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

234. PATCH_TURBO-UNDERGROUND-BELT_GENERIC
   Description: Generic compatibility patch for item turbo-underground-belt
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TURBO-UNDERGROUND-BELT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for turbo-underground-belt
   -- Fixes conflict between: cubium, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["turbo-underground-belt"] then
       local item = data.raw.item["turbo-underground-belt"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "turbo-underground-belt" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "turbo-underground-belt-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "turbo-underground-belt-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

235. PATCH_TURBO-SPLITTER_GENERIC
   Description: Generic compatibility patch for item turbo-splitter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_TURBO-SPLITTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for turbo-splitter
   -- Fixes conflict between: cubium, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["turbo-splitter"] then
       local item = data.raw.item["turbo-splitter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "turbo-splitter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "turbo-splitter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "turbo-splitter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

236. PATCH_FOUNDRY_GENERIC
   Description: Generic compatibility patch for item foundry
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_FOUNDRY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for foundry
   -- Fixes conflict between: cubium, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["foundry"] then
       local item = data.raw.item["foundry"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "foundry" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "foundry-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "foundry-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

237. PATCH_EFFICIENCY-MODULE_GENERIC
   Description: Generic compatibility patch for item efficiency-module
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_EFFICIENCY-MODULE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for efficiency-module
   -- Fixes conflict between: Electric Furnaces, Hovercrafts
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["efficiency-module"] then
       local item = data.raw.item["efficiency-module"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "efficiency-module" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "efficiency-module-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "efficiency-module-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

238. PATCH_SMALL-LAMP_GENERIC
   Description: Generic compatibility patch for item small-lamp
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SMALL-LAMP

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for small-lamp
   -- Fixes conflict between: terrapalus, secretas, metal-and-stars, Krastorio2-spaced-out, Fluid-level-indicator
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["small-lamp"] then
       local item = data.raw.item["small-lamp"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "small-lamp" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "small-lamp-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "small-lamp-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

239. PATCH_KR-STEEL-PIPE_GENERIC
   Description: Generic compatibility patch for item kr-steel-pipe
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_KR-STEEL-PIPE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for kr-steel-pipe
   -- Fixes conflict between: Krastorio2-spaced-out, Fluid-level-indicator
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["kr-steel-pipe"] then
       local item = data.raw.item["kr-steel-pipe"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "kr-steel-pipe" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "kr-steel-pipe-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "kr-steel-pipe-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

240. PATCH_STACK-INSERTER_GENERIC
   Description: Generic compatibility patch for item stack-inserter
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_STACK-INSERTER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for stack-inserter
   -- Fixes conflict between: long_stack_inserter, Krastorio2-spaced-out
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["stack-inserter"] then
       local item = data.raw.item["stack-inserter"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "stack-inserter" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "stack-inserter-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "stack-inserter-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

241. PATCH_WOOD-DARTS-MAGAZINE_GENERIC
   Description: Generic compatibility patch for item wood-darts-magazine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_WOOD-DARTS-MAGAZINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for wood-darts-magazine
   -- Fixes conflict between: lignumis, wood-military
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["wood-darts-magazine"] then
       local item = data.raw.item["wood-darts-magazine"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "wood-darts-magazine" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "wood-darts-magazine-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "wood-darts-magazine-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

242. PATCH_WOOD-ARMOR_GENERIC
   Description: Generic compatibility patch for item wood-armor
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_WOOD-ARMOR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for wood-armor
   -- Fixes conflict between: lignumis, wood-military
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["wood-armor"] then
       local item = data.raw.item["wood-armor"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "wood-armor" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "wood-armor-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "wood-armor-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

243. PATCH_BIG-MINING-DRILL_GENERIC
   Description: Generic compatibility patch for item big-mining-drill
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_BIG-MINING-DRILL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for big-mining-drill
   -- Fixes conflict between: OmegaDrill, lilys-cubeine
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["big-mining-drill"] then
       local item = data.raw.item["big-mining-drill"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "big-mining-drill" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "big-mining-drill-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "big-mining-drill-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

244. PATCH_CANNON-SHELL_GENERIC
   Description: Generic compatibility patch for item cannon-shell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CANNON-SHELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for cannon-shell
   -- Fixes conflict between: PlutoniumEnergy, lilys-cubeine
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["cannon-shell"] then
       local item = data.raw.item["cannon-shell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "cannon-shell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "cannon-shell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "cannon-shell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

245. PATCH_SPACE-PLATFORM-FOUNDATION_GENERIC
   Description: Generic compatibility patch for item space-platform-foundation
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_SPACE-PLATFORM-FOUNDATION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for space-platform-foundation
   -- Fixes conflict between: metal-and-stars, Moshine, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["space-platform-foundation"] then
       local item = data.raw.item["space-platform-foundation"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "space-platform-foundation" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "space-platform-foundation-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "space-platform-foundation-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

246. PATCH_NEODYMIUM_GENERIC
   Description: Generic compatibility patch for item neodymium
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_NEODYMIUM

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for neodymium
   -- Fixes conflict between: Moshine, Moshine-assets
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["neodymium"] then
       local item = data.raw.item["neodymium"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "neodymium" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "neodymium-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "neodymium-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

247. PATCH_DISPLAY-PANEL_GENERIC
   Description: Generic compatibility patch for item display-panel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_DISPLAY-PANEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for display-panel
   -- Fixes conflict between: Moshine, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["display-panel"] then
       local item = data.raw.item["display-panel"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "display-panel" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "display-panel-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "display-panel-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

248. PATCH_CONSTANT-COMBINATOR_GENERIC
   Description: Generic compatibility patch for item constant-combinator
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CONSTANT-COMBINATOR

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for constant-combinator
   -- Fixes conflict between: PavementDriveAssistContinued, Moshine, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["constant-combinator"] then
       local item = data.raw.item["constant-combinator"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "constant-combinator" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "constant-combinator-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "constant-combinator-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

249. PATCH_DEPLETED-URANIUM-FUEL-CELL_GENERIC
   Description: Generic compatibility patch for item depleted-uranium-fuel-cell
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_DEPLETED-URANIUM-FUEL-CELL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for depleted-uranium-fuel-cell
   -- Fixes conflict between: PlutoniumEnergy, StopgapNukes, secretas
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["depleted-uranium-fuel-cell"] then
       local item = data.raw.item["depleted-uranium-fuel-cell"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "depleted-uranium-fuel-cell" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "depleted-uranium-fuel-cell-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "depleted-uranium-fuel-cell-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

250. PATCH_JR-BORAX_GENERIC
   Description: Generic compatibility patch for item jr-borax
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_JR-BORAX

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for jr-borax
   -- Fixes conflict between: quirkycat_boron, quirkycat_base
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["jr-borax"] then
       local item = data.raw.item["jr-borax"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "jr-borax" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "jr-borax-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "jr-borax-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

251. PATCH_JR-BORON_GENERIC
   Description: Generic compatibility patch for item jr-boron
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_JR-BORON

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for jr-boron
   -- Fixes conflict between: quirkycat_boron, quirkycat_base
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["jr-boron"] then
       local item = data.raw.item["jr-boron"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "jr-boron" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "jr-boron-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "jr-boron-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

252. PATCH_JR-BORON-ROD_GENERIC
   Description: Generic compatibility patch for item jr-boron-rod
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_JR-BORON-ROD

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for jr-boron-rod
   -- Fixes conflict between: quirkycat_boron, quirkycat_base
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["jr-boron-rod"] then
       local item = data.raw.item["jr-boron-rod"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "jr-boron-rod" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "jr-boron-rod-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "jr-boron-rod-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

253. PATCH_CHARCOAL_GENERIC
   Description: Generic compatibility patch for item charcoal
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: MEDIUM
   Fixes Issues: CONFLICT_ITEM_CHARCOAL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for charcoal
   -- Fixes conflict between: quirkycat_machines, wood-industry, quirkycat_base
   -- Severity: MEDIUM
   -- Type: item
   
   
   if data.raw.item["charcoal"] then
       local item = data.raw.item["charcoal"]
       
       -- Skip creating alternatives if original item has no icon (required for items)
       if not item.icon then
           log("Factorio Harmonizer: Skipping alternatives for " .. "charcoal" .. " - no icon found")
           return
       end
       
       -- Ensure item compatibility across mods
       -- Create alternative versions if needed
       
       -- Alternative 1: Basic version
       local basic_item = {
           type = "item",
           name = "charcoal-basic",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = item.stack_size or 100,
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-basic"
       }
       
       data:extend({basic_item})
       
       -- Alternative 2: Advanced version
       local advanced_item = {
           type = "item",
           name = "charcoal-advanced",
           icon = item.icon,
           icon_size = item.icon_size or 64,
           stack_size = math.max(1, math.floor((item.stack_size or 100) * 0.5)),
           subgroup = item.subgroup or "intermediate-product",
           order = (item.order or "a") .. "-advanced"
       }
       
       data:extend({advanced_item})
   end
   

254. PATCH_WATER_GENERIC
   Description: Generic compatibility patch for fluid water
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_WATER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for water
   -- Fixes conflict between: aai-industry, Cold_biters, StopgapNukes, crushing-industry, terrapalus, bobelectronics, cubium, bobgreenhouse, corrundum, wood-industry, Cerys-Moon-of-Fulgora, planet-muluna, Moshine-assets, dea-dia-system, WaterExtractor, cerys-lunaponics, secretas, quirkycat_boron, Paracelsin, bobplates, castra, vulcanus-sulfuric-bacteria, astroponics, metal-and-stars, lignumis, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["water"] then
       local prototype = data.raw["fluid"]["water"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.water")
   end
   

255. PATCH_CRUDE-OIL_GENERIC
   Description: Generic compatibility patch for fluid crude-oil
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_CRUDE-OIL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for crude-oil
   -- Fixes conflict between: planet-muluna, bobplates, aai-industry, castra, boblogistics, astroponics, metal-and-stars, bobelectronics, janus
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["crude-oil"] then
       local prototype = data.raw["fluid"]["crude-oil"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.crude-oil")
   end
   

256. PATCH_HEAVY-OIL_GENERIC
   Description: Generic compatibility patch for fluid heavy-oil
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_HEAVY-OIL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for heavy-oil
   -- Fixes conflict between: planet-muluna, bobplates, aai-industry, lilys-cubeine, castra, boblogistics, terrapalus, metal-and-stars, secretas, wood-industry, bobelectronics, corrundum, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["heavy-oil"] then
       local prototype = data.raw["fluid"]["heavy-oil"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.heavy-oil")
   end
   

257. PATCH_LIGHT-OIL_GENERIC
   Description: Generic compatibility patch for fluid light-oil
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_LIGHT-OIL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for light-oil
   -- Fixes conflict between: cubium, planet-muluna, bobplates, aai-industry, lilys-cubeine, Cold_biters, castra, boblogistics, metal-and-stars, wood-industry, bobelectronics, corrundum, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["light-oil"] then
       local prototype = data.raw["fluid"]["light-oil"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.light-oil")
   end
   

258. PATCH_PETROLEUM-GAS_GENERIC
   Description: Generic compatibility patch for fluid petroleum-gas
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_PETROLEUM-GAS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for petroleum-gas
   -- Fixes conflict between: cubium, Moshine-assets, planet-muluna, bobplates, bobgreenhouse, aai-industry, lilys-cubeine, VoidProcessing, Cold_biters, castra, boblogistics, wood-industry, bobelectronics, corrundum, StopgapNukes, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["petroleum-gas"] then
       local prototype = data.raw["fluid"]["petroleum-gas"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.petroleum-gas")
   end
   

259. PATCH_VIRTUAL-SIGNAL-UTILITY_GENERIC
   Description: Generic compatibility patch for item-subgroup virtual-signal-utility
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_VIRTUAL-SIGNAL-UTILITY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for virtual-signal-utility
   -- Fixes conflict between: informatron, aai-signals
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["virtual-signal-utility"] then
       local prototype = data.raw["item-subgroup"]["virtual-signal-utility"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.virtual-signal-utility")
   end
   

260. PATCH_SIGNAL-WAYPOINT_GENERIC
   Description: Generic compatibility patch for virtual-signal signal-waypoint
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_VIRTUAL-SIGNAL_SIGNAL-WAYPOINT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for signal-waypoint
   -- Fixes conflict between: SpidertronPatrols, aai-signals
   -- Severity: LOW
   -- Type: virtual-signal
   
   
   if data.raw["virtual-signal"] and data.raw["virtual-signal"]["signal-waypoint"] then
       local prototype = data.raw["virtual-signal"]["signal-waypoint"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual-signal.signal-waypoint")
   end
   

261. PATCH_FLAMETHROWER-AMMO_GENERIC
   Description: Generic compatibility patch for ammo flamethrower-ammo
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_AMMO_FLAMETHROWER-AMMO

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for flamethrower-ammo
   -- Fixes conflict between: aai-vehicles-flame-tumbler, aai-vehicles-flame-tank
   -- Severity: LOW
   -- Type: ammo
   
   
   if data.raw["ammo"] and data.raw["ammo"]["flamethrower-ammo"] then
       local prototype = data.raw["ammo"]["flamethrower-ammo"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "ammo.flamethrower-ammo")
   end
   

262. PATCH_MEDIUM-SCORCHMARK-TINTABLE_GENERIC
   Description: Generic compatibility patch for create-entity medium-scorchmark-tintable
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-ENTITY_MEDIUM-SCORCHMARK-TINTABLE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for medium-scorchmark-tintable
   -- Fixes conflict between: Moshine, aai-vehicles-ironclad, StopgapNukes
   -- Severity: LOW
   -- Type: create-entity
   
   
   if data.raw["create-entity"] and data.raw["create-entity"]["medium-scorchmark-tintable"] then
       local prototype = data.raw["create-entity"]["medium-scorchmark-tintable"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.medium-scorchmark-tintable")
   end
   

263. PATCH_EXPLOSION_GENERIC
   Description: Generic compatibility patch for create-entity explosion
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-ENTITY_EXPLOSION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for explosion
   -- Fixes conflict between: cubium, RampantFixed, More_Ammo, aai-vehicles-ironclad, wood-military, RPGsystem, bobvehicleequipment, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: create-entity
   
   
   if data.raw["create-entity"] and data.raw["create-entity"]["explosion"] then
       local prototype = data.raw["create-entity"]["explosion"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.explosion")
   end
   

264. PATCH_ADVANCED-CENTRIFUGING-OR-CRAFTING_GENERIC
   Description: Generic compatibility patch for recipe-category advanced-centrifuging-or-crafting
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_ADVANCED-CENTRIFUGING-OR-CRAFTING

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for advanced-centrifuging-or-crafting
   -- Fixes conflict between: Age-of-Production, atan-nuclear-science
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["advanced-centrifuging-or-crafting"] then
       local prototype = data.raw["recipe-category"]["advanced-centrifuging-or-crafting"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.advanced-centrifuging-or-crafting")
   end
   

265. PATCH_BIG-EXPLOSION_GENERIC
   Description: Generic compatibility patch for create-entity big-explosion
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-ENTITY_BIG-EXPLOSION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for big-explosion
   -- Fixes conflict between: RPGsystem, StopgapNukes, Krastorio2-spaced-out, Aircraft-space-age
   -- Severity: LOW
   -- Type: create-entity
   
   
   if data.raw["create-entity"] and data.raw["create-entity"]["big-explosion"] then
       local prototype = data.raw["create-entity"]["big-explosion"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.big-explosion")
   end
   

266. PATCH_EXPLOSION-GUNSHOT_GENERIC
   Description: Generic compatibility patch for create-explosion explosion-gunshot
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-EXPLOSION_EXPLOSION-GUNSHOT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for explosion-gunshot
   -- Fixes conflict between: More_Ammo, PlutoniumEnergy, Aircraft-space-age, alien-module, vtk-cannon-turret, StopgapNukes, metal-and-stars, lignumis, Krastorio2-spaced-out, grappling-gun
   -- Severity: LOW
   -- Type: create-explosion
   
   
   if data.raw["create-explosion"] and data.raw["create-explosion"]["explosion-gunshot"] then
       local prototype = data.raw["create-explosion"]["explosion-gunshot"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.explosion-gunshot")
   end
   

267. PATCH_LUBRICANT_GENERIC
   Description: Generic compatibility patch for fluid lubricant
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_LUBRICANT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for lubricant
   -- Fixes conflict between: bobplates, dea-dia-system, lilys-cubeine, Hovercrafts, Cold_biters, Aircraft-space-age, castra, tenebris-prime, secretas, metal-and-stars, promethium-quality, Cerys-Moon-of-Fulgora
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["lubricant"] then
       local prototype = data.raw["fluid"]["lubricant"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.lubricant")
   end
   

268. PATCH_EXPLOSION-HIT_GENERIC
   Description: Generic compatibility patch for create-entity explosion-hit
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-ENTITY_EXPLOSION-HIT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for explosion-hit
   -- Fixes conflict between: Electric_flying_enemies, PlutoniumEnergy, alien-module, corrundum, StopgapNukes, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: create-entity
   
   
   if data.raw["create-entity"] and data.raw["create-entity"]["explosion-hit"] then
       local prototype = data.raw["create-entity"]["explosion-hit"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.explosion-hit")
   end
   

269. PATCH_AMMONIA_GENERIC
   Description: Generic compatibility patch for fluid ammonia
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_AMMONIA

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for ammonia
   -- Fixes conflict between: aquilo-seabloom-algaculture, cubium, promethium-quality, cerys-lunaponics, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["ammonia"] then
       local prototype = data.raw["fluid"]["ammonia"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.ammonia")
   end
   

270. PATCH_STEAM_GENERIC
   Description: Generic compatibility patch for fluid steam
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_STEAM

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for steam
   -- Fixes conflict between: aquilo-seabloom-algaculture, cubium, Moshine-assets, bobplates, dea-dia-system, Cold_biters, vulcanus-sulfuric-bacteria, Moshine, secretas, wood-industry, corrundum, lignumis, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["steam"] then
       local prototype = data.raw["fluid"]["steam"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.steam")
   end
   

271. PATCH_FLUOROKETONE-HOT_GENERIC
   Description: Generic compatibility patch for fluid fluoroketone-hot
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_FLUOROKETONE-HOT

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fluoroketone-hot
   -- Fixes conflict between: aquilo-seabloom-algaculture, corrundum, VoidProcessing, cubium
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["fluoroketone-hot"] then
       local prototype = data.raw["fluid"]["fluoroketone-hot"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.fluoroketone-hot")
   end
   

272. PATCH_FLUOROKETONE-COLD_GENERIC
   Description: Generic compatibility patch for fluid fluoroketone-cold
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_FLUOROKETONE-COLD

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fluoroketone-cold
   -- Fixes conflict between: aquilo-seabloom-algaculture, cubium, promethium-quality, VoidProcessing, metal-and-stars, corrundum, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["fluoroketone-cold"] then
       local prototype = data.raw["fluid"]["fluoroketone-cold"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.fluoroketone-cold")
   end
   

273. PATCH_LIQUID-FERTILIZER_GENERIC
   Description: Generic compatibility patch for fluid liquid-fertilizer
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_LIQUID-FERTILIZER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for liquid-fertilizer
   -- Fixes conflict between: astroponics, lilys-cubeine, cerys-lunaponics
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["liquid-fertilizer"] then
       local prototype = data.raw["fluid"]["liquid-fertilizer"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.liquid-fertilizer")
   end
   

274. PATCH_BIOSLURRY_GENERIC
   Description: Generic compatibility patch for fluid bioslurry
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_BIOSLURRY

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bioslurry
   -- Fixes conflict between: astroponics, lilys-cubeine
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["bioslurry"] then
       local prototype = data.raw["fluid"]["bioslurry"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bioslurry")
   end
   

275. PATCH_SULFURIC-ACID_GENERIC
   Description: Generic compatibility patch for fluid sulfuric-acid
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_SULFURIC-ACID

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for sulfuric-acid
   -- Fixes conflict between: slp-dyson-sphere-reworked, cubium, bobplates, More_Ammo, PlutoniumEnergy, Cold_biters, castra, tenebris-prime, vulcanus-sulfuric-bacteria, Moshine, crushing-industry, astroponics, se-space-trains, wood-industry, bobelectronics, corrundum, Krastorio2-spaced-out, Cerys-Moon-of-Fulgora
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["sulfuric-acid"] then
       local prototype = data.raw["fluid"]["sulfuric-acid"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.sulfuric-acid")
   end
   

276. PATCH_ARTILLERY-CANNON-MUZZLE-FLASH_GENERIC
   Description: Generic compatibility patch for create-explosion artillery-cannon-muzzle-flash
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-EXPLOSION_ARTILLERY-CANNON-MUZZLE-FLASH

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for artillery-cannon-muzzle-flash
   -- Fixes conflict between: PlutoniumEnergy, atomic-artillery-reborn, wood-military, StopgapNukes, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: create-explosion
   
   
   if data.raw["create-explosion"] and data.raw["create-explosion"]["artillery-cannon-muzzle-flash"] then
       local prototype = data.raw["create-explosion"]["artillery-cannon-muzzle-flash"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.artillery-cannon-muzzle-flash")
   end
   

277. PATCH_BOB-ELECTRONICS_GENERIC
   Description: Generic compatibility patch for recipe-category bob-electronics
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electronics
   -- Fixes conflict between: bobelectronics, bobassembly
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics"] then
       local prototype = data.raw["recipe-category"]["bob-electronics"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics")
   end
   

278. PATCH_BOB-ELECTRONICS-MACHINE_GENERIC
   Description: Generic compatibility patch for recipe-category bob-electronics-machine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS-MACHINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electronics-machine
   -- Fixes conflict between: bobelectronics, bobassembly
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics-machine"] then
       local prototype = data.raw["recipe-category"]["bob-electronics-machine"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics-machine")
   end
   

279. PATCH_BOB-ELECTRONICS-WITH-FLUID_GENERIC
   Description: Generic compatibility patch for recipe-category bob-electronics-with-fluid
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_BOB-ELECTRONICS-WITH-FLUID

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electronics-with-fluid
   -- Fixes conflict between: bobelectronics, bobassembly
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["bob-electronics-with-fluid"] then
       local prototype = data.raw["recipe-category"]["bob-electronics-with-fluid"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.bob-electronics-with-fluid")
   end
   

280. PATCH_BOB-ASSEMBLY-MACHINE_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-assembly-machine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-ASSEMBLY-MACHINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-assembly-machine
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-assembly-machine"] then
       local prototype = data.raw["item-subgroup"]["bob-assembly-machine"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-assembly-machine")
   end
   

281. PATCH_BOB-CHEMICAL-MACHINE_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-chemical-machine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-CHEMICAL-MACHINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-chemical-machine
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-chemical-machine"] then
       local prototype = data.raw["item-subgroup"]["bob-chemical-machine"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-chemical-machine")
   end
   

282. PATCH_BOB-ELECTROLYSER-MACHINE_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-electrolyser-machine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-ELECTROLYSER-MACHINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electrolyser-machine
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electrolyser-machine"] then
       local prototype = data.raw["item-subgroup"]["bob-electrolyser-machine"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electrolyser-machine")
   end
   

283. PATCH_BOB-REFINERY-MACHINE_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-refinery-machine
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-REFINERY-MACHINE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-refinery-machine
   -- Fixes conflict between: bobassembly, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-refinery-machine"] then
       local prototype = data.raw["item-subgroup"]["bob-refinery-machine"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-refinery-machine")
   end
   

284. PATCH_BOB-RESOURCE_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-resource
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-RESOURCE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-resource
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-resource"] then
       local prototype = data.raw["item-subgroup"]["bob-resource"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-resource")
   end
   

285. PATCH_BOB-ELECTRONIC-COMPONENTS_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-electronic-components
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-ELECTRONIC-COMPONENTS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electronic-components
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electronic-components"] then
       local prototype = data.raw["item-subgroup"]["bob-electronic-components"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electronic-components")
   end
   

286. PATCH_BOB-BOARDS_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-boards
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-BOARDS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-boards
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-boards"] then
       local prototype = data.raw["item-subgroup"]["bob-boards"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-boards")
   end
   

287. PATCH_BOB-ELECTRONIC-BOARDS_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-electronic-boards
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-ELECTRONIC-BOARDS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-electronic-boards
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-electronic-boards"] then
       local prototype = data.raw["item-subgroup"]["bob-electronic-boards"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-electronic-boards")
   end
   

288. PATCH_BOB-FERRIC-CHLORIDE-SOLUTION_GENERIC
   Description: Generic compatibility patch for fluid bob-ferric-chloride-solution
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_BOB-FERRIC-CHLORIDE-SOLUTION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-ferric-chloride-solution
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["bob-ferric-chloride-solution"] then
       local prototype = data.raw["fluid"]["bob-ferric-chloride-solution"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-ferric-chloride-solution")
   end
   

289. PATCH_BOB-COMPUTER-AGE-1_GENERIC
   Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-1
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-1

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-computer-age-1
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: produce-per-hour-achievement
   
   
   if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-1"] then
       local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-1"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-1")
   end
   

290. PATCH_BOB-COMPUTER-AGE-2_GENERIC
   Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-2
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-2

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-computer-age-2
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: produce-per-hour-achievement
   
   
   if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-2"] then
       local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-2"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-2")
   end
   

291. PATCH_BOB-COMPUTER-AGE-3_GENERIC
   Description: Generic compatibility patch for produce-per-hour-achievement bob-computer-age-3
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_PRODUCE-PER-HOUR-ACHIEVEMENT_BOB-COMPUTER-AGE-3

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-computer-age-3
   -- Fixes conflict between: bobelectronics, bobplates
   -- Severity: LOW
   -- Type: produce-per-hour-achievement
   
   
   if data.raw["produce-per-hour-achievement"] and data.raw["produce-per-hour-achievement"]["bob-computer-age-3"] then
       local prototype = data.raw["produce-per-hour-achievement"]["bob-computer-age-3"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "produce-per-hour-achievement.bob-computer-age-3")
   end
   

292. PATCH_BOB-PLASMA_GENERIC
   Description: Generic compatibility patch for damage-type bob-plasma
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_DAMAGE-TYPE_BOB-PLASMA

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-plasma
   -- Fixes conflict between: bobenemies, bobvehicleequipment
   -- Severity: LOW
   -- Type: damage-type
   
   
   if data.raw["damage-type"] and data.raw["damage-type"]["bob-plasma"] then
       local prototype = data.raw["damage-type"]["bob-plasma"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.bob-plasma")
   end
   

293. PATCH_BOB-INSERTER-LONG_GENERIC
   Description: Generic compatibility patch for custom-input bob-inserter-long
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CUSTOM-INPUT_BOB-INSERTER-LONG

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-inserter-long
   -- Fixes conflict between: boblogistics, bobinserters
   -- Severity: LOW
   -- Type: custom-input
   
   
   if data.raw["custom-input"] and data.raw["custom-input"]["bob-inserter-long"] then
       local prototype = data.raw["custom-input"]["bob-inserter-long"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "custom-input.bob-inserter-long")
   end
   

294. PATCH_SIGNAL-X_GENERIC
   Description: Generic compatibility patch for virtual signal-X
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_VIRTUAL_SIGNAL-X

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for signal-X
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: virtual
   
   
   if data.raw["virtual"] and data.raw["virtual"]["signal-X"] then
       local prototype = data.raw["virtual"]["signal-X"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-X")
   end
   

295. PATCH_SIGNAL-Y_GENERIC
   Description: Generic compatibility patch for virtual signal-Y
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_VIRTUAL_SIGNAL-Y

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for signal-Y
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: virtual
   
   
   if data.raw["virtual"] and data.raw["virtual"]["signal-Y"] then
       local prototype = data.raw["virtual"]["signal-Y"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-Y")
   end
   

296. PATCH_SIGNAL-Z_GENERIC
   Description: Generic compatibility patch for virtual signal-Z
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_VIRTUAL_SIGNAL-Z

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for signal-Z
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: virtual
   
   
   if data.raw["virtual"] and data.raw["virtual"]["signal-Z"] then
       local prototype = data.raw["virtual"]["signal-Z"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-Z")
   end
   

297. PATCH_SIGNAL-T_GENERIC
   Description: Generic compatibility patch for virtual signal-T
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_VIRTUAL_SIGNAL-T

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for signal-T
   -- Fixes conflict between: boblogistics, Krastorio2-spaced-out, RampantFixed
   -- Severity: LOW
   -- Type: virtual
   
   
   if data.raw["virtual"] and data.raw["virtual"]["signal-T"] then
       local prototype = data.raw["virtual"]["signal-T"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-T")
   end
   

298. PATCH_BOB-ORES_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-ores
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-ORES

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-ores
   -- Fixes conflict between: bobores, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-ores"] then
       local prototype = data.raw["item-subgroup"]["bob-ores"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-ores")
   end
   

299. PATCH_BOB-GEMS-ORE_GENERIC
   Description: Generic compatibility patch for item-subgroup bob-gems-ore
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_BOB-GEMS-ORE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-gems-ore
   -- Fixes conflict between: bobores, bobplates
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["bob-gems-ore"] then
       local prototype = data.raw["item-subgroup"]["bob-gems-ore"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.bob-gems-ore")
   end
   

300. PATCH_BOB-ALIEN-ACID_GENERIC
   Description: Generic compatibility patch for fluid bob-alien-acid
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_BOB-ALIEN-ACID

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for bob-alien-acid
   -- Fixes conflict between: bobvehicleequipment, bobplates
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["bob-alien-acid"] then
       local prototype = data.raw["fluid"]["bob-alien-acid"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.bob-alien-acid")
   end
   

301. PATCH_SIGNAL-A_GENERIC
   Description: Generic compatibility patch for virtual signal-A
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_VIRTUAL_SIGNAL-A

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for signal-A
   -- Fixes conflict between: metal-and-stars, bobpower, Krastorio2-spaced-out, snouz-big-accumulator
   -- Severity: LOW
   -- Type: virtual
   
   
   if data.raw["virtual"] and data.raw["virtual"]["signal-A"] then
       local prototype = data.raw["virtual"]["signal-A"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "virtual.signal-A")
   end
   

302. PATCH_SMALL-SCORCHMARK_GENERIC
   Description: Generic compatibility patch for create-entity small-scorchmark
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-ENTITY_SMALL-SCORCHMARK

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for small-scorchmark
   -- Fixes conflict between: Krastorio2-spaced-out, PlutoniumEnergy, bobvehicleequipment
   -- Severity: LOW
   -- Type: create-entity
   
   
   if data.raw["create-entity"] and data.raw["create-entity"]["small-scorchmark"] then
       local prototype = data.raw["create-entity"]["small-scorchmark"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.small-scorchmark")
   end
   

303. PATCH_HYDROGEN-SULFIDE_GENERIC
   Description: Generic compatibility patch for fluid hydrogen-sulfide
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_HYDROGEN-SULFIDE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for hydrogen-sulfide
   -- Fixes conflict between: corrundum, StopgapNukes, castra
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["hydrogen-sulfide"] then
       local prototype = data.raw["fluid"]["hydrogen-sulfide"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.hydrogen-sulfide")
   end
   

304. PATCH_MOLTEN-IRON_GENERIC
   Description: Generic compatibility patch for fluid molten-iron
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_MOLTEN-IRON

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for molten-iron
   -- Fixes conflict between: Paracelsin, Moshine-assets, foundry-restructuring, common-prototypes, castra, Moshine, crushing-industry, metal-and-stars, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["molten-iron"] then
       local prototype = data.raw["fluid"]["molten-iron"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-iron")
   end
   

305. PATCH_HOLMIUM-SOLUTION_GENERIC
   Description: Generic compatibility patch for fluid holmium-solution
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_HOLMIUM-SOLUTION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for holmium-solution
   -- Fixes conflict between: Cerys-Moon-of-Fulgora, castra, fulgora-coralmium-agriculture
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["holmium-solution"] then
       local prototype = data.raw["fluid"]["holmium-solution"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.holmium-solution")
   end
   

306. PATCH_METHANE_GENERIC
   Description: Generic compatibility patch for fluid methane
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_METHANE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for methane
   -- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["methane"] then
       local prototype = data.raw["fluid"]["methane"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.methane")
   end
   

307. PATCH_NITRIC-ACID_GENERIC
   Description: Generic compatibility patch for fluid nitric-acid
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_NITRIC-ACID

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for nitric-acid
   -- Fixes conflict between: Cerys-Moon-of-Fulgora, cerys-lunaponics
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["nitric-acid"] then
       local prototype = data.raw["fluid"]["nitric-acid"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.nitric-acid")
   end
   

308. PATCH_COLD_GENERIC
   Description: Generic compatibility patch for damage-type cold
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_DAMAGE-TYPE_COLD

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for cold
   -- Fixes conflict between: Cold_biters, enemyracemanager
   -- Severity: LOW
   -- Type: damage-type
   
   
   if data.raw["damage-type"] and data.raw["damage-type"]["cold"] then
       local prototype = data.raw["damage-type"]["cold"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.cold")
   end
   

309. PATCH_SPACE-NANITES_GENERIC
   Description: Generic compatibility patch for item-subgroup space-nanites
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_SPACE-NANITES

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for space-nanites
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["space-nanites"] then
       local prototype = data.raw["item-subgroup"]["space-nanites"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.space-nanites")
   end
   

310. PATCH_SHIPYARD-PROCESSES_GENERIC
   Description: Generic compatibility patch for item-subgroup shipyard-processes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_SHIPYARD-PROCESSES

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for shipyard-processes
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["shipyard-processes"] then
       local prototype = data.raw["item-subgroup"]["shipyard-processes"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.shipyard-processes")
   end
   

311. PATCH_NIX-PROCESSES_GENERIC
   Description: Generic compatibility patch for item-subgroup nix-processes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_NIX-PROCESSES

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for nix-processes
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["nix-processes"] then
       local prototype = data.raw["item-subgroup"]["nix-processes"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.nix-processes")
   end
   

312. PATCH_RINGWORLD-PROCESSES_GENERIC
   Description: Generic compatibility patch for item-subgroup ringworld-processes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_RINGWORLD-PROCESSES

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for ringworld-processes
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["ringworld-processes"] then
       local prototype = data.raw["item-subgroup"]["ringworld-processes"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.ringworld-processes")
   end
   

313. PATCH_MIRANDUS-PROCESSES_GENERIC
   Description: Generic compatibility patch for item-subgroup mirandus-processes
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_MIRANDUS-PROCESSES

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for mirandus-processes
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["mirandus-processes"] then
       local prototype = data.raw["item-subgroup"]["mirandus-processes"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.mirandus-processes")
   end
   

314. PATCH_QUANTUM-PROCESSING_GENERIC
   Description: Generic compatibility patch for item-subgroup quantum-processing
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_QUANTUM-PROCESSING

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for quantum-processing
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["quantum-processing"] then
       local prototype = data.raw["item-subgroup"]["quantum-processing"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.quantum-processing")
   end
   

315. PATCH_QUANTUM-CONVERSION_GENERIC
   Description: Generic compatibility patch for item-subgroup quantum-conversion
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_QUANTUM-CONVERSION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for quantum-conversion
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["quantum-conversion"] then
       local prototype = data.raw["item-subgroup"]["quantum-conversion"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.quantum-conversion")
   end
   

316. PATCH_LIQUID-FUEL_GENERIC
   Description: Generic compatibility patch for item-subgroup liquid-fuel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_ITEM-SUBGROUP_LIQUID-FUEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for liquid-fuel
   -- Fixes conflict between: metal-and-stars, common-prototypes
   -- Severity: LOW
   -- Type: item-subgroup
   
   
   if data.raw["item-subgroup"] and data.raw["item-subgroup"]["liquid-fuel"] then
       local prototype = data.raw["item-subgroup"]["liquid-fuel"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "item-subgroup.liquid-fuel")
   end
   

317. PATCH_MOLTEN-GOLD_GENERIC
   Description: Generic compatibility patch for fluid molten-gold
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_MOLTEN-GOLD

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for molten-gold
   -- Fixes conflict between: lignumis, common-prototypes
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["molten-gold"] then
       local prototype = data.raw["fluid"]["molten-gold"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-gold")
   end
   

318. PATCH_MOLTEN-GLASS_GENERIC
   Description: Generic compatibility patch for fluid molten-glass
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_MOLTEN-GLASS

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for molten-glass
   -- Fixes conflict between: crushing-industry, common-prototypes
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["molten-glass"] then
       local prototype = data.raw["fluid"]["molten-glass"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-glass")
   end
   

319. PATCH_DREAM-CONCENTRATE_GENERIC
   Description: Generic compatibility patch for fluid dream-concentrate
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_DREAM-CONCENTRATE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for dream-concentrate
   -- Fixes conflict between: corrundum, secretas, cubium
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["dream-concentrate"] then
       local prototype = data.raw["fluid"]["dream-concentrate"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.dream-concentrate")
   end
   

320. PATCH_THRUSTER-FUEL_GENERIC
   Description: Generic compatibility patch for fluid thruster-fuel
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_THRUSTER-FUEL

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for thruster-fuel
   -- Fixes conflict between: slp-dyson-sphere-reworked, corrundum, VoidProcessing, cubium
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["thruster-fuel"] then
       local prototype = data.raw["fluid"]["thruster-fuel"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.thruster-fuel")
   end
   

321. PATCH_THRUSTER-OXIDIZER_GENERIC
   Description: Generic compatibility patch for fluid thruster-oxidizer
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_THRUSTER-OXIDIZER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for thruster-oxidizer
   -- Fixes conflict between: slp-dyson-sphere-reworked, corrundum, cubium
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["thruster-oxidizer"] then
       local prototype = data.raw["fluid"]["thruster-oxidizer"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.thruster-oxidizer")
   end
   

322. PATCH_BASIC-CRUSHING_GENERIC
   Description: Generic compatibility patch for recipe-category basic-crushing
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_BASIC-CRUSHING

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for basic-crushing
   -- Fixes conflict between: crushing-industry, quirkycat_base
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["basic-crushing"] then
       local prototype = data.raw["recipe-category"]["basic-crushing"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.basic-crushing")
   end
   

323. PATCH_BASIC-CRUSHING-OR-CRAFTING_GENERIC
   Description: Generic compatibility patch for recipe-category basic-crushing-or-crafting
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_BASIC-CRUSHING-OR-CRAFTING

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for basic-crushing-or-crafting
   -- Fixes conflict between: crushing-industry, wood-industry
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["basic-crushing-or-crafting"] then
       local prototype = data.raw["recipe-category"]["basic-crushing-or-crafting"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.basic-crushing-or-crafting")
   end
   

324. PATCH_LAVA_GENERIC
   Description: Generic compatibility patch for fluid lava
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_LAVA

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for lava
   -- Fixes conflict between: foundry-restructuring, crushing-industry, metal-and-stars, vulcanus-sulfuric-bacteria
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["lava"] then
       local prototype = data.raw["fluid"]["lava"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.lava")
   end
   

325. PATCH_SMALL-SCORCHMARK-TINTABLE_GENERIC
   Description: Generic compatibility patch for create-entity small-scorchmark-tintable
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-ENTITY_SMALL-SCORCHMARK-TINTABLE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for small-scorchmark-tintable
   -- Fixes conflict between: cubium, wood-military
   -- Severity: LOW
   -- Type: create-entity
   
   
   if data.raw["create-entity"] and data.raw["create-entity"]["small-scorchmark-tintable"] then
       local prototype = data.raw["create-entity"]["small-scorchmark-tintable"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-entity.small-scorchmark-tintable")
   end
   

326. PATCH_ULTRADENSE-LAVA_GENERIC
   Description: Generic compatibility patch for fluid ultradense-lava
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_ULTRADENSE-LAVA

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for ultradense-lava
   -- Fixes conflict between: cubium, lilys-cubeine
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["ultradense-lava"] then
       local prototype = data.raw["fluid"]["ultradense-lava"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.ultradense-lava")
   end
   

327. PATCH_MOLTEN-COPPER_GENERIC
   Description: Generic compatibility patch for fluid molten-copper
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_MOLTEN-COPPER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for molten-copper
   -- Fixes conflict between: metal-and-stars, cubium, Moshine-assets, Krastorio2-spaced-out
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["molten-copper"] then
       local prototype = data.raw["fluid"]["molten-copper"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.molten-copper")
   end
   

328. PATCH_ELECTROLYTE_GENERIC
   Description: Generic compatibility patch for fluid electrolyte
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_ELECTROLYTE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for electrolyte
   -- Fixes conflict between: cubium, fulgora-coralmium-agriculture
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["electrolyte"] then
       local prototype = data.raw["fluid"]["electrolyte"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.electrolyte")
   end
   

329. PATCH_HEALING_GENERIC
   Description: Generic compatibility patch for damage-type healing
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_DAMAGE-TYPE_HEALING

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for healing
   -- Fixes conflict between: enemyracemanager, RampantFixed
   -- Severity: LOW
   -- Type: damage-type
   
   
   if data.raw["damage-type"] and data.raw["damage-type"]["healing"] then
       local prototype = data.raw["damage-type"]["healing"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "damage-type.healing")
   end
   

330. PATCH_PROTOSS--ARCHON-HIT-EXPLOSION_GENERIC
   Description: Generic compatibility patch for create-explosion protoss--archon-hit-explosion
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-EXPLOSION_PROTOSS--ARCHON-HIT-EXPLOSION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for protoss--archon-hit-explosion
   -- Fixes conflict between: erm_toss, erm_toss_economy
   -- Severity: LOW
   -- Type: create-explosion
   
   
   if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--archon-hit-explosion"] then
       local prototype = data.raw["create-explosion"]["protoss--archon-hit-explosion"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--archon-hit-explosion")
   end
   

331. PATCH_PROTOSS--CORSAIR-EXPLOSION_GENERIC
   Description: Generic compatibility patch for create-explosion protoss--corsair-explosion
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-EXPLOSION_PROTOSS--CORSAIR-EXPLOSION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for protoss--corsair-explosion
   -- Fixes conflict between: erm_toss, erm_toss_economy
   -- Severity: LOW
   -- Type: create-explosion
   
   
   if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--corsair-explosion"] then
       local prototype = data.raw["create-explosion"]["protoss--corsair-explosion"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--corsair-explosion")
   end
   

332. PATCH_PROTOSS--DISRUPT-80_GENERIC
   Description: Generic compatibility patch for create-explosion protoss--disrupt-80
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-EXPLOSION_PROTOSS--DISRUPT-80

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for protoss--disrupt-80
   -- Fixes conflict between: erm_toss, erm_toss_economy
   -- Severity: LOW
   -- Type: create-explosion
   
   
   if data.raw["create-explosion"] and data.raw["create-explosion"]["protoss--disrupt-80"] then
       local prototype = data.raw["create-explosion"]["protoss--disrupt-80"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.protoss--disrupt-80")
   end
   

333. PATCH_MEDIUM-EXPLOSION_GENERIC
   Description: Generic compatibility patch for create-explosion medium-explosion
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-EXPLOSION_MEDIUM-EXPLOSION

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for medium-explosion
   -- Fixes conflict between: erm_zerg, erm_zerg_economy
   -- Severity: LOW
   -- Type: create-explosion
   
   
   if data.raw["create-explosion"] and data.raw["create-explosion"]["medium-explosion"] then
       local prototype = data.raw["create-explosion"]["medium-explosion"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-explosion.medium-explosion")
   end
   

334. PATCH_FIRE-FLAME_GENERIC
   Description: Generic compatibility patch for create-fire fire-flame
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-FIRE_FIRE-FLAME

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fire-flame
   -- Fixes conflict between: Kux-OrbitalIonCannon, RPGsystem
   -- Severity: LOW
   -- Type: create-fire
   
   
   if data.raw["create-fire"] and data.raw["create-fire"]["fire-flame"] then
       local prototype = data.raw["create-fire"]["fire-flame"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-fire.fire-flame")
   end
   

335. PATCH_FIRE-FLAME-ON-TREE_GENERIC
   Description: Generic compatibility patch for create-fire fire-flame-on-tree
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_CREATE-FIRE_FIRE-FLAME-ON-TREE

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for fire-flame-on-tree
   -- Fixes conflict between: More_Ammo, Kux-OrbitalIonCannon
   -- Severity: LOW
   -- Type: create-fire
   
   
   if data.raw["create-fire"] and data.raw["create-fire"]["fire-flame-on-tree"] then
       local prototype = data.raw["create-fire"]["fire-flame-on-tree"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "create-fire.fire-flame-on-tree")
   end
   

336. PATCH_HEAVY-WATER_GENERIC
   Description: Generic compatibility patch for fluid heavy-water
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_HEAVY-WATER

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for heavy-water
   -- Fixes conflict between: metal-and-stars, StopgapNukes
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["heavy-water"] then
       local prototype = data.raw["fluid"]["heavy-water"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.heavy-water")
   end
   

337. PATCH_RAW-DATA_GENERIC
   Description: Generic compatibility patch for fluid raw-data
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_FLUID_RAW-DATA

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for raw-data
   -- Fixes conflict between: Moshine, Moshine-assets
   -- Severity: LOW
   -- Type: fluid
   
   
   if data.raw["fluid"] and data.raw["fluid"]["raw-data"] then
       local prototype = data.raw["fluid"]["raw-data"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "fluid.raw-data")
   end
   

338. PATCH_PULVERISING_GENERIC
   Description: Generic compatibility patch for recipe-category pulverising
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_PULVERISING

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for pulverising
   -- Fixes conflict between: quirkycat_machines, quirkycat_base
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["pulverising"] then
       local prototype = data.raw["recipe-category"]["pulverising"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.pulverising")
   end
   

339. PATCH_JR-FOUNDRY-SMELTING_GENERIC
   Description: Generic compatibility patch for recipe-category jr-foundry-smelting
   Target: factorio-harmonizer-patch/data-final-fixes.lua
   Impact Level: LOW
   Fixes Issues: CONFLICT_RECIPE-CATEGORY_JR-FOUNDRY-SMELTING

   Generated Lua Code:
   ------------------------------
   
   -- Generic compatibility patch for jr-foundry-smelting
   -- Fixes conflict between: quirkycat_machines, quirkycat_base
   -- Severity: LOW
   -- Type: recipe-category
   
   
   if data.raw["recipe-category"] and data.raw["recipe-category"]["jr-foundry-smelting"] then
       local prototype = data.raw["recipe-category"]["jr-foundry-smelting"]
       
       -- Generic compatibility fixes
       -- Ensure prototype remains functional across mod combinations
       
       -- Log the conflict resolution
       log("Factorio Harmonizer: Applied generic compatibility patch for " .. "recipe-category.jr-foundry-smelting")
   end
   

💡 RECOMMENDATIONS
-------------------------
🔶 HIGH: Review high-priority issues for potential gameplay impact
📋 GENERAL: Consider mod load order optimization
✅ TESTING: Test all patches in a development environment before production use

======================================================================
Generated by Factorio Mod Harmonizer